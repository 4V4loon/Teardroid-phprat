{"version":3,"sources":["Components/Auth/Login/img/Washh.png","Components/Banner/Banner.js","Components/Card/BannerView.js","Components/API.js","Components/Overview/SelectStore.js","Components/Overview/OverviewPage.js","Components/Overview/OverView.js","Components/Version.js","Components/Neworder/addons.js","Components/Neworder/servicesList.js","Components/Neworder/Newordepageformodel.js","Components/Order/ModalStatus.js","Components/Order/Reschedule.js","Components/Order/OrderPage.js","Components/Order/Datatable.js","Components/Neworder/NewOrderPage.js","Components/Neworder/NewOrderCombiner.js","Components/Report/ReportTable.js","Components/Report/SelectionDropdown.js","Components/Report/Reports.js","Components/Report/ReportPage.js","Components/Matrics/storestatics/storestatics.js","Components/Matrics/storestatics/StoreReportPage.js","Components/Matrics/driverstatics/driverstatics.js","Components/Matrics/driverstatics/DriverReportPage.js","Components/Matrics/Revenuestatics/Revenuestatics.js","Components/Matrics/Revenuestatics/RevenueReportPage.js","Components/Matrics/coustmerstatics/coustmerstatics.js","Components/Matrics/coustmerstatics/coustmerReportPage.js","Components/Admin/CreateStore/Banner.js","Components/Admin/CreateStore/citydropdown.js","Components/Admin/CreateStore/services.js","Components/Admin/CreateStore/createstore.js","Components/Admin/CreateStore/createstorepage.js","Components/Admin/CreateUser/createuser.js","Components/Admin/CreateUser/createuserpage.js","Components/Admin/Createservice/Banner.js","Components/Admin/Createservice/servicecatagorydropdown.js","Components/Admin/Createservice/termswriter.js","Components/Admin/Createservice/AddonDropdown.js","Components/Admin/Createservice/Createservice.js","Components/Admin/Createservice/CreateservicePage.js","Components/Admin/StoreSetting/Banner.js","Components/Admin/StoreSetting/citydropdown.js","Components/Admin/StoreSetting/services.js","Components/Admin/StoreSetting/storesetting.js","Components/Admin/StoreSetting/ModalStatus.js","Components/Admin/StoreSetting/Storelist.js","Components/Admin/StoreSetting/StoresettingPage.js","Components/Admin/Usersetting/usersetting.js","Components/Admin/Usersetting/ModalStatus.js","Components/Admin/Usersetting/UserList.js","Components/Admin/Usersetting/Usersettingpage.js","Components/Admin/Generalsetting/generalsetting.js","Components/Admin/Generalsetting/generalsettingpage.js","Components/Auth/Home.js","Components/Auth/Login/Login.js","PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Banana","Num","Text","Title","style","display","justifyContent","alignItems","color","Stack","distribution","spacing","DisplayText","size","className","Card","title","height","CardShow","TottalDelivery","alignment","API","SelectStore","fetchingfunc","useState","value","label","StoreOptions","setStoreOptions","Selectedstore","setSelectedstore","useEffect","localStorage","getItem","axios","get","headers","Authorization","then","response","data","catch","console","log","name","placeholder","options","onChange","checkselect","openOnFocus","autofocus","menuPortalTarget","document","body","styles","menuPortal","base","zIndex","Combiner","pendingcarry","setpendingcarry","todaycarry","settodaycarry","todaysrev","settodaysrev","GetCarryData","res","todayrevenue","formatNumber","num","n1","n2","split","replace","Naruto","Date","toLocaleDateString","Newnaruto","vertical","Item","fill","storeid","Page","fullWidth","Layout","Section","oneHalf","pendingpickup","pendingdelivery","delivery","pickup","BannerView","Todayestimatedeevenue","Todaycollectedamount","NewPage","skipToContentRef","useRef","searchActive","setSearchActive","searchValue","setSearchValue","userMenuActive","setUserMenuActive","mobileNavigationActive","setMobileNavigationActive","handleSearchResultsDismiss","useCallback","handleSearchFieldChange","length","toggleUserMenuActive","toggleMobileNavigationActive","history","useHistory","userMenuActions","items","content","onAction","removeItem","push","userMenuMarkup","TopBar","UserMenu","actions","initials","charAt","open","onToggle","searchResultsMarkup","ActionList","searchFieldMarkup","SearchField","topBarMarkup","showNavigationToggle","userMenu","searchResultsVisible","searchField","searchResults","onSearchResultsDismiss","onNavigationToggle","Checkpermission","Navigation","separator","url","rollup","after","view","hide","activePath","action","icon","AnalyticsMajor","onClick","SettingsMinor","navigationMarkup","location","HomeMajor","OnlineStoreMajor","ReportMinor","Banner","status","newPage","Frame","topBar","navigation","showMobileNavigation","onNavigationDismiss","skipToContentTarget","current","App","state","categories","checkedItems","Map","handleChange","bind","handleSubmit","prevProps","this","props","fetcheddata","equal","setState","event","isChecked","target","checked","item","prevState","set","setaddons","preventDefault","map","type","id","Component","ServiceCheckbox","Services","setServices","handleSelectservice","addonsdatafetch","animatedComponents","makeAnimated","services","components","NewOrderPage","source","setSource","handlesourceChange","errorcomes","setErrorcomes","handleerrorcomes","orderadded","setOrderadded","Handleorderadded","monthIndex","moment","month","toString","year","ServicesOption","setServicesOption","setservices","newdata","activepick","setActivepick","handleChangepick","activedrop","setActivedrop","handleChangedrop","pickmonth","parseInt","pickyear","setPickDate","start","end","selectedpickDates","setSelectedpickDates","handlePickMonthChange","format","pickdatevalue","setPickdatevalue","selectedpickdatetosend","setselectedpickdatetosend","dropmonth","dropyear","setdropDate","add","selecteddropDates","setSelecteddropDates","handleDropMonthChange","dropdatevalue","setDropdatevalue","selectdropdatetosend","setselectdropdatetosend","valuenumpick","setvaluenumpick","valuenum2pick","setvaluenum2pick","valuenum3pick","setvaluenum3pick","valuenum4pick","setvaluenum4pick","valuenum5pick","setvaluenum5pick","optionspick","disabled","valuenumdrop","setvaluenumdrop","valuenum2drop","setvaluenum2drop","valuenum3drop","setvaluenum3drop","valuenum4drop","setvaluenum4drop","valuenum5drop","setvaluenum5drop","optionsdrop","picktimeX","setPicktimeX","droptimeX","setDroptimeX","Dropx","setDropx","Pickupx","setPickupx","Pincode","setPincode","handlePincodeChange","newValue","Mobile","setMobile","secMobileChange","Name","setName","handleNameChange","Email","setEmail","handleEmailChange","Address","setAddress","handleAddressChange","Landmark","setLandmark","handleLandmarkChange","Locality","setLocality","handleLocalityChange","addonsx","setaddonsx","CheckPhoneNum","Data","err","setfetcheddata","isadminx","IsAdmin","storeoption","Newdate","hour","getHours","newdate","getDate","databasedate","forEach","index","info","disabledManagerpick","getTime","disabledManagerdrop","FormLayout","TextField","onFocus","Modal","onClose","DatePicker","onMonthChange","selected","disableDatesBefore","subtract","isOptionDisabled","option","Time","Datexx","post","timeslotx","DateSlot","PickUp","Drop","handlepicktimedropdown","handledroptimedropdown","ChoiceList","choices","Button","primary","addonsstring","entries","key","PickDate","PickTime","DropDate","DropSlot","Service","addons","Source","PickDelShow","CurrentStatus","DropDownx","setStatus","DisablePicked","DisableInProcess","DisableReady","DisableDelivered","selectstatus","Changequantity","Options","setboy","quantity","setquantity","connectedRight","Modalx","keyx","setReschedule","activecomplete","setActivecomplete","handleActivebanner","handlecompleteChange","setActive","window","reload","setText","Statusx","setStatusx","active","newhandler","handleChangeX","fetchstate","fetchBoy","setKey","activator","setCurrentStatus","setPickTime","setDropDate","setDropSlot","SelectBoy","setSelectBoy","OrderStatus","setOptions","IsDelivered","outline","monochrome","current_status","orderid","assing","RequestedUrl","Changestatus","TextContainer","Reschedule","setTextX","handleerror","handleReschedule","Datepickchanger","setcurrent_status","IsPickedUpcanBEreshedule","filter","isDisabled","postdata","Pickupdate","Pickuptime","Dropdate","Droptime","HandleRescheduleX","OrderTemplate","sortedRows","setSortedRows","apidata","setApidata","Filtereddatastart","setFiltereddatastart","Filtereddataend","setFiltereddataend","initiallySortedRows","slice","rows","setkey","Uchiha","triggererror","settriggererror","setSelected","TabChange","selectedTabIndex","FetchStores","startId","setstartId","endId","setendId","gonextfetch","startid","endid","go","endpoint","RequestedURI","setConfirmedstartid","confirmstartid","setConfirmedendid","confirmendid","setPickupstartid","Pickupstartid","setPickupendid","Pickupendid","setInprocessstartID","inprocessendID","setInprocessendID","setReadystartId","readystartId","setReadyendId","readyendId","setDeliverystartId","DeliverystartId","setDeliveryendId","DeliveryendId","FetchStoredata","rowS","ChoosenStore","setChoosenStore","SelectStoreforAdmin","FetchNumerofAllorderStore","fetchAllOrderfirstonly","fetchConfirmedfirstonly","fetchPickupfirstonly","fetchinprocessfirstonly","fetchreadyfirstonly","fetchdeliveredfirstonly","fetchAllOrder","store","RequestApi","inprocessstartID","AllOrdercount","setAllOrdercount","ConfirmedOrdercount","setConfirmedOrdercount","PickedOrdercount","setPickedOrdercount","inprocessOrdercount","setInprocessOrdercount","readyOrdercount","setReadyOrdercount","deliveredOrdercount","setDeliveredOrdercount","FetchNumerofAllorder","Response","tabs","Badge","accessibilityLabel","panelID","handleSort","direction","sort","rowA","rowB","amountA","parseFloat","substring","amountB","sortCurrency","activeNeworder","setActiveNeworder","handleNewoderadd","handleneworder","TriggeredFunc","Modalclosing","Handleorderaddednew","pagination","hasNext","Tabs","onSelect","fetchConfirmed","fetchPickup","fetchinprocess","fetchready","fetchdelivered","fitted","DataTable","columnContentTypes","headings","sortable","defaultSortDirection","initialSortColumnIndex","onSort","Pagination","hasPrevious","onPrevious","gopre","onNext","gonext","DataTableExample","RenderPage","secondary","setChoosedStore","Selectedstorex","headerselection","setheader","isMulti","Reports","activeemail","setActiveemail","handleactiveemail","headerx","setHeaderx","ChoosedStore","email","setemail","handleChangeemail","emailsuc","setemailsuc","handleChangsuccess","emailfailed","setemailfaile","handleChangfailed","failedText","setfailedText","sucessText","setsucessText","sectioned","StorewisePostdata","fromx","tox","href","connectedDisclosure","filename","defaultOption","uv","pv","amt","StoresChart","width","margin","top","right","left","bottom","strokeDasharray","dataKey","stroke","activeDot","r","storestatics","DriverChart","Driverstatics","StorestaticChart","PureComponent","jsfiddleUrl","CoustmerChart","Bannerx","Status","Msg","MyComponent","City","setCity","setoptions","FetchOption","categoryvalue","setCategoryvalue","Bannersuccessactive","setBannersuccessactive","Bannersuccesshandler","Bannererroractive","setBannererroractive","Bannererrorhandler","city","FormStucher","Label","injectablecomponent","CreateStore","setsource","Selectedservice","setSelectedservice","Servicesx","setServicesx","StoreName","setStoreName","address","setaddress","pincode","setpincode","storename","typeofstore","multiline","service","FormTextStruc","injectcomponent","FormStruc","Field","Createuser","Username","setUsername","Phone","setPhone","Role","setRole","DropDown","optionsRegion","setOptionsRegion","SelectedRegion","setSelectedRegion","DropDownRegion","Region","setArea","Area","SelectArea","setSelectArea","DropDownArea","setValue","secretpassword","result","characters","charactersLength","i","Math","floor","random","createPassword","CreateUserX","username","phone","role","region","password","SelectedCategory","setSelectedCategory","category","MyStatefulEditor","RichTextEditor","createEmptyValue","setvalue","AddOnsCheckBox","inputList","setInputList","handleInputChange","e","field","list","handleAddClick","Addonsname","price","unit","x","splice","handleRemoveClick","UnitandPrice","Price","setPricex","Unit","setUnit","prefix","CreateService","setPrice","handleprincing","MinimumPrice","setMinimumPrice","ProccessingTime","setProccessingTime","Discription","setDiscription","setchecked","minimumprice","ptime","description","deliveryavbl","reponsive","servicename","Createservicesenddata","defaultValue","defaultvaluex","Storesetting","storeidx","setActivexz","handleChangesucc","statuschecked","StoreList","StoreOption","setStoreOption","activesucc","setActivesucc","Storelist","Usersetting","Defaultvalue","Getarea","Defaultstore","area","checkroleforarea","Userlist","UserOption","setUserOption","Structer","Settings","ThemeChange","Home","EmptyState","heading","image","Login","node","LoginFailed","setLoginFailed","handleclose","handleClick","input","focus","handleFocus","select","execCommand","toggleModal","Number","setNumber","setusername","setpassword","Logo","src","Logox","alt","breadcrumbs","AnnotatedSection","setItem","access_token","detail","plain","ref","maxLength","showCharacterCount","isLogin","PrivateRoute","component","rest","render","to","OnlyAdminRoute","LoginRoute","theme","colors","background","backgroundLighter","backgroundDarker","border","logo","topBarSource","Link","children","test","isOutboundLink","download","AppProvider","i18n","enTranslations","linkComponent","path","exact","NewOrder","Order","Overview","Storemartics","Drivemertics","Coustmerstatics","Revenuemertics","Createservice","Generalsetting","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.dcbe00ba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Washh.e4ee4463.png\";","import React from \"react\";\nimport {\n  Card,\n  DisplayText,\n  Stack,\n} from \"@shopify/polaris\";\n\nconst Banana = ({ Num, Text }) => {\n  const Title = () => {\n    return (\n      <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        color: \"#404040\"\n      }}\n    >\n        <Stack distribution=\"leading\" spacing=\"tight\">\n          {/* <Icon source={FlagMajor} /> */}\n          <DisplayText size=\"small\">{Text}</DisplayText>\n          </Stack>\n          </div>\n    );\n  };\n  return (\n    <div className=\"Pickup\">\n      <Card title={<Title />}>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            height: \"15vh\",\n            color: '#454545',\n          }}\n        >\n          <DisplayText size=\"extraLarge\">{Num}</DisplayText>\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport default Banana;\n","import React from \"react\";\nimport { Stack, Card, DisplayText } from \"@shopify/polaris\";\nimport \"./Card.css\";\n\nconst CardShow = ({ TottalDelivery, title }) => {\n  const Title = () => {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          color: \"#404040\",\n        }}\n      >\n        <Stack distribution=\"leading\" spacing=\"tight\">\n          {/* <Icon source={FlagMajor} /> */}\n          <DisplayText size=\"small\"> {title}</DisplayText>\n        </Stack>\n      </div>\n    );\n  };\n  return (\n    <Card title={<Title />}>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: \"15vh\",\n          color: \"#454545\",\n        }}\n      >\n        {\" \"}\n        <Stack alignment=\"center\" spacing=\"extraTight\">\n          <DisplayText>₹</DisplayText>\n          <DisplayText className=\"TottalDelivery\" size=\"extraLarge\">\n            {TottalDelivery}\n          </DisplayText>\n        </Stack>\n      </div>\n    </Card>\n  );\n};\n\nexport default CardShow;\n","const API = \"http://localhost:8000\"\n\nexport {API}","import React,{useState,useEffect} from \"react\";\nimport Select from \"react-select\"\nimport axios from 'axios'\nimport {API} from '../API'\n\nconst SelectStore = ({fetchingfunc}) => {\n  const [StoreOptions, setStoreOptions] = useState([\n    { value: \"No store Found\", label: \"No store Found\" },\n  ]);\n  const [Selectedstore, setSelectedstore] = useState(\"Na\");\n  const FetchStores = () => {\n    if (localStorage.getItem(\"role\") === \"Admin\") {\n      axios\n        .get(API + \"/stores/active\", {\n          headers: {\n            Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n          },\n        })\n        .then((response) => {\n          setStoreOptions(response.data.data);\n        })\n        .catch((response) => {\n          console.log(response);\n        });\n    }\n  };\n  useEffect(() => {\n    FetchStores();\n  },[])\n  if (localStorage.getItem(\"role\") === \"Admin\") {\n    return (\n      <div>\n        <Select\n          name=\"Select Store\"\n          placeholder=\"Select Store\"\n          className=\"storeselect\"\n          options={StoreOptions}\n          value={Selectedstore}\n          onChange={(checkselect) => {\n            console.log(checkselect);\n            setSelectedstore(checkselect)\n            fetchingfunc(checkselect.value)\n          }}\n          openOnFocus={true}\n          autofocus={true}\n          menuPortalTarget={document.body}\n          styles={{ menuPortal: (base) => ({ ...base, zIndex: 9999 }) }}\n        />\n      </div>\n    );\n  } else {\n    return <div></div>;\n  }\n};\n\n\n\nexport default SelectStore","import React, { useState, useEffect } from \"react\";\nimport Banner from \"../../Components/Banner/Banner\";\nimport BannerView from \"../Card/BannerView\";\nimport axios from \"axios\";\nimport {\n  Page,\n  Layout,\n  Stack,\n  DisplayText,\n} from \"@shopify/polaris\";\nimport { API } from \"../API\";\nimport \"./App.css\";\nimport SelectStore from \"./SelectStore\";\n\nconst Combiner = () => {\n  const [pendingcarry, setpendingcarry] = useState(0);\n  const [todaycarry, settodaycarry] = useState(0);\n  const [todaysrev, settodaysrev] = useState(0);\n  useEffect(() => {\n    GetCarryData();\n  }, []);\n\n  const GetCarryData = () => {\n    axios\n      .get(API + \"/overview/todaycarry\", {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      })\n      .then((res) => {\n        const todaycarry = res.data;\n        settodaycarry(todaycarry.todaycarry);\n        setpendingcarry(todaycarry.pendingcarry);\n        settodaysrev(todaycarry.todayrevenue);\n        console.log(todaycarry);\n      });\n  };\n\n  const GetCarryDataStoreBased = (storeid) => {\n    axios\n      .get(API + \"/overview/todaycarry/\" + storeid, {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      })\n      .then((res) => {\n        const todaycarry = res.data;\n        settodaycarry(todaycarry.todaycarry);\n        setpendingcarry(todaycarry.pendingcarry);\n        settodaysrev(todaycarry.todayrevenue);\n        console.log(todaycarry);\n      });\n  };\n\n  const formatNumber = (num) => {\n    var n1, n2;\n    num = num + \"\" || \"\";\n    n1 = num.split(\".\");\n    n2 = n1[1] || null;\n    n1 = n1[0].replace(/(\\d)(?=(\\d\\d)+\\d$)/g, \"$1,\");\n    num = n2 ? n1 + \".\" + n2 : n1;\n    return num;\n  };\n\n  const Naruto = \"Date  : \" + new Date().toLocaleDateString();\n  const Newnaruto = (\n    <Stack vertical=\"false\">\n      <h1 className=\"Heading\">Overview</h1>\n      <Stack alignment=\"center\">\n        <Stack.Item fill>\n          <div className=\"Date\">\n            <DisplayText size=\"small\">{Naruto}</DisplayText>\n          </div>\n        </Stack.Item>\n        <Stack.Item>\n          <div className=\"Selecttion\">\n            <SelectStore fetchingfunc={GetCarryDataStoreBased} />\n          </div>\n        </Stack.Item>\n      </Stack>\n    </Stack>\n  );\n  return (\n    <Page fullWidth title={Newnaruto}>\n      <Layout>\n        <Layout.Section oneHalf>\n          <Stack distribution=\"fillEvenly\">\n            <Banner Num={formatNumber(pendingcarry.pendingpickup)} Text=\"Pending Pickup\" />\n            <Banner Num={formatNumber(pendingcarry.pendingdelivery)} Text=\"Pending Delivery\" />\n          </Stack>\n        </Layout.Section>\n\n        <Layout.Section oneHalf>\n          <Stack distribution=\"fillEvenly\">\n            <Banner Num={formatNumber(todaycarry.delivery)} Text=\"Today's Delivery\" />\n            <Banner Num={formatNumber(todaycarry.pickup)} Text=\"Today's Pickups\" />\n          </Stack>\n        </Layout.Section>\n        <Layout.Section oneHalf>\n          <Stack distribution=\"fillEvenly\">\n            <BannerView\n              TottalDelivery={formatNumber(\n                todaysrev.Todayestimatedeevenue\n              )}\n              title={\n                <DisplayText size=\"small\">\n                  Today's Estimated Revenue\n                </DisplayText>\n              }\n            />\n            <BannerView\n              TottalDelivery={formatNumber(todaysrev.Todaycollectedamount)}\n              title=\"Today's Collection\"\n            />\n          </Stack>\n        </Layout.Section>\n      </Layout>\n    </Page>\n  );\n};\n\nexport default Combiner;\n","import React, { useCallback, useState, useRef } from \"react\";\nimport {\n  Card,\n  ActionList,\n  Frame,\n  Navigation,\n  TopBar,\n  Banner,\n} from \"@shopify/polaris\";\nimport {\n  HomeMajor,\n  OnlineStoreMajor,\n  ReportMinor,\n  AnalyticsMajor,\n  SettingsMinor,\n} from \"@shopify/polaris-icons\";\nimport Overview from \"./OverviewPage\";\nimport {  useHistory } from \"react-router-dom\";\nimport {Version} from \"../Version\"\n\nconst NewPage = () => {\n\n \n  /* UI MESS START HERE */\n  const skipToContentRef = useRef(null);\n  const [searchActive, setSearchActive] = useState(false);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [userMenuActive, setUserMenuActive] = useState(false);\n  const [mobileNavigationActive, setMobileNavigationActive] = useState(false);\n\n  const handleSearchResultsDismiss = useCallback(() => {\n    setSearchActive(false);\n    setSearchValue(\"\");\n  }, []);\n  const handleSearchFieldChange = useCallback((value) => {\n    setSearchValue(value);\n    setSearchActive(value.length > 0);\n  }, []);\n\n  const toggleUserMenuActive = useCallback(\n    () => setUserMenuActive((userMenuActive) => !userMenuActive),\n    []\n  );\n  const toggleMobileNavigationActive = useCallback(\n    () =>\n      setMobileNavigationActive(\n        (mobileNavigationActive) => !mobileNavigationActive\n      ),\n    []\n  );\n  const history = useHistory()\n  const Logout = () => {\n    localStorage.removeItem(\"username\");\n    localStorage.removeItem(\"role\");\n    localStorage.removeItem(\"login\");\n    localStorage.removeItem(\"token\");\n    history.push(\"/login\")\n  };\n  const userMenuActions = [\n    {\n      items: [{ content: \"Logout\", onAction: Logout }],\n    },\n  ];\n\n  const userMenuMarkup = (\n    <TopBar.UserMenu\n      actions={userMenuActions}\n      name={localStorage.getItem(\"username\")}\n      initials={localStorage.getItem(\"username\").charAt(0)}\n      open={userMenuActive}\n      onToggle={toggleUserMenuActive}\n    />\n  );\n  const searchResultsMarkup = (\n    <Card>\n      <ActionList\n        items={[\n          { content: \"Shopify help center\" },\n          { content: \"Community forums\" },\n        ]}\n      />\n    </Card>\n  );\n\n  const searchFieldMarkup = (\n    <TopBar.SearchField\n      onChange={handleSearchFieldChange}\n      value={searchValue}\n      placeholder=\"Search\"\n    />\n  );\n\n  const topBarMarkup = (\n    <TopBar\n      showNavigationToggle\n      userMenu={userMenuMarkup}\n      searchResultsVisible={searchActive}\n      searchField={searchFieldMarkup}\n      searchResults={searchResultsMarkup}\n      onSearchResultsDismiss={handleSearchResultsDismiss}\n      onNavigationToggle={toggleMobileNavigationActive}\n    />\n  );\n\n  const GetRole = () => {\n    return localStorage.getItem(\"role\");\n  };\n\n  const Checkpermission = () => {\n    if (GetRole() === \"Admin\") {\n      return (\n        <div>\n          <Navigation.Section\n            separator\n            title=\"Metrics\"\n            items={[\n              {\n                label: \"Stores Statics\",\n                url: \"storestatics\",\n              },\n              {\n                label: \"Driver Statistics\",\n                url: \"driverstatics\",\n              },\n              {\n                label: \"Customers Statistics\",\n                url: \"/customerstatics\",\n              },\n              {\n                label: \"Revenue Statistics\",\n                url: \"/revenuestatics\",\n              },\n            ]}\n            rollup={{\n              after: 2,\n              view: \"view\",\n              hide: \"hide\",\n              activePath: \"/\",\n            }}\n            action={{\n              icon: AnalyticsMajor,\n              onClick: () => {},\n            }}\n          />\n          <Navigation.Section\n            separator\n            title=\"Admin Settings\"\n            items={[\n              {\n                label: \"Create Store\",\n                url: \"createstore\",\n              },\n              {\n                label: \"Store Settings\",\n                url: \"storesetting\",\n              },\n              {\n                label: \"User Settings\",\n                url: \"usersetting\"\n              },\n          {\n            label: \"General Settings\",\n            url: \"settings\",\n          },\n              {\n                label: \"Add Service\",\n                url: \"createservice\",\n              },\n              {\n                label: \"Create User\",\n                url: \"createuser\",\n              },\n            ]}\n            rollup={{\n              after: 2,\n              view: \"view\",\n              hide: \"hide\",\n              activePath: \"/\",\n            }}\n            action={{\n              icon: SettingsMinor,\n              onClick: () => {},\n            }}\n          />\n        </div>\n      );\n    } else {\n      return <div></div>;\n    }\n  };\n  const navigationMarkup = (\n    <Navigation location=\"/\">\n      <Navigation.Section\n        separator\n        title=\"Dashboard\"\n        items={[\n          {\n            label: \"Overview\",\n            url: \"/overview\",\n          },\n        ]}\n        action={{\n          icon: HomeMajor,\n        }}\n      />\n      <Navigation.Section\n        separator\n        title=\"Order\"\n        items={[\n          {\n            label: \"Order\",\n            url: \"/order\",\n          },\n          {\n            label: \"New order\",\n            url: \"/neworder\",\n          },\n        ]}\n        action={{\n          icon: OnlineStoreMajor,\n          onClick: () => {},\n        }}\n      />\n      <Navigation.Section\n        separator\n        title=\"Reports\"\n        items={[\n          {\n            label: \"Reports\",\n            url: \"/reports\",\n          },\n        ]}\n        action={{\n          icon: ReportMinor,\n          onClick: () => {},\n        }}\n      />\n      <Checkpermission />\n       <Banner status=\"info\">\n        <p>Current version: {Version}</p>\n      </Banner>\n    </Navigation>\n  );\n\n  const newPage = <Overview />;\n  return (\n    <Frame\n      topBar={topBarMarkup}\n      navigation={navigationMarkup}\n      showMobileNavigation={mobileNavigationActive}\n      onNavigationDismiss={toggleMobileNavigationActive}\n      skipToContentTarget={skipToContentRef.current}\n    >\n      {newPage}\n    </Frame>\n  );\n};\n\nexport default NewPage;\n","const Version = \"0.1\"\n\nexport {Version}","import React, { Component } from \"react\";\nimport { Stack } from \"@shopify/polaris\";\nimport equal from \"fast-deep-equal\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      categories: [],\n      checkedItems: new Map(),\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    console.log(this.props.fetcheddata);\n    if (!equal(this.props.fetcheddata, prevProps.fetcheddata)) {\n      this.setState({ categories: this.props.fetcheddata });\n    }\n  }\n\n  handleChange(event) {\n    console.log(event);\n    var isChecked = event.target.checked;\n    var item = event.target.value;\n    this.setState((prevState) => ({\n      checkedItems: prevState.checkedItems.set(item, isChecked),\n    }));\n    this.props.setaddons(this.state.checkedItems)\n  }\n\n  handleSubmit(event) {\n    console.log(this.state);\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <Stack>\n        {this.state.categories.map((item) => (\n          <label>\n            <input\n              type=\"checkbox\"\n              value={item.id}\n              onChange={this.handleChange}\n            />\n            {item.value}\n          </label>\n        ))}\n      </Stack>\n    );\n  }\n}\n\nexport default App;\n","import React, { useEffect } from \"react\";\nimport Select from \"react-select\";\nimport makeAnimated from \"react-select/animated\";\nimport axios from \"axios\";\nimport { API } from \"../API\";\n\nconst ServiceCheckbox = ({\n  Services,\n  setServices,\n  handleSelectservice,\n  addonsdatafetch,\n}) => {\n  const animatedComponents = makeAnimated();\n\n  const FetchServices = () => {\n    axios\n      .get(API + \"/services\", {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      })\n      .then((response) => {\n        setServices(response.data.services);\n      })\n      .catch((response) => {\n        console.log(response);\n      });\n  };\n\n  useEffect(() => {\n    FetchServices();\n  }, []);\n  return (\n    <Select\n    label=\"Select services : \"\n      name=\"Select services\"\n      placeholder=\"Select services\"\n      components={animatedComponents}\n      options={Services}\n      onChange={(checkselect) => {\n        console.log(checkselect);\n        handleSelectservice(checkselect);\n        addonsdatafetch(checkselect.value);\n      }}\n      openOnFocus={true}\n      autofocus={true}\n      menuPortalTarget={document.body}\n      styles={{ menuPortal: (base) => ({ ...base, zIndex: 9999 }) }}\n    />\n  );\n};\n\nexport default ServiceCheckbox;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport {\n  Card,\n  Button,\n  Modal,\n  Layout,\n  Page,\n  TextField,\n  DisplayText,\n  DatePicker,\n  Banner,\n  FormLayout,\n  ChoiceList,\n  Stack,\n} from \"@shopify/polaris\";\nimport \"react-dropdown/style.css\";\nimport axios from \"axios\";\nimport \"react-dropdown/style.css\";\nimport Addons from \"./addons\";\nimport moment from \"moment\";\nimport Servicelist from \"./servicesList\";\nimport \"./App.css\";\nimport { API } from \"../API\";\nimport Select from \"react-select\";\n\nconst NewOrderPage = () => {\n  /* SOURCE RADIO BUTTON STATES START HERE */\n  const [source, setSource] = useState([\"unknown\"]);\n\n  const handlesourceChange = useCallback((value) => setSource(value), []);\n\n  /* END HERE */\n\n  /* ERROR HANDLER STATE START HERE */\n  const [errorcomes, setErrorcomes] = useState(false);\n  const handleerrorcomes = useCallback(() => setErrorcomes(!errorcomes), [\n    errorcomes,\n  ]);\n  /* END HERE */\n\n  /* SUCCESS MODEL STATE START HERE */\n  const [orderadded, setOrderadded] = useState(false);\n  const Handleorderadded = useCallback(() => setOrderadded(!orderadded), [\n    orderadded,\n  ]);\n  /* END HERE */\n\n  /* GET MONTH AND YEAR FOR DATEPICKER USING MOMENT.JS */\n  const monthIndex = moment().month().toString();\n  const year = moment().year().toString();\n  /* END HERE */\n\n  /* SERVICES STATE START HERE */\n  const [ServicesOption, setServicesOption] = useState([\n    { value: \"please Wait\", label: \"please wait\" },\n  ]);\n  const [services, setservices] = useState();\n\n  const handleSelectservice = useCallback(\n    (newdata) => setservices(newdata),\n    []\n  );\n\n  /* END HERE *?\n  \n    /* DATEPICKER TRIGGING STATE START HERE  */\n  const [activepick, setActivepick] = useState(false);\n  const handleChangepick = useCallback(() => setActivepick(!activepick), [\n    activepick,\n  ]);\n  const [activedrop, setActivedrop] = useState(false);\n  const handleChangedrop = useCallback(() => setActivedrop(!activedrop), [\n    activedrop,\n  ]);\n  /* END HERE */\n\n  /* DATEPICKER PICK STATE START HERE */\n  const [{ pickmonth, pickyear }, setPickDate] = useState({\n    pickmonth: parseInt(monthIndex),\n    pickyear: parseInt(year),\n  });\n  const [selectedpickDates, setSelectedpickDates] = useState({\n    start: new Date(moment().toString()),\n    end: new Date(moment().toString()),\n  });\n\n  const handlePickMonthChange = useCallback(\n    (pickmonth, pickyear) => setPickDate({ pickmonth, pickyear }),\n    []\n  );\n\n  const [pickdatevalue, setPickdatevalue] = useState(\n    moment().format(\"MMMM Do YYYY\").toString()\n  );\n\n  const [selectedpickdatetosend, setselectedpickdatetosend] = useState(\n    selectedpickDates.start\n  );\n  const Datepickchanger = (Date) => {\n    /* THIS FUNCATION WILL CHANGE THE DATE IN STATE AND CLOSE THE MODEL */\n    console.log(moment(Date.start).toString());\n    setSelectedpickDates(Date.start);\n    setselectedpickdatetosend(moment(Date.start).add(1, \"d\"));\n    setPickdatevalue(moment(Date.start).format(\"MMMM Do YYYY\").toString());\n    handleChangepick();\n  };\n  /* END HERE */\n\n  /* DATEPICKER DROP STATE START HERE */\n  const [{ dropmonth, dropyear }, setdropDate] = useState({\n    dropmonth: parseInt(monthIndex),\n    dropyear: parseInt(year),\n  });\n  const [selecteddropDates, setSelecteddropDates] = useState({\n    start: new Date(moment().add(1, \"d\").toString()),\n    end: new Date(moment().add(1, \"d\").toString()),\n  });\n\n  const handleDropMonthChange = useCallback(\n    (dropmonth, dropyear) => setdropDate({ dropmonth, dropyear }),\n    []\n  );\n\n  const [dropdatevalue, setDropdatevalue] = useState(\n    moment().add(1, \"d\").format(\"MMMM Do YYYY\").toString()\n  );\n\n  const [selectdropdatetosend, setselectdropdatetosend] = useState(\n    selecteddropDates.start\n  );\n  const Datedropchanger = (Date) => {\n    /* THIS FUNCATION WILL CHANGE THE DATE IN STATE AND CLOSE THE MODEL */\n    console.log(Date.start);\n    setSelecteddropDates(Date.start);\n    setselectdropdatetosend(moment(Date.start).add(1, \"d\"));\n    setDropdatevalue(moment(Date.start).format(\"MMMM Do YYYY\").toString());\n    handleChangedrop();\n  };\n  /* END HERE */\n\n  /* STATES FOR DROPDOWN START HERE */\n  const [valuenumpick, setvaluenumpick] = useState(\"no\");\n  const [valuenum2pick, setvaluenum2pick] = useState(\"no\");\n  const [valuenum3pick, setvaluenum3pick] = useState(\"no\");\n  const [valuenum4pick, setvaluenum4pick] = useState(\"no\");\n  const [valuenum5pick, setvaluenum5pick] = useState(\"no\");\n  const optionspick = [\n    {\n      value: \"08 AM To 10 AM\",\n      label: \"08 AM To 10 AM\",\n      disabled: valuenumpick,\n    },\n    {\n      value: \"10 AM To 12 PM\",\n      label: \"10 AM To 12 PM\",\n      disabled: valuenum2pick,\n    },\n    {\n      value: \"01 PM To 03 PM\",\n      label: \"01 PM To 03 PM\",\n      disabled: valuenum3pick,\n    },\n    {\n      value: \"03 PM To 05 PM\",\n      label: \"03 PM To 05 PM\",\n      disabled: valuenum4pick,\n    },\n    {\n      value: \"05 PM To 07 PM\",\n      label: \"05 PM To 07 PM\",\n      disabled: valuenum5pick,\n    },\n  ];\n\n  const [valuenumdrop, setvaluenumdrop] = useState(\"no\");\n  const [valuenum2drop, setvaluenum2drop] = useState(\"no\");\n  const [valuenum3drop, setvaluenum3drop] = useState(\"no\");\n  const [valuenum4drop, setvaluenum4drop] = useState(\"no\");\n  const [valuenum5drop, setvaluenum5drop] = useState(\"no\");\n  const optionsdrop = [\n    {\n      value: \"08 AM To 10 AM\",\n      label: \"08 AM To 10 AM\",\n      disabled: valuenumdrop,\n    },\n    {\n      value: \"10 AM To 12 PM\",\n      label: \"10 AM To 12 PM\",\n      disabled: valuenum2drop,\n    },\n    {\n      value: \"01 PM To 03 PM\",\n      label: \"01 PM To 03 PM\",\n      disabled: valuenum3drop,\n    },\n    {\n      value: \"03 PM To 05 PM\",\n      label: \"03 PM To 05 PM\",\n      disabled: valuenum4drop,\n    },\n    {\n      value: \"05 PM To 07 PM\",\n      label: \"05 PM To 07 PM\",\n      disabled: valuenum5drop,\n    },\n  ];\n\n  const [picktimeX, setPicktimeX] = useState(optionspick[0]);\n  const [droptimeX, setDroptimeX] = useState(optionsdrop[0]);\n\n  const [Dropx, setDropx] = useState();\n  const [Pickupx, setPickupx] = useState();\n  const handlepicktimedropdown = (Time) => {\n    console.log(Time.value);\n    setPicktimeX(Time.value);\n    let Datexx = selectedpickDates.start;\n    console.log(moment(Datexx));\n    axios\n      .post(\n        API + \"/timeslot\",\n        {\n          timeslotx: Time.value,\n          DateSlot: moment(Datexx),\n        },\n        {\n          headers: {\n            Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n          },\n        }\n      )\n      .then((response) => {\n        console.log(response);\n        setPickupx(\n          \"Pickup: \" + response.data.PickUp + \" Drop: \" + response.data.Drop\n        );\n      });\n  };\n\n  const handledroptimedropdown = (Time) => {\n    setDroptimeX(Time.value);\n    let Datexx = selecteddropDates.start;\n    console.log(moment(Datexx).add(1, \"d\"));\n    axios\n      .post(\n        API + \"/timeslot\",\n        {\n          timeslotx: Time.value,\n          DateSlot: moment(Datexx),\n        },\n        {\n          headers: {\n            Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n          },\n        }\n      )\n      .then((response) => {\n        console.log(response);\n        setDropx(\n          \"Pickup: \" + response.data.PickUp + \" Drop: \" + response.data.Drop\n        );\n      });\n  };\n\n  /* END HERE */\n\n  /* State For Textfield START HERE */\n  const [Pincode, setPincode] = useState();\n  const handlePincodeChange = useCallback(\n    (newValue) => setPincode(newValue),\n    []\n  );\n  const [Mobile, setMobile] = useState(\"\");\n  const secMobileChange = useCallback((newValue) => setMobile(newValue), []);\n  const handleMobileChange = (newValue) => {\n    secMobileChange(newValue);\n    CheckPhoneNum(newValue);\n  };\n  const [Name, setName] = useState(\"\");\n  const handleNameChange = useCallback((newValue) => setName(newValue), []);\n  const [Email, setEmail] = useState(\"\");\n  const handleEmailChange = useCallback((newValue) => setEmail(newValue), []);\n  const [Address, setAddress] = useState(\"\");\n  const handleAddressChange = useCallback(\n    (newValue) => setAddress(newValue),\n    []\n  );\n  const [Landmark, setLandmark] = useState(\"\");\n  const handleLandmarkChange = useCallback(\n    (newValue) => setLandmark(newValue),\n    []\n  );\n  const [Locality, setLocality] = useState(\"\");\n  const handleLocalityChange = useCallback(\n    (newValue) => setLocality(newValue),\n    []\n  );\n  /* END HERE */\n\n  const [addonsx, setaddonsx] = useState(\"\");\n  /* BUTTON CLICK HANDLER START HERE */\n  const buttonClickHandler = () => {\n    let addonsstring = \"\";\n    if (addonsx !== \"\") {\n      for (const [key, value] of addonsx.entries()) {\n        console.log(key, value);\n        addonsstring = addonsstring + \" \" + key;\n      }\n    }\n    console.log(addonsstring);\n    axios\n      .post(\n        API + \"/order/add\",\n        {\n          Mobile: Mobile,\n          Name: Name,\n          Email: Email,\n          Address: Address,\n          Landmark: Landmark,\n          Locality: Locality,\n          Pincode: Locality,\n          PickDate: selectedpickdatetosend,\n          PickTime: picktimeX,\n          DropDate: selectdropdatetosend,\n          DropSlot: droptimeX,\n          Service: services.value,\n          addons: addonsstring,\n          Source: source[0],\n          storeid: Selectedstore.value,\n        },\n        {\n          headers: {\n            \"content-type\": \"text/json\",\n            Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n          },\n        }\n      )\n      .then((data) => {\n        let response = data;\n        console.log(response);\n        Handleorderadded();\n      })\n      .catch((err) => handleerrorcomes());\n  };\n  /* END HERE */\n\n  /* CHECK IF USER DETAILS ARE ALREADY EXSIST TO AUTO FILL THE FORUM */\n  const CheckPhoneNum = (Data) => {\n    if (Data === \"\" || Data.length < 9) {\n      console.log(\"dskjkldsfhgjk\");\n    } else {\n      axios\n        .get(API + \"/checknumber?number=\" + Data, {\n          headers: {\n            Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n          },\n        })\n        .then((res) => {\n          let data = res.data[\"Userdetails\"];\n          handleNameChange(data[\"Name\"]);\n          handleEmailChange(data[\"Email\"]);\n          handleAddressChange(data[\"Address\"]);\n          handleLandmarkChange(data[\"Landmark\"]);\n          handleLocalityChange(data[\"Locality\"]);\n          handlePincodeChange(data[\"Pincode\"]);\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n\n  const [fetcheddata, setfetcheddata] = useState([]);\n  const FetchAddons = (data) => {\n    axios\n      .get(API + \"/addons/\" + data, {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      })\n      .then((response) => {\n        setfetcheddata(response.data.data);\n      })\n      .catch((response) => {\n        console.log(response);\n      });\n  };\n\n  const isadminx = localStorage.getItem(\"role\");\n  const IsAdmin = ({ storeoption, setSelectedstore, Selectedstore }) => {\n    if (isadminx === \"Admin\") {\n      return (\n        <Stack alignment=\"center\" distribution=\"fill\">\n          <DisplayText size=\"extraSmall\">Select Store : </DisplayText>\n          <Select\n            name=\"Select Store\"\n            placeholder=\"Select Store\"\n            options={storeoption}\n            value={Selectedstore}\n            onChange={(checkselect) => {\n              console.log(checkselect);\n              setSelectedstore(checkselect);\n            }}\n            openOnFocus={true}\n            autofocus={true}\n            menuPortalTarget={document.body}\n            styles={{ menuPortal: (base) => ({ ...base, zIndex: 9999 }) }}\n          />\n        </Stack>\n      );\n    } else {\n      return <div></div>;\n    }\n  };\n  const [StoreOptions, setStoreOptions] = useState([\n    { value: \"No store Found\", label: \"No store Found\" },\n  ]);\n  const [Selectedstore, setSelectedstore] = useState(\"Na\");\n  const FetchStores = () => {\n    if (isadminx === \"Admin\") {\n      axios\n        .get(API + \"/stores/active\", {\n          headers: {\n            Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n          },\n        })\n        .then((response) => {\n          setStoreOptions(response.data.data);\n        })\n        .catch((response) => {\n          console.log(response);\n        });\n    }\n  };\n\n  const disabledManagerpick = (Newdate) => {\n    let dateobject = new Date();\n    let hour = dateobject.getHours();\n    let newdate = new Date().getDate();\n    let databasedate = new Date(Newdate).getDate();\n    optionspick.forEach((data, index) => {\n      let info = data[\"value\"].toString().split(\" \");\n      let num = 0;\n      if (info[1] === \"AM\") {\n        num = parseInt(info[0]);\n      } else if (info[1] === \"PM\") {\n        num = parseInt(info[0]) + 12;\n      }\n      if (newdate === databasedate) {\n        if (num <= hour || num + 1 == hour || num - 1 == hour) {\n          switch (index) {\n            case 0:\n              console.log(0);\n              setvaluenumpick(\"yes\");\n              break;\n            case 1:\n              console.log(1);\n              setvaluenum2pick(\"yes\");\n              break;\n            case 2:\n              setvaluenum3pick(\"yes\");\n              break;\n            case 3:\n              setvaluenum4pick(\"yes\");\n              break;\n            case 4:\n              setvaluenum5pick(\"yes\");\n              break;\n          }\n        }\n      } else {\n        console.log(\"FREE EVERY TAB\");\n        setvaluenumpick(\"no\");\n        setvaluenum2pick(\"no\");\n        setvaluenum3pick(\"no\");\n        setvaluenum4pick(\"no\");\n        setvaluenum5pick(\"no\");\n      }\n    });\n  };\n\n  const disabledManagerdrop = (Newdate) => {\n    let dateobject = new Date();\n    let hour = dateobject.getHours();\n    let newdate = new Date(\n      new Date().getTime() + 24 * 60 * 60 * 1000\n    ).getDate();\n    let databasedate = new Date(Newdate).getDate();\n    console.log(newdate);\n    console.log(databasedate);\n    optionsdrop.forEach((data, index) => {\n      let info = data[\"value\"].toString().split(\" \");\n      let num = 0;\n      if (info[1] === \"AM\") {\n        num = parseInt(info[0]);\n      } else if (info[1] === \"PM\") {\n        num = parseInt(info[0]) + 12;\n      }\n      if (newdate === databasedate) {\n        if (num <= hour || num + 1 == hour || num - 1 == hour) {\n          console.log(\"#########################\");\n          switch (index) {\n            case 0:\n              console.log(0);\n              setvaluenumdrop(\"yes\");\n              break;\n            case 1:\n              console.log(1);\n              setvaluenum2drop(\"yes\");\n              break;\n            case 2:\n              setvaluenum3drop(\"yes\");\n              break;\n            case 3:\n              setvaluenum4drop(\"yes\");\n              break;\n            case 4:\n              setvaluenum5drop(\"yes\");\n              break;\n          }\n        }\n      } else {\n        console.log(\"FREE EVERY TAB\");\n        setvaluenumdrop(\"no\");\n        setvaluenum2drop(\"no\");\n        setvaluenum3drop(\"no\");\n        setvaluenum4drop(\"no\");\n        setvaluenum5drop(\"no\");\n      }\n    });\n  };\n\n  useEffect(() => {\n    FetchStores();\n    disabledManagerpick(selectedpickDates.start);\n    disabledManagerdrop(selecteddropDates.start);\n  }, []);\n\n  const Title = <DisplayText size=\"small\">New Order</DisplayText>;\n  return (\n    <Layout>\n      <Layout.Section>\n        <FormLayout>\n          <Stack vertical=\"true\" distribution=\"fill\" spacing=\"loose\">\n            <Layout>\n              <Layout.Section>\n                <TextField\n                  label=\"Mobile : \"\n                  type=\"text\"\n                  value={Mobile}\n                  onChange={handleMobileChange}\n                />\n              </Layout.Section>\n            </Layout>\n            <Layout>\n              <Layout.Section>\n                <TextField\n                  label=\"Coustmer Name : \"\n                  type=\"text\"\n                  value={Name}\n                  onChange={handleNameChange}\n                />\n              </Layout.Section>\n            </Layout>\n\n            <Layout>\n              <Layout.Section>\n                <TextField\n                  label=\"Coustmer Email : \"\n                  type=\"email\"\n                  value={Email}\n                  onChange={handleEmailChange}\n                />\n              </Layout.Section>\n            </Layout>\n\n            <Layout>\n              <Layout.Section>\n                <TextField\n                  label=\"Address : \"\n                  type=\"text\"\n                  value={Address}\n                  onChange={handleAddressChange}\n                />\n              </Layout.Section>\n            </Layout>\n\n            <Layout>\n              <Layout.Section>\n                <TextField\n                  label=\"Landmark : \"\n                  type=\"text\"\n                  value={Landmark}\n                  onChange={handleLandmarkChange}\n                />\n              </Layout.Section>\n            </Layout>\n\n            <Layout>\n              <Layout.Section>\n                <TextField\n                  label=\"Locality : \"\n                  type=\"text\"\n                  value={Locality}\n                  onChange={handleLocalityChange}\n                />\n              </Layout.Section>\n            </Layout>\n\n            <Layout>\n              <Layout.Section>\n                <TextField\n                  label=\"Pincode :\"\n                  type=\"text\"\n                  value={Pincode}\n                  onChange={handlePincodeChange}\n                />\n              </Layout.Section>\n            </Layout>\n            <Stack vertical=\"false\" spacing=\"tight\">\n              <Stack alignment=\"trailing\" distribution=\"fill\">\n                <TextField\n                  label=\"Pickup Date : \"\n                  type=\"text\"\n                  value={pickdatevalue}\n                  onFocus={() => {\n                    handleChangepick();\n                  }}\n                />\n                <Modal\n                  open={activepick}\n                  onClose={handleChangepick}\n                  title=\"Pick Slot : \"\n                >\n                  <Modal.Section>\n                    <DatePicker\n                      month={pickmonth}\n                      year={pickyear}\n                      onChange={Datepickchanger}\n                      onMonthChange={handlePickMonthChange}\n                      selected={selectedpickDates}\n                      disableDatesBefore={\n                        new Date(moment().subtract(1, \"d\").toString())\n                      }\n                    />{\" \"}\n                  </Modal.Section>\n                </Modal>\n                <Select\n                  placeholder=\"Select Pickup Time Slot\"\n                  options={optionspick}\n                  isOptionDisabled={(option) => option.disabled === \"yes\"}\n                  onChange={(checkselect) => {\n                    handlepicktimedropdown(checkselect);\n                  }}\n                  // defaultValue={optionspick[0]}\n                  openOnFocus={true}\n                  autofocus={true}\n                  menuPortalTarget={document.body}\n                  styles={{\n                    menuPortal: (base) => ({ ...base, zIndex: 9999 }),\n                  }}\n                />\n              </Stack>\n              <DisplayText size=\"extrasmall\">{Pickupx}</DisplayText>\n\n              <Stack alignment=\"trailing\" distribution=\"fill\">\n                <TextField\n                  label=\"Drop Date : \"\n                  type=\"text\"\n                  value={dropdatevalue}\n                  onFocus={() => {\n                    handleChangedrop();\n                  }}\n                />\n                <Modal\n                  open={activedrop}\n                  onClose={handleChangedrop}\n                  title=\"Drop Slot : \"\n                >\n                  <Modal.Section>\n                    <DatePicker\n                      month={dropmonth}\n                      year={dropyear}\n                      onChange={Datedropchanger}\n                      onMonthChange={handleDropMonthChange}\n                      selected={selecteddropDates}\n                      disableDatesBefore={new Date(moment().toString())}\n                    />{\" \"}\n                  </Modal.Section>\n                </Modal>\n                <Select\n                  placeholder=\"Select Drop Time Slot\"\n                  options={optionsdrop}\n                  isOptionDisabled={(option) => option.disabled === \"yes\"}\n                  onChange={(checkselect) => {\n                    handledroptimedropdown(checkselect);\n                  }}\n                  // defaultValue={optionsdrop[1]}\n                  openOnFocus={true}\n                  autofocus={true}\n                  menuPortalTarget={document.body}\n                  styles={{\n                    menuPortal: (base) => ({ ...base, zIndex: 9999 }),\n                  }}\n                />\n              </Stack>\n              <DisplayText size=\"extrasmall\">{Dropx}</DisplayText>\n            </Stack>\n            <Stack alignment=\"center\" distribution=\"fill\">\n              <DisplayText size=\"extrasmall\">Select services : </DisplayText>\n              <Servicelist\n                Services={ServicesOption}\n                setServices={setServicesOption}\n                handleSelectservice={handleSelectservice}\n                addonsdatafetch={FetchAddons}\n              />\n            </Stack>\n\n            <Stack alignment=\"center\" distribution=\"fill\">\n              <DisplayText size=\"extrasmall\">Select Addons : </DisplayText>\n              <Addons fetcheddata={fetcheddata} setaddons={setaddonsx} />\n            </Stack>\n            <IsAdmin\n              storeoption={StoreOptions}\n              setSelectedstore={setSelectedstore}\n              Selectedstore={Selectedstore}\n            />\n            <Layout>\n              <Layout.Section>\n                <ChoiceList\n                  title=\"Order Source : \"\n                  choices={[\n                    { label: \"Whatsapp\", value: \"Whatsapp\" },\n                    { label: \"Facebook\", value: \"Facebook\" },\n                    { label: \"Instragram\", value: \"Instragram\" },\n                    { label: \"WalkIn\", value: \"WalkIn\" },\n                  ]}\n                  selected={source}\n                  onChange={handlesourceChange}\n                />\n              </Layout.Section>\n            </Layout>\n          </Stack>\n          <Button\n            alignment=\"center\"\n            primary\n            className=\"ConfirmedButton\"\n            onClick={buttonClickHandler}\n          >\n            Confirm Order\n          </Button>\n        </FormLayout>\n        <Modal open={orderadded} onClose={Handleorderadded}>\n          <Modal.Section>\n            <Banner status=\"success\">\n              <p>Order has been successfully placed</p>\n            </Banner>\n          </Modal.Section>\n        </Modal>\n        <Modal open={errorcomes} onClose={handleerrorcomes}>\n          <Modal.Section>\n            <Banner status=\"critical\">\n              <p>Failed There is a some kind of error</p>\n            </Banner>\n          </Modal.Section>\n        </Modal>\n      </Layout.Section>\n    </Layout>\n  );\n};\nexport default NewOrderPage;\n","import React, { useState, useCallback } from \"react\";\nimport {\n  Modal,\n  DisplayText,\n  Stack,\n  Card,\n  TextContainer,\n  Button,\n  TextField,\n  Banner,\n} from \"@shopify/polaris\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport Select from \"react-select\";\nimport { API } from \"../API\";\n\nconst PickDelShow = ({\n  CurrentStatus,\n  PickDate,\n  PickTime,\n  DropDate,\n  DropSlot,\n}) => {\n  if (CurrentStatus === \"Confirmed\") {\n    return (\n      <Stack vertical=\"false\">\n        <DisplayText size=\"extraSmall\">\n          Current Status : {CurrentStatus}\n        </DisplayText>\n        <DisplayText size=\"extraSmall\">PickDate : {PickDate}</DisplayText>\n        <DisplayText size=\"extraSmall\">PickTime : {PickTime}</DisplayText>\n      </Stack>\n    );\n  } else if (CurrentStatus === \"Confirmed_NOT_ASSING\") {\n    return (\n      <Stack vertical=\"false\">\n        <DisplayText size=\"extraSmall\">\n          Current Status : {\"Confirmed\"}\n        </DisplayText>\n        <DisplayText size=\"extraSmall\">PickDate : {PickDate}</DisplayText>\n        <DisplayText size=\"extraSmall\">PickTime : {PickTime}</DisplayText>\n      </Stack>\n    );\n  } else if (CurrentStatus === \"Ready_NOT_ASSING\") {\n    return (\n      <Stack vertical=\"false\">\n        <DisplayText size=\"extraSmall\">Current Status : {\"Ready\"}</DisplayText>\n        <DisplayText size=\"extraSmall\">PickDate : {PickDate}</DisplayText>\n        <DisplayText size=\"extraSmall\">PickTime : {PickTime}</DisplayText>\n      </Stack>\n    );\n  } else {\n    return (\n      <Stack vertical=\"false\">\n        <DisplayText size=\"extraSmall\">\n          Current Status : {CurrentStatus}\n        </DisplayText>\n        <DisplayText size=\"extraSmall\">DropDate : {DropDate}</DisplayText>\n        <DisplayText size=\"extraSmall\">DropTime : {DropSlot}</DisplayText>\n      </Stack>\n    );\n  }\n};\n\nconst DropDownx = ({ CurrentStatus, setStatus }) => {\n  let DisablePicked = \"yes\";\n  let DisableInProcess = \"yes\";\n  let DisableReady = \"yes\";\n  let DisableDelivered = \"yes\";\n  if (CurrentStatus === \"Confirmed\") {\n    DisablePicked = \"no\";\n  } else if (CurrentStatus === \"Pickup\") {\n    DisableInProcess = \"no\";\n  } else if (CurrentStatus === \"Inprocess\") {\n    DisableReady = \"no\";\n  } else if (CurrentStatus === \"Ready\") {\n    DisableDelivered = \"no\";\n  } else {\n    return <div></div>;\n  }\n  console.log(DisablePicked);\n  const options = [\n    { value: \"Confirmed\", label: \"Confirmed\", disabled: \"yes\" },\n    { value: \"Pickup\", label: \"Pickup\", disabled: DisablePicked },\n    { value: \"Inprocess\", label: \"Inprocess\", disabled: DisableInProcess },\n    { value: \"Ready\", label: \"Ready\", disabled: DisableReady },\n    { value: \"Delivered\", label: \"Delivered\", disabled: DisableDelivered },\n  ];\n  console.log(options);\n  return (\n    <Stack alignment=\"center\">\n      <DisplayText size=\"extraSmall\">Change status :</DisplayText>\n      <Select\n        className=\"dropdownforstatus\"\n        options={options}\n        isOptionDisabled={(option) => option.disabled === \"yes\"}\n        onChange={(selectstatus) => {\n          setStatus(selectstatus);\n        }}\n        menuPortalTarget={document.body}\n        styles={{\n          menuPortal: (base) => ({ ...base, zIndex: 9999 }),\n        }}\n      />\n    </Stack>\n  );\n};\n\nconst Changequantity = ({\n  CurrentStatus,\n  Options,\n  setboy,\n  quantity,\n  setquantity,\n}) => {\n  if (CurrentStatus === \"Confirmed\") {\n    return (\n      <Stack alignment=\"center\">\n        <DisplayText size=\"extraSmall\">Quantity : </DisplayText>\n        <TextField\n          placeholder=\"2\"\n          connectedRight={<Button primary>KG</Button>}\n          type=\"number\"\n          value={quantity}\n          onChange={(data) => setquantity(data)}\n        ></TextField>\n      </Stack>\n    );\n  } else if (CurrentStatus === \"Confirmed_NOT_ASSING\") {\n    return (\n      <Stack alignment=\"center\">\n        <DisplayText size=\"extraSmall\">Assing Boy : </DisplayText>\n        <Select\n          className=\"dropdownforboys\"\n          options={Options}\n          onChange={(checkselect) => {\n            setboy(checkselect);\n          }}\n          menuPortalTarget={document.body}\n          styles={{\n            menuPortal: (base) => ({ ...base, zIndex: 9999 }),\n          }}\n        ></Select>\n      </Stack>\n    );\n  } else if (CurrentStatus === \"Ready_NOT_ASSING\") {\n    return (\n      <Stack alignment=\"center\">\n        <DisplayText size=\"extraSmall\">Assing Boy : </DisplayText>\n        <Select\n          className=\"dropdownforboys\"\n          options={Options}\n          onChange={(checkselect) => {\n            setboy(checkselect);\n          }}\n          menuPortalTarget={document.body}\n          styles={{\n            menuPortal: (base) => ({ ...base, zIndex: 9999 }),\n          }}\n        ></Select>\n      </Stack>\n    );\n  } else {\n    return <div></div>;\n  }\n};\n\nconst Modalx = ({ keyx, value, setReschedule }) => {\n\n  const [activecomplete, setActivecomplete] = useState(false);\n\n  const handleActivebanner = useCallback(\n    () => setActivecomplete(!activecomplete),\n    [activecomplete]\n  );\n\n  const handlecompleteChange = () => {\n    handleActivebanner();\n    setActive(false);\n    window.location.reload();\n  };\n\n  const [Text, setText] = useState(\"\");\n  const [Statusx, setStatusx] = useState(\"\");\n  const [quantity, setquantity] = useState(\"1\");\n  const [active, setActive] = useState(false);\n\n  const newhandler = useCallback(() => setActive(!active), [active]);\n\n  const handleChangeX = () => {\n    if (keyx !== key) {\n      fetchstate();\n      fetchBoy();\n      setKey(keyx);\n    }\n    newhandler();\n  };\n\n  const activator = <p onClick={handleChangeX}>{value}</p>;\n\n  const [CurrentStatus, setCurrentStatus] = useState(\"confirmed\");\n  const [PickDate, setPickDate] = useState(\"confirmed\");\n  const [PickTime, setPickTime] = useState(\"confirmed\");\n  const [DropDate, setDropDate] = useState(\"confirmed\");\n  const [DropSlot, setDropSlot] = useState(\"confirmed\");\n  const [SelectBoy, setSelectBoy] = useState(\"\");\n  const fetchstate = () => {\n    axios\n      .get(API + \"/status/\" + keyx, {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      })\n      .then((response) => {\n        setCurrentStatus(response.data.status.OrderStatus);\n        setPickDate(response.data.status.PickDate);\n        setPickTime(response.data.status.PickTime);\n        setDropDate(response.data.status.DropDate);\n        setDropSlot(response.data.status.DropSlot);\n      });\n  };\n\n  const [Options, setOptions] = useState([\n    { value: \"please Wait\", label: \"please wait\" },\n  ]);\n  const fetchBoy = () => {\n    axios\n      .get(API + \"/assing/boy\", {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      })\n      .then((response) => {\n        setOptions(response.data.data);\n      })\n      .catch((response) => {\n        console.log(response);\n      });\n  };\n\n  const Assingboy = (current_status) => {\n    axios\n      .post(\n        API + \"/assing/boy\",\n        {\n          orderid: keyx,\n          assing: SelectBoy.value,\n          current_status: current_status,\n        },\n        {\n          headers: {\n            Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n          },\n        }\n      )\n      .then((response) => {\n        setText(response.data.data);\n        handlecompleteChange();\n      })\n      .catch((response) => {\n        console.log(response);\n      });\n  };\n  const [key, setKey] = useState(0);\n  // useEffect(() => {\n  //   if (keyx != key) {\n  //     fetchstate();\n  //     fetchBoy();\n  //     setKey(keyx);\n  //   }\n  // }, []);\n\n  const Changestatus = () => {\n    let RequestedUrl = \"\";\n    console.log(Statusx.value);\n    if (Statusx.value === \"Pickup\") {\n      RequestedUrl =\n        API +\n        \"/orderstatus/pickup\" +\n        \"?orderid=\" +\n        keyx +\n        \"&quantity=\" +\n        quantity;\n    } else if (Statusx.value === \"Inprocess\") {\n      RequestedUrl = API + \"/orderstatus/Inprocess\" + \"?orderid=\" + keyx;\n    } else if (Statusx.value === \"Ready\") {\n      RequestedUrl = API + \"/orderstatus/Ready\" + \"?orderid=\" + keyx;\n    } else if (Statusx.value === \"Delivered\") {\n      RequestedUrl = API + \"/orderstatus/Delivered\" + \"?orderid=\" + keyx;\n    }\n    axios\n      .get(RequestedUrl, {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      })\n      .then((response) => {\n        setText(response.data.data);\n        handlecompleteChange();\n      })\n      .catch((response) => {\n        console.log(response);\n      });\n  };\n\n  const Reschedule = () => {\n    setReschedule(keyx);\n    newhandler();\n  };\n\n  const IsDelivered = () => {\n    if (CurrentStatus !== \"Delivered\") {\n      return (\n        <Button\n          outline\n          monochrome\n          onClick={() => {\n            Reschedule();\n          }}\n        >\n          Reschedule\n        </Button>\n      );\n    } else {\n      return <div></div>;\n    }\n  };\n  return (\n    <div>\n      <Modal\n        activator={activator}\n        open={active}\n        onClose={handleChangeX}\n        title={\"Order ID \" + keyx}\n        // title={orderId}\n      >\n        <Modal.Section>\n          <Card>\n            <div className=\"Orderstatus\">\n              <Stack vertical=\"false\">\n                <PickDelShow\n                  CurrentStatus={CurrentStatus}\n                  PickDate={PickDate}\n                  PickTime={PickTime}\n                  DropDate={DropDate}\n                  DropSlot={DropSlot}\n                />\n                <DropDownx\n                  CurrentStatus={CurrentStatus}\n                  setStatus={setStatusx}\n                />\n                <Changequantity\n                  CurrentStatus={CurrentStatus}\n                  Options={Options}\n                  key={keyx}\n                  setboy={setSelectBoy}\n                  quantity={quantity}\n                  setquantity={setquantity}\n                />\n                <Stack spacing=\"extraLoose\" alignment=\"center\">\n                  <Stack.Item fill>\n                    <Button\n                      primary\n                      onClick={() => {\n                        if (\n                          CurrentStatus === \"Confirmed_NOT_ASSING\" ||\n                          CurrentStatus === \"Ready_NOT_ASSING\"\n                        ) {\n                          Assingboy(CurrentStatus);\n                        } else {\n                          Changestatus();\n                        }\n                      }}\n                    >\n                      Confirmed\n                    </Button>\n                  </Stack.Item>\n                  <Stack.Item>\n                    <IsDelivered />\n                  </Stack.Item>\n                </Stack>\n              </Stack>\n            </div>\n          </Card>\n        </Modal.Section>\n      </Modal>\n      <Modal open={activecomplete} onClose={handlecompleteChange}>\n        <Modal.Section>\n          <TextContainer>\n            <Banner status=\"success\">\n              <p>{Text}</p>\n            </Banner>\n          </TextContainer>\n        </Modal.Section>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Modalx;\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport {\n  Layout,\n  Stack,\n  DatePicker,\n  Modal,\n  DisplayText,\n  TextField,\n  Button,\n} from \"@shopify/polaris\";\nimport Select from \"react-select\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport { API } from \"../API\";\nimport \"./App.css\";\n\nconst Reschedule = ({\n  keyx,\n  setTextX,\n  handleChange,\n  handleerror,\n  handleReschedule,\n}) => {\n  const [valuenumpick, setvaluenumpick] = useState(\"no\");\n  const [valuenum2pick, setvaluenum2pick] = useState(\"no\");\n  const [valuenum3pick, setvaluenum3pick] = useState(\"no\");\n  const [valuenum4pick, setvaluenum4pick] = useState(\"no\");\n  const [valuenum5pick, setvaluenum5pick] = useState(\"no\");\n  const optionspick = [\n    {\n      value: \"08 AM To 10 AM\",\n      label: \"08 AM To 10 AM\",\n      disabled: valuenumpick,\n    },\n    {\n      value: \"10 AM To 12 PM\",\n      label: \"10 AM To 12 PM\",\n      disabled: valuenum2pick,\n    },\n    {\n      value: \"01 PM To 03 PM\",\n      label: \"01 PM To 03 PM\",\n      disabled: valuenum3pick,\n    },\n    {\n      value: \"03 PM To 05 PM\",\n      label: \"03 PM To 05 PM\",\n      disabled: valuenum4pick,\n    },\n    {\n      value: \"05 PM To 07 PM\",\n      label: \"05 PM To 07 PM\",\n      disabled: valuenum5pick,\n    },\n  ];\n\n  const [valuenumdrop, setvaluenumdrop] = useState(\"no\");\n  const [valuenum2drop, setvaluenum2drop] = useState(\"no\");\n  const [valuenum3drop, setvaluenum3drop] = useState(\"no\");\n  const [valuenum4drop, setvaluenum4drop] = useState(\"no\");\n  const [valuenum5drop, setvaluenum5drop] = useState(\"no\");\n  const optionsdrop = [\n    {\n      value: \"08 AM To 10 AM\",\n      label: \"08 AM To 10 AM\",\n      disabled: valuenumdrop,\n    },\n    {\n      value: \"10 AM To 12 PM\",\n      label: \"10 AM To 12 PM\",\n      disabled: valuenum2drop,\n    },\n    {\n      value: \"01 PM To 03 PM\",\n      label: \"01 PM To 03 PM\",\n      disabled: valuenum3drop,\n    },\n    {\n      value: \"03 PM To 05 PM\",\n      label: \"03 PM To 05 PM\",\n      disabled: valuenum4drop,\n    },\n    {\n      value: \"05 PM To 07 PM\",\n      label: \"05 PM To 07 PM\",\n      disabled: valuenum5drop,\n    },\n  ];\n\n  const [picktimeX, setPicktimeX] = useState(optionspick[0]);\n  const [droptimeX, setDroptimeX] = useState(optionsdrop[0]);\n\n  const [Dropx, setDropx] = useState();\n  const [Pickupx, setPickupx] = useState();\n  const handlepicktimedropdown = (Time) => {\n    console.log(Time.value);\n    setPicktimeX(Time.value);\n    let Datexx = selectedpickDates.start;\n    console.log(moment(Datexx));\n    axios\n      .post(\n        API + \"/timeslot\",\n        {\n          timeslotx: Time.value,\n          DateSlot: moment(Datexx),\n        },\n        {\n          headers: {\n            Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n          },\n        }\n      )\n      .then((response) => {\n        console.log(response);\n        setPickupx(\n          \"Pickup: \" + response.data.PickUp + \" Drop: \" + response.data.Drop\n        );\n      });\n  };\n\n  const handledroptimedropdown = (Time) => {\n    setDroptimeX(Time.value);\n    let Datexx = selecteddropDates.start;\n    console.log(moment(Datexx).add(1, \"d\"));\n    axios\n      .post(\n        API + \"/timeslot\",\n        {\n          timeslotx: Time.value,\n          DateSlot: moment(Datexx),\n        },\n        {\n          headers: {\n            Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n          },\n        }\n      )\n      .then((response) => {\n        console.log(response);\n        setDropx(\n          \"Pickup: \" + response.data.PickUp + \" Drop: \" + response.data.Drop\n        );\n      });\n  };\n\n  /* GET MONTH AND YEAR FOR DATEPICKER USING MOMENT.JS */\n  const monthIndex = moment().month().toString();\n  const year = moment().year().toString();\n  /* END HERE */\n  const [activepick, setActivepick] = useState(false);\n  const handleChangepick = useCallback(() => setActivepick(!activepick), [\n    activepick,\n  ]);\n  const [activedrop, setActivedrop] = useState(false);\n  const handleChangedrop = useCallback(() => setActivedrop(!activedrop), [\n    activedrop,\n  ]);\n  const [{ pickmonth, pickyear }, setPickDate] = useState({\n    pickmonth: parseInt(monthIndex),\n    pickyear: parseInt(year),\n  });\n  const [selectedpickDates, setSelectedpickDates] = useState({\n    start: new Date(moment().toString()),\n    end: new Date(moment().toString()),\n  });\n\n  const handlePickMonthChange = useCallback(\n    (pickmonth, pickyear) => setPickDate({ pickmonth, pickyear }),\n    []\n  );\n\n  const [pickdatevalue, setPickdatevalue] = useState(\n    moment().format(\"MMMM Do YYYY\").toString()\n  );\n\n  const [selectedpickdatetosend, setselectedpickdatetosend] = useState(\n    selectedpickDates.start\n  );\n  const Datepickchanger = (Date) => {\n    /* THIS FUNCATION WILL CHANGE THE DATE IN STATE AND CLOSE THE MODEL */\n    disabledManagerpick(Date.start);\n    setSelectedpickDates(Date.start);\n    setselectedpickdatetosend(moment(Date.start).add(1, \"d\"));\n    setPickdatevalue(moment(Date.start).format(\"MMMM Do YYYY\").toString());\n    handleChangepick();\n  };\n  /* END HERE */\n\n  /* DATEPICKER DROP STATE START HERE */\n  const [{ dropmonth, dropyear }, setdropDate] = useState({\n    dropmonth: parseInt(monthIndex),\n    dropyear: parseInt(year),\n  });\n  const [selecteddropDates, setSelecteddropDates] = useState({\n    start: new Date(moment().add(1, \"d\").toString()),\n    end: new Date(moment().add(1, \"d\").toString()),\n  });\n\n  const handleDropMonthChange = useCallback(\n    (dropmonth, dropyear) => setdropDate({ dropmonth, dropyear }),\n    []\n  );\n\n  const [dropdatevalue, setDropdatevalue] = useState(\n    moment().add(1, \"d\").format(\"MMMM Do YYYY\").toString()\n  );\n\n  const [selectdropdatetosend, setselectdropdatetosend] = useState(\n    selecteddropDates.start\n  );\n  const Datedropchanger = (Date) => {\n    /* THIS FUNCATION WILL CHANGE THE DATE IN STATE AND CLOSE THE MODEL */\n    disabledManagerdrop(Date.start);\n    setSelecteddropDates(Date.start);\n    setselectdropdatetosend(moment(Date.start).add(1, \"d\"));\n    setDropdatevalue(moment(Date.start).format(\"MMMM Do YYYY\").toString());\n    handleChangedrop();\n  };\n\n  const disabledManagerpick = (Newdate) => {\n    let dateobject = new Date();\n    let hour = dateobject.getHours();\n    let newdate = new Date().getDate();\n    let databasedate = new Date(Newdate).getDate();\n    optionspick.forEach((data, index) => {\n      let info = data[\"value\"].toString().split(\" \");\n      let num = 0;\n      if (info[1] === \"AM\") {\n        num = parseInt(info[0]);\n      } else if (info[1] === \"PM\") {\n        num = parseInt(info[0]) + 12;\n      }\n      if (newdate === databasedate) {\n        if (num <= hour || num + 1 == hour || num - 1 == hour) {\n          switch (index) {\n            case 0:\n              console.log(0);\n              setvaluenumpick(\"yes\");\n              break;\n            case 1:\n              console.log(1);\n              setvaluenum2pick(\"yes\");\n              break;\n            case 2:\n              setvaluenum3pick(\"yes\");\n              break;\n            case 3:\n              setvaluenum4pick(\"yes\");\n              break;\n            case 4:\n              setvaluenum5pick(\"yes\");\n              break;\n          }\n        }\n      } else {\n        console.log(\"FREE EVERY TAB\");\n        setvaluenumpick(\"no\");\n        setvaluenum2pick(\"no\");\n        setvaluenum3pick(\"no\");\n        setvaluenum4pick(\"no\");\n        setvaluenum5pick(\"no\");\n      }\n    });\n  };\n\n  const disabledManagerdrop = (Newdate) => {\n    let dateobject = new Date();\n    let hour = dateobject.getHours();\n    let newdate = new Date(\n      new Date().getTime() + 24 * 60 * 60 * 1000\n    ).getDate();\n    let databasedate = new Date(Newdate).getDate();\n    console.log(newdate);\n    console.log(databasedate);\n    optionsdrop.forEach((data, index) => {\n      let info = data[\"value\"].toString().split(\" \");\n      let num = 0;\n      if (info[1] === \"AM\") {\n        num = parseInt(info[0]);\n      } else if (info[1] === \"PM\") {\n        num = parseInt(info[0]) + 12;\n      }\n      if (newdate === databasedate) {\n        if (num <= hour || num + 1 == hour || num - 1 == hour) {\n          console.log(\"#########################\")\n          switch (index) {\n            case 0:\n              console.log(0);\n              setvaluenumdrop(\"yes\");\n              break;\n            case 1:\n              console.log(1);\n              setvaluenum2drop(\"yes\");\n              break;\n            case 2:\n              setvaluenum3drop(\"yes\");\n              break;\n            case 3:\n              setvaluenum4drop(\"yes\");\n              break;\n            case 4:\n              setvaluenum5drop(\"yes\");\n              break;\n          }\n        }\n      } else {\n        console.log(\"FREE EVERY TAB\");\n        setvaluenumdrop(\"no\");\n        setvaluenum2drop(\"no\");\n        setvaluenum3drop(\"no\");\n        setvaluenum4drop(\"no\");\n        setvaluenum5drop(\"no\");\n      }\n    });\n  };\n\n  const [current_status, setcurrent_status] = useState(\"\");\n  const Getdata = () => {\n    console.log(keyx);\n    axios\n      .get(API + \"/status/\" + keyx, {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      })\n      .then((response) => {\n        disabledManagerpick(selectedpickDates.start);\n        disabledManagerdrop(selecteddropDates.start);\n        setcurrent_status(response.data.status.OrderStatus);\n        setPicktimeX(response.data.status.PickTime);\n        setDroptimeX(response.data.status.DropSlot);\n      })\n      .catch((err) => console.log(err));\n  };\n  useEffect(() => {\n    Getdata();\n  }, [keyx]);\n\n  const IsPickedUpcanBEreshedule = () => {\n    if (\n      current_status === \"Confirmed\" ||\n      current_status === \"Confirmed_NOT_ASSING\"\n    ) {\n      return (\n        <Layout>\n          <Stack alignment=\"trailing\" distribution=\"fillEvenly\">\n            <Layout.Section oneHalf>\n              <TextField\n                type=\"text\"\n                label=\"Pickup Date :\"\n                value={pickdatevalue}\n                onFocus={() => {\n                  handleChangepick();\n                }}\n              />\n              <Modal\n                open={activepick}\n                onClose={handleChangepick}\n                title=\"Pick Slot : \"\n              >\n                <Modal.Section>\n                  <DatePicker\n                    month={pickmonth}\n                    year={pickyear}\n                    onChange={Datepickchanger}\n                    onMonthChange={handlePickMonthChange}\n                    selected={selectedpickDates}\n                    disableDatesBefore={\n                      new Date(moment().subtract(1, \"d\").toString())\n                    }\n                  />\n                </Modal.Section>\n              </Modal>\n            </Layout.Section>\n            <Layout.Section oneHalf>\n              <div className=\"reactselect\">\n                <Select\n                  placeholder=\"Select Pickup Time Slot\"\n                  options={optionspick}\n                  isOptionDisabled={(option) => option.disabled === \"yes\"}\n                  onChange={(checkselect) => {\n                    handlepicktimedropdown(checkselect);\n                  }}\n                  value={optionspick.filter(function (option) {\n                    return option.value === picktimeX;\n                  })}\n                  openOnFocus={true}\n                  autofocus={true}\n                  menuPortalTarget={document.body}\n                  styles={{\n                    menuPortal: (base) => ({ ...base, zIndex: 9999 }),\n                  }}\n                />\n              </div>\n            </Layout.Section>\n          </Stack>\n          <DisplayText size=\"extrasmall\">{Pickupx}</DisplayText>\n        </Layout>\n      );\n    } else {\n      return (\n        <Layout>\n          <Stack alignment=\"trailing\" distribution=\"fillEvenly\">\n            <Layout.Section oneHalf>\n              <TextField\n                type=\"text\"\n                label=\"Pickup Date :\"\n                value={pickdatevalue}\n                onFocus={() => {\n                  handleChangepick();\n                }}\n                disabled\n              />\n              <Modal\n                open={activepick}\n                onClose={handleChangepick}\n                title=\"Pick Slot : \"\n              >\n                <Modal.Section>\n                  <DatePicker\n                    month={pickmonth}\n                    year={pickyear}\n                    onChange={Datepickchanger}\n                    onMonthChange={handlePickMonthChange}\n                    selected={selectedpickDates}\n                    disableDatesBefore={\n                      new Date(moment().subtract(1, \"d\").toString())\n                    }\n                  />\n                </Modal.Section>\n              </Modal>\n            </Layout.Section>\n            <Layout.Section oneHalf>\n              <div className=\"reactselect\">\n                <Select\n                  placeholder=\"Select Pickup Time Slot\"\n                  options={optionspick}\n                  isOptionDisabled={(option) => option.disabled === \"yes\"}\n                  onChange={(checkselect) => {\n                    handlepicktimedropdown(checkselect);\n                  }}\n                  value={optionspick.filter(function (option) {\n                    return option.value === picktimeX;\n                  })}\n\n                  openOnFocus={true}\n                  autofocus={true}\n                  menuPortalTarget={document.body}\n                  styles={{\n                    menuPortal: (base) => ({ ...base, zIndex: 9999 }),\n                  }}\n                  isDisabled={true}\n                />\n              </div>\n            </Layout.Section>\n          </Stack>\n          <DisplayText size=\"extrasmall\">{Pickupx}</DisplayText>\n        </Layout>\n      );\n    }\n  };\n\n  const HandleRescheduleX = () => {\n    const postdata = {\n      orderid: keyx,\n      Pickupdate: selectedpickdatetosend,\n      Pickuptime: picktimeX,\n      Dropdate: selectdropdatetosend,\n      Droptime: droptimeX,\n    };\n    axios\n      .post(API + \"/reschedule\", postdata, {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      })\n      .then((response) => {\n        console.log(response);\n        setTextX(response.data.data);\n        handleChange();\n        handleReschedule(false);\n        window.location.reload();\n      })\n      .catch((err) => {\n        setTextX(err.response);\n        handleerror();\n        handleReschedule(false);\n      });\n  };\n\n  return (\n    <Layout>\n      <Layout.Section>\n        <Stack vertical=\"false\" spacing=\"loose\">\n          <Stack>\n            <IsPickedUpcanBEreshedule />\n            <Layout>\n              <Stack alignment=\"trailing\" distribution=\"fillEvenly\">\n                <Layout.Section oneHalf>\n                  <TextField\n                    type=\"text\"\n                    label=\"Drop Date : \"\n                    value={dropdatevalue}\n                    onFocus={() => {\n                      handleChangedrop();\n                    }}\n                  />\n                  <Modal\n                    open={activedrop}\n                    onClose={handleChangedrop}\n                    title=\"Drop Slot : \"\n                  >\n                    <Modal.Section>\n                      <DatePicker\n                        month={dropmonth}\n                        year={dropyear}\n                        onChange={Datedropchanger}\n                        onMonthChange={handleDropMonthChange}\n                        selected={selecteddropDates}\n                        disableDatesBefore={new Date(moment().toString())}\n                      />\n                    </Modal.Section>\n                  </Modal>\n                </Layout.Section>\n                <Layout.Section oneHalf>\n                  <div className=\"reactselect\">\n                    <Select\n                      placeholder=\"Select Drop Time Slot\"\n                      options={optionsdrop}\n                      isOptionDisabled={(option) => option.disabled === \"yes\"}\n                      onChange={(checkselect) => {\n                        handledroptimedropdown(checkselect);\n                      }}\n                      value={optionsdrop.filter(function (option) {\n                        return option.value === droptimeX;\n                      })}\n                      // defaultValue={droptimeX}\n                      openOnFocus={true}\n                      autofocus={true}\n                      menuPortalTarget={document.body}\n                      styles={{\n                        menuPortal: (base) => ({ ...base, zIndex: 9999 }),\n                      }}\n                    />\n                  </div>\n                </Layout.Section>\n              </Stack>\n              <DisplayText size=\"extrasmall\">{Dropx}</DisplayText>\n            </Layout>\n          </Stack>\n          <Button\n            primary\n            onClick={() => {\n              HandleRescheduleX();\n            }}\n          >\n            Confirmed\n          </Button>\n        </Stack>\n      </Layout.Section>\n    </Layout>\n  );\n};\n\nexport default Reschedule;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport {\n  Layout,\n  Card,\n  Modal,\n  Button,\n  Tabs,\n  Page,\n  DataTable,\n  Badge,\n  Pagination,\n  Stack,\n  DisplayText,\n  Banner,\n  TextContainer,\n} from \"@shopify/polaris\";\nimport AddnewOrder from \"../Neworder/Newordepageformodel\";\nimport ModalChangestatus from \"./ModalStatus\";\nimport axios from \"axios\";\nimport { API } from \"../API\";\nimport Select from \"react-select\";\nimport RescheduleOrder from \"./Reschedule\";\n\nexport default function OrderTemplate() {\n  const [sortedRows, setSortedRows] = useState(null);\n  const [apidata, setApidata] = useState([]);\n  const [Filtereddatastart, setFiltereddatastart] = useState(0);\n  const [Filtereddataend, setFiltereddataend] = useState(5);\n  const initiallySortedRows = apidata.slice(Filtereddatastart, Filtereddataend);\n  const rows = sortedRows ? sortedRows : initiallySortedRows;\n  const [Reschedule, setReschedule] = useState(false);\n  const [key, setkey] = useState(0);\n  const Uchiha = useCallback(() => setReschedule(!Reschedule), [Reschedule]);\n\n  const [Text, setText] = useState(\"\");\n\n  const [active, setActive] = useState(false);\n  const [triggererror, settriggererror] = useState(false);\n\n  const handleChange = useCallback(() => setActive(!active), [active]);\n\n  const handleerror = useCallback(() => settriggererror(!triggererror), [\n    triggererror,\n  ]);\n\n  const handleReschedule = (key) => {\n    setkey(key);\n    Uchiha();\n  };\n\n  const [selected, setSelected] = useState(0);\n\n  const TabChange = useCallback(\n    (selectedTabIndex) => setSelected(selectedTabIndex),\n    []\n  );\n\n  const [StoreOptions, setStoreOptions] = useState([\n    { value: \"No store Found\", label: \"No store Found\" },\n  ]);\n  const [Selectedstore, setSelectedstore] = useState(\"Na\");\n  const FetchStores = () => {\n    if (localStorage.getItem(\"role\") === \"Admin\") {\n      axios\n        .get(API + \"/stores/active\", {\n          headers: {\n            Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n          },\n        })\n        .then((response) => {\n          setStoreOptions(response.data.data);\n        })\n        .catch((response) => {\n          console.log(response);\n        });\n    }\n  };\n\n  // Disposable Changes start here\n  const [startId, setstartId] = useState(1);\n  const [endId, setendId] = useState(100);\n\n  const gonext = () => {\n    switch (selected.toString()) {\n      case \"0\":\n        setstartId(startId + 100);\n        setendId(endId + 100);\n        gonextfetch(startId + 100, endId + 100, true, \"order\");\n        break;\n      // Disposable Changes End here\n      case \"1\":\n        setConfirmedstartid(confirmstartid + 100);\n        setConfirmedendid(confirmendid + 100);\n        gonextfetch(\n          confirmstartid + 100,\n          confirmendid + 100,\n          true,\n          \"confirmed\"\n        );\n        break;\n      case \"2\":\n        setPickupstartid(Pickupstartid + 100);\n        setPickupendid(Pickupendid + 100);\n        gonextfetch(startId + 100, endId + 100, true, \"picked\");\n        break;\n      case \"3\":\n        setInprocessendID(inprocessendID - 100);\n        setInprocessendID(inprocessendID - 100);\n        gonextfetch(\n          inprocessendID - 100,\n          inprocessstartID - 100,\n          false,\n          \"inprocess\"\n        );\n        break;\n      case \"4\":\n        setReadystartId(readystartId - 100);\n        setReadyendId(readyendId - 100);\n        gonextfetch(readystartId - 100, readyendId - 100, false, \"ready\");\n        break;\n      case \"5\":\n        setDeliverystartId(DeliverystartId - 100);\n        setDeliveryendId(DeliveryendId - 100);\n        break;\n    }\n  };\n\n  const gopre = () => {\n    console.log(selected);\n    switch (selected.toString()) {\n      case \"0\":\n        if (startId > 1) {\n          setstartId(startId - 100);\n          setendId(endId - 100);\n          gonextfetch(startId - 100, endId - 100, false, \"order\");\n        }\n        break;\n      case \"1\":\n        setConfirmedstartid(confirmstartid - 100);\n        setConfirmedendid(confirmendid - 100);\n        gonextfetch(\n          confirmstartid - 100,\n          confirmendid - 100,\n          false,\n          \"confirmed\"\n        );\n        break;\n      case \"2\":\n        setPickupstartid(Pickupstartid - 100);\n        setPickupendid(Pickupendid - 100);\n        gonextfetch(Pickupstartid - 100, Pickupendid - 100, false, \"picked\");\n        break;\n      case \"3\":\n        setInprocessendID(inprocessendID - 100);\n        setInprocessendID(inprocessendID - 100);\n        gonextfetch(\n          inprocessendID - 100,\n          inprocessendID - 100,\n          false,\n          \"inprocess\"\n        );\n        break;\n      case \"4\":\n        setReadystartId(readystartId - 100);\n        setReadyendId(readyendId - 100);\n        gonextfetch(inprocessendID - 100, inprocessendID - 100, false, \"ready\");\n        break;\n      case \"5\":\n        setDeliverystartId(DeliverystartId - 100);\n        setDeliveryendId(DeliveryendId - 100);\n        break;\n    }\n  };\n\n  const gonextfetch = (startid, endid, go, endpoint) => {\n    let RequestedURI = \"\";\n    switch (endpoint) {\n      case \"order\":\n        RequestedURI =\n          API.toString() + \"/order\" + \"?startid=\" + startid.toString() + \"&endid=\" + endid.toString();\n        break;\n      case \"confirmed\":\n        RequestedURI =\n          API.toString() + \"/filter/confirmed\" + \"?startid=\" + startid.toString() + \"&endid=\" + endid.toString();\n        break;\n      case \"picked\":\n        RequestedURI =\n          API.toString() + \"/filter/picked\" + \"?startid=\" + startid.toString() + \"&endid=\" + endid.toString();\n        break;\n      case \"inprocess\":\n        RequestedURI =\n          API.toString() + \"/filter/inprocess\" + \"?startid=\" + startid.toString() + \"&endid=\" + endid.toString();\n        break;\n      case \"ready\":\n        RequestedURI =\n          API + \"/filter/ready\" + \"?startid=\" + startid.toString() + \"&endid=\" + endid.toString();\n        break;\n      case \"delivered\":\n        RequestedURI =\n          API.toString() + \"/filter/delivered\" + \"?startid=\" + startid.toString() + \"&endid=\" + endid.toString();\n        break;\n      default:\n        RequestedURI =\n          API.toString() + \"/order\" + \"?startid=\" + startid.toString() + \"&endid=\" + endid.toString();\n        break;\n    }\n\n    axios\n      .get(RequestedURI, {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      })\n      .then((response) => {\n        const data = response.data[\"order\"];\n        if (data.length === 0) {\n          if (go) {\n            switch (endpoint) {\n              case \"order\":\n                setstartId(startId);\n                setendId(endId);\n                break;\n              case \"confirmed\":\n                setConfirmedstartid(confirmstartid);\n                setConfirmedendid(confirmendid);\n                break;\n              case \"picked\":\n                setPickupstartid(Pickupstartid);\n                setPickupendid(Pickupendid);\n                break;\n              case \"inprocess\":\n                setInprocessstartID(inprocessendID);\n                setInprocessendID(inprocessendID);\n                break;\n              case \"ready\":\n                setReadystartId(readystartId);\n                setReadyendId(readyendId);\n                break;\n              case \"delivered\":\n                setDeliverystartId(DeliverystartId);\n                setDeliveryendId(DeliveryendId);\n                break;\n            }\n          } else {\n            switch (endpoint) {\n              case \"order\":\n                setstartId(startId);\n                setendId(endId);\n                break;\n              case \"confirmed\":\n                setConfirmedstartid(confirmstartid);\n                setConfirmedendid(confirmendid);\n                break;\n              case \"picked\":\n                setPickupstartid(Pickupstartid);\n                setPickupendid(Pickupendid);\n                break;\n              case \"inprocess\":\n                setInprocessstartID(inprocessendID);\n                setInprocessendID(inprocessendID);\n                break;\n              case \"ready\":\n                setReadystartId(readystartId);\n                setReadyendId(readyendId);\n                break;\n              case \"delivered\":\n                setDeliverystartId(DeliverystartId);\n                setDeliveryendId(DeliveryendId);\n                break;\n            }\n          }\n        } else {\n          setApidata(data);\n        }\n      })\n      .catch(console.log(\"sorry error\"));\n  };\n\n  const FetchStoredata = (Selectedstore) => {\n    axios\n      .get(\n        API +\n          \"/order/\" +\n          Selectedstore +\n          \"?startid=\" +\n          startId +\n          \"&endid=\" +\n          endId,\n        {\n          headers: {\n            Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n          },\n        }\n      )\n      .then((response) => {\n        console.log(response.data[\"order\"]);\n        let Data = response.data[\"order\"].map(function (rowS) {\n          let Disposabledata = rowS.map(function (item) {\n            return (\n              <ModalChangestatus\n                keyx={rowS[0]}\n                value={item}\n                setReschedule={handleReschedule}\n              />\n            );\n          });\n          return Disposabledata;\n        });\n        console.log(Data);\n        setApidata(Data);\n      });\n  };\n  const [ChoosenStore, setChoosenStore] = useState();\n  const SelectStoreforAdmin = () => {\n    if (localStorage.getItem(\"role\") === \"Admin\") {\n      return (\n        <div>\n          <Select\n            name=\"Select Store\"\n            placeholder=\"Select Store\"\n            className=\"storeselect\"\n            options={StoreOptions}\n            value={ChoosenStore}\n            onChange={(checkselect) => {\n              console.log(checkselect);\n              setSelectedstore(checkselect.value);\n              setChoosenStore(checkselect);\n              FetchNumerofAllorderStore(checkselect.value);\n              switch (selected.toString()) {\n                case \"0\":\n                  fetchAllOrderfirstonly(checkselect.value);\n                  break;\n                case \"1\":\n                  fetchConfirmedfirstonly(checkselect.value);\n                  break;\n                case \"2\":\n                  fetchPickupfirstonly(checkselect.value);\n                  break;\n                case \"3\":\n                  fetchinprocessfirstonly(checkselect.value);\n                  break;\n                case \"4\":\n                  fetchreadyfirstonly(checkselect.value);\n                  break;\n                case \"5\":\n                  fetchdeliveredfirstonly(checkselect.value);\n                  break;\n                default:\n                  fetchAllOrder();\n                  break;\n              }\n            }}\n            openOnFocus={true}\n            autofocus={true}\n            menuPortalTarget={document.body}\n            styles={{ menuPortal: (base) => ({ ...base, zIndex: 9999 }) }}\n          />\n        </div>\n      );\n    } else {\n      return <div></div>;\n    }\n  };\n\n  const fetchAllOrderfirstonly = (store) => {\n    console.log(\"fetchAllOrder order\");\n    const RequestApi =\n      API + \"/order/\" + store + \"?startid=\" + startId + \"&endid=\" + endId;\n    axios\n      .get(RequestApi, {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      })\n      .then((response) => {\n        console.log(response.data[\"order\"]);\n        let Data = response.data[\"order\"].map(function (rowS) {\n          let Disposabledata = rowS.map(function (item) {\n            return (\n              <ModalChangestatus\n                keyx={rowS[0]}\n                value={item}\n                setReschedule={handleReschedule}\n              />\n            );\n          });\n          return Disposabledata;\n        });\n        console.log(Data);\n        setApidata(Data);\n      })\n      .catch(console.log(\"sorry error\"));\n  };\n\n  const fetchAllOrder = () => {\n    console.log(\"fetchAllOrder order\");\n    let RequestApi = \"\";\n    if (Selectedstore === \"Na\") {\n      RequestApi = API + \"/order\" + \"?startid=\" + startId + \"&endid=\" + endId;\n    } else {\n      RequestApi =\n        API +\n        \"/order/\" +\n        Selectedstore +\n        \"?startid=\" +\n        startId +\n        \"&endid=\" +\n        endId;\n    }\n    axios\n      .get(RequestApi, {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      })\n      .then((response) => {\n        console.log(response.data[\"order\"]);\n        let Data = response.data[\"order\"].map(function (rowS) {\n          let Disposabledata = rowS.map(function (item) {\n            return (\n              <ModalChangestatus\n                keyx={rowS[0]}\n                value={item}\n                setReschedule={handleReschedule}\n              />\n            );\n          });\n          return Disposabledata;\n        });\n        console.log(Data);\n        setApidata(Data);\n      })\n      .catch(console.log(\"sorry error\"));\n  };\n\n  const [confirmstartid, setConfirmedstartid] = useState(1);\n  const [confirmendid, setConfirmedendid] = useState(100);\n\n  const fetchConfirmedfirstonly = (store) => {\n    console.log(\"fetchConfirmed order\");\n    const RequestApi =\n      API +\n      \"/filter/confirmed/\" +\n      store +\n      \"?startid=\" +\n      confirmstartid +\n      \"&endid=\" +\n      confirmendid;\n\n    axios\n      .get(RequestApi, {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      })\n      .then((response) => {\n        console.log(response.data[\"order\"]);\n        let Data = response.data[\"order\"].map(function (rowS) {\n          let Disposabledata = rowS.map(function (item) {\n            return (\n              <ModalChangestatus\n                keyx={rowS[0]}\n                value={item}\n                setReschedule={handleReschedule}\n              />\n            );\n          });\n          return Disposabledata;\n        });\n        console.log(Data);\n        setApidata(Data);\n      })\n      .catch(console.log(\"sorry error\"));\n  };\n\n  const fetchConfirmed = () => {\n    console.log(\"fetchConfirmed order\");\n    let RequestApi = \"\";\n    if (Selectedstore === \"Na\") {\n      RequestApi =\n        API +\n        \"/filter/confirmed\" +\n        \"?startid=\" +\n        confirmstartid +\n        \"&endid=\" +\n        confirmendid;\n    } else {\n      RequestApi =\n        API +\n        \"/filter/confirmed/\" +\n        Selectedstore +\n        \"?startid=\" +\n        confirmstartid +\n        \"&endid=\" +\n        confirmendid;\n    }\n    axios\n      .get(RequestApi, {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      })\n      .then((response) => {\n        console.log(response.data[\"order\"]);\n        let Data = response.data[\"order\"].map(function (rowS) {\n          let Disposabledata = rowS.map(function (item) {\n            return (\n              <ModalChangestatus\n                keyx={rowS[0]}\n                value={item}\n                setReschedule={handleReschedule}\n              />\n            );\n          });\n          return Disposabledata;\n        });\n        console.log(Data);\n        setApidata(Data);\n      })\n      .catch(console.log(\"sorry error\"));\n  };\n\n  const [Pickupstartid, setPickupstartid] = useState(1);\n  const [Pickupendid, setPickupendid] = useState(100);\n\n  const fetchPickupfirstonly = (store) => {\n    console.log(\"fetchPickup order\");\n    const RequestApi =\n      API +\n      \"/filter/picked/\" +\n      store +\n      \"?startid=\" +\n      Pickupstartid +\n      \"&endid=\" +\n      Pickupendid;\n\n    axios\n      .get(RequestApi, {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      })\n      .then((response) => {\n        console.log(response.data[\"order\"]);\n        let Data = response.data[\"order\"].map(function (rowS) {\n          let Disposabledata = rowS.map(function (item) {\n            return (\n              <ModalChangestatus\n                keyx={rowS[0]}\n                value={item}\n                setReschedule={handleReschedule}\n              />\n            );\n          });\n          return Disposabledata;\n        });\n        console.log(Data);\n        setApidata(Data);\n      })\n      .catch((data) => {\n        console.log(data);\n      });\n  };\n\n  const fetchPickup = () => {\n    console.log(\"fetchPickup order\");\n    let RequestApi = \"\";\n    if (Selectedstore === \"Na\") {\n      RequestApi =\n        API +\n        \"/filter/picked\" +\n        \"?startid=\" +\n        Pickupstartid +\n        \"&endid=\" +\n        Pickupendid;\n    } else {\n      RequestApi =\n        API +\n        \"/filter/picked/\" +\n        Selectedstore +\n        \"?startid=\" +\n        Pickupstartid +\n        \"&endid=\" +\n        Pickupendid;\n    }\n    axios\n      .get(RequestApi, {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      })\n      .then((response) => {\n        console.log(response.data[\"order\"]);\n        let Data = response.data[\"order\"].map(function (rowS) {\n          let Disposabledata = rowS.map(function (item) {\n            return (\n              <ModalChangestatus\n                keyx={rowS[0]}\n                value={item}\n                setReschedule={handleReschedule}\n              />\n            );\n          });\n          return Disposabledata;\n        });\n        console.log(Data);\n        setApidata(Data);\n      })\n      .catch((data) => {\n        console.log(data);\n      });\n  };\n\n  const [inprocessstartID, setInprocessstartID] = useState(1);\n  const [inprocessendID, setInprocessendID] = useState(100);\n\n  const fetchinprocessfirstonly = (store) => {\n    console.log(\"fetchinprocess order\");\n    const RequestApi =\n      API +\n      \"/filter/inprocess/\" +\n      store +\n      \"?startid=\" +\n      inprocessstartID +\n      \"&endid=\" +\n      inprocessendID;\n\n    axios\n      .get(RequestApi, {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      })\n      .then((response) => {\n        console.log(response.data[\"order\"]);\n        let Data = response.data[\"order\"].map(function (rowS) {\n          let Disposabledata = rowS.map(function (item) {\n            return (\n              <ModalChangestatus\n                keyx={rowS[0]}\n                value={item}\n                setReschedule={handleReschedule}\n              />\n            );\n          });\n          return Disposabledata;\n        });\n        console.log(Data);\n        setApidata(Data);\n      })\n      .catch(console.log(\"sorry error\"));\n  };\n\n  const fetchinprocess = () => {\n    console.log(\"fetchinprocess order\");\n    let RequestApi = \"\";\n    if (Selectedstore === \"Na\") {\n      RequestApi =\n        API +\n        \"/filter/inprocess\" +\n        \"?startid=\" +\n        inprocessstartID +\n        \"&endid=\" +\n        inprocessendID;\n    } else {\n      RequestApi =\n        API +\n        \"/filter/inprocess/\" +\n        Selectedstore +\n        \"?startid=\" +\n        inprocessstartID +\n        \"&endid=\" +\n        inprocessendID;\n    }\n    axios\n      .get(RequestApi, {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      })\n      .then((response) => {\n        console.log(response.data[\"order\"]);\n        let Data = response.data[\"order\"].map(function (rowS) {\n          let Disposabledata = rowS.map(function (item) {\n            return (\n              <ModalChangestatus\n                keyx={rowS[0]}\n                value={item}\n                setReschedule={handleReschedule}\n              />\n            );\n          });\n          return Disposabledata;\n        });\n        console.log(Data);\n        setApidata(Data);\n      })\n      .catch(console.log(\"sorry error\"));\n  };\n\n  const [readystartId, setReadystartId] = useState(1);\n  const [readyendId, setReadyendId] = useState(100);\n\n  const fetchreadyfirstonly = (store) => {\n    console.log(\"fetchready order\");\n    const RequestApi =\n      API +\n      \"/filter/ready/\" +\n      store +\n      \"?startid=\" +\n      readystartId +\n      \"&endid=\" +\n      readyendId;\n\n    axios\n      .get(RequestApi, {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      })\n      .then((response) => {\n        console.log(response.data[\"order\"]);\n        let Data = response.data[\"order\"].map(function (rowS) {\n          let Disposabledata = rowS.map(function (item) {\n            return (\n              <ModalChangestatus\n                keyx={rowS[0]}\n                value={item}\n                setReschedule={handleReschedule}\n              />\n            );\n          });\n          return Disposabledata;\n        });\n        console.log(Data);\n        setApidata(Data);\n      })\n      .catch(console.log(\"sorry error\"));\n  };\n\n  const fetchready = () => {\n    console.log(\"fetchready order\");\n    let RequestApi = \"\";\n    if (Selectedstore === \"Na\") {\n      RequestApi =\n        API +\n        \"/filter/ready\" +\n        \"?startid=\" +\n        readystartId +\n        \"&endid=\" +\n        readyendId;\n    } else {\n      RequestApi =\n        API +\n        \"/filter/ready/\" +\n        Selectedstore +\n        \"?startid=\" +\n        readystartId +\n        \"&endid=\" +\n        readyendId;\n    }\n    axios\n      .get(RequestApi, {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      })\n      .then((response) => {\n        console.log(response.data[\"order\"]);\n        let Data = response.data[\"order\"].map(function (rowS) {\n          let Disposabledata = rowS.map(function (item) {\n            return (\n              <ModalChangestatus\n                keyx={rowS[0]}\n                value={item}\n                setReschedule={handleReschedule}\n              />\n            );\n          });\n          return Disposabledata;\n        });\n        console.log(Data);\n        setApidata(Data);\n      })\n      .catch(console.log(\"sorry error\"));\n  };\n\n  const [DeliverystartId, setDeliverystartId] = useState(1);\n  const [DeliveryendId, setDeliveryendId] = useState(100);\n\n  const fetchdeliveredfirstonly = (store) => {\n    console.log(\"fetchdelivered order\");\n    const RequestApi =\n      API +\n      \"/filter/delivered/\" +\n      store +\n      \"?startid=\" +\n      DeliverystartId +\n      \"&endid=\" +\n      DeliveryendId;\n    axios\n      .get(RequestApi, {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      })\n      .then((response) => {\n        console.log(response.data[\"order\"]);\n        let Data = response.data[\"order\"].map(function (rowS) {\n          let Disposabledata = rowS.map(function (item) {\n            return (\n              <ModalChangestatus\n                keyx={rowS[0]}\n                value={item}\n                setReschedule={handleReschedule}\n              />\n            );\n          });\n          return Disposabledata;\n        });\n        console.log(Data);\n        setApidata(Data);\n      })\n      .catch(console.log(\"sorry error\"));\n  };\n\n  const fetchdelivered = () => {\n    console.log(\"fetchdelivered order\");\n    let RequestApi = \"\";\n    if (Selectedstore === \"Na\") {\n      RequestApi =\n        API +\n        \"/filter/delivered\" +\n        \"?startid=\" +\n        DeliverystartId +\n        \"&endid=\" +\n        DeliveryendId;\n    } else {\n      RequestApi =\n        API +\n        \"/filter/delivered/\" +\n        Selectedstore +\n        \"?startid=\" +\n        DeliverystartId +\n        \"&endid=\" +\n        DeliveryendId;\n    }\n    axios\n      .get(RequestApi, {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      })\n      .then((response) => {\n        console.log(response.data[\"order\"]);\n        let Data = response.data[\"order\"].map(function (rowS) {\n          let Disposabledata = rowS.map(function (item) {\n            return (\n              <ModalChangestatus\n                keyx={rowS[0]}\n                value={item}\n                setReschedule={handleReschedule}\n              />\n            );\n          });\n          return Disposabledata;\n        });\n        console.log(Data);\n        setApidata(Data);\n      })\n      .catch(console.log(\"sorry error\"));\n  };\n\n  const [AllOrdercount, setAllOrdercount] = useState(0);\n  const [ConfirmedOrdercount, setConfirmedOrdercount] = useState(0);\n  const [PickedOrdercount, setPickedOrdercount] = useState(0);\n  const [inprocessOrdercount, setInprocessOrdercount] = useState(0);\n  const [readyOrdercount, setReadyOrdercount] = useState(0);\n  const [deliveredOrdercount, setDeliveredOrdercount] = useState(0);\n  const FetchNumerofAllorder = () => {\n    axios\n      .get(API + \"/count\", {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      })\n      .then((Response) => {\n        console.log(Response.data);\n        setAllOrdercount(Response.data[\"all\"]);\n        setConfirmedOrdercount(Response.data[\"Confirmed\"]);\n        setPickedOrdercount(Response.data[\"picked\"]);\n        setInprocessOrdercount(Response.data[\"inprocess\"]);\n        setReadyOrdercount(Response.data[\"ready\"]);\n        setDeliveredOrdercount(Response.data[\"delivered\"]);\n      });\n  };\n\n  const FetchNumerofAllorderStore = (Selectedstore) => {\n    axios\n      .get(API + \"/count/\" + Selectedstore, {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      })\n      .then((Response) => {\n        console.log(Response.data);\n        setAllOrdercount(Response.data[\"all\"]);\n        setConfirmedOrdercount(Response.data[\"Confirmed\"]);\n        setPickedOrdercount(Response.data[\"picked\"]);\n        setInprocessOrdercount(Response.data[\"inprocess\"]);\n        setReadyOrdercount(Response.data[\"ready\"]);\n        setDeliveredOrdercount(Response.data[\"delivered\"]);\n      });\n  };\n\n  useEffect(() => {\n    if (Selectedstore === \"Na\") {\n      fetchAllOrder();\n      FetchNumerofAllorder();\n      if (localStorage.getItem(\"role\") === \"Admin\") {\n        FetchStores();\n      }\n    } else {\n      FetchStoredata(Selectedstore);\n      FetchNumerofAllorderStore(Selectedstore);\n    }\n  }, []);\n\n  const handleTabChange = (selectedTabIndex) => {\n    TabChange(selectedTabIndex);\n    switch (selectedTabIndex.toString()) {\n      case \"0\":\n        fetchAllOrder();\n        break;\n      case \"1\":\n        fetchConfirmed();\n        break;\n      case \"2\":\n        fetchPickup();\n        break;\n      case \"3\":\n        fetchinprocess();\n        break;\n      case \"4\":\n        fetchready();\n        break;\n      case \"5\":\n        fetchdelivered();\n        break;\n      default:\n        fetchAllOrder();\n        break;\n    }\n    setFiltereddatastart(0);\n    setFiltereddataend(5);\n  };\n\n  const tabs = [\n    {\n      id: \"all-customers-fitted\",\n      content: (\n        <span>\n          All <Badge status=\"new\">{AllOrdercount}</Badge>\n        </span>\n      ),\n      accessibilityLabel: \"All customers\",\n      panelID: \"all-customers-fitted-content\",\n    },\n    {\n      id: \"Confirmed\",\n      content: (\n        <span>\n          Confirmed <Badge status=\"new\">{ConfirmedOrdercount}</Badge>\n        </span>\n      ),\n      panelID: \"Confirmed\",\n    },\n    {\n      id: \"Picked\",\n      content: (\n        <span>\n          Picked <Badge status=\"new\">{PickedOrdercount}</Badge>\n        </span>\n      ),\n      panelID: \"Picked\",\n    },\n    {\n      id: \"InProcess\",\n      content: (\n        <span>\n          In Process <Badge status=\"new\">{inprocessOrdercount}</Badge>\n        </span>\n      ),\n      panelID: \"InProcess\",\n    },\n    {\n      id: \"Ready\",\n      content: (\n        <span>\n          Ready<Badge status=\"new\">{readyOrdercount}</Badge>\n        </span>\n      ),\n      panelID: \"Ready\",\n    },\n    {\n      id: \"Delivered\",\n      content: (\n        <span>\n          Delivered <Badge status=\"new\">{deliveredOrdercount}</Badge>\n        </span>\n      ),\n      panelID: \"Delivered\",\n    },\n  ];\n\n  const handleSort = useCallback(\n    (index, direction) => setSortedRows(sortCurrency(rows, index, direction)),\n    [rows]\n  );\n\n  const [activeNeworder, setActiveNeworder] = useState(false);\n  const handleNewoderadd = useCallback(\n    () => setActiveNeworder(!activeNeworder),\n    [activeNeworder]\n  );\n\n  const handleneworder = () => {\n    handleNewoderadd();\n  };\n\n  const Title = () => {\n    return (\n      <Stack>\n        <Stack.Item fill>\n          <DisplayText size=\"small\" className=\"titleText\">\n            Order Details\n          </DisplayText>\n        </Stack.Item>\n        <Stack.Item>\n          <SelectStoreforAdmin />\n        </Stack.Item>\n        <Stack.Item>\n          <Layout>\n            <Layout.Section>\n              <Button primary onClick={handleneworder}>\n                New Order\n              </Button>\n              <Modal\n                open={activeNeworder}\n                onClose={handleneworder}\n                title=\"New Order\"\n              >\n                <Modal.Section>\n                  <AddnewOrder\n                    TriggeredFunc={handleNewoderadd}\n                    Modalclosing={handleNewoderadd}\n                    Handleorderadded={Handleorderadded}\n                    handleerrorcomes={handleerrorcomes}\n                  />\n                </Modal.Section>\n              </Modal>\n            </Layout.Section>\n          </Layout>\n        </Stack.Item>\n      </Stack>\n    );\n  };\n\n  /* ERROR HANDLER STATE START HERE */\n  const [errorcomes, setErrorcomes] = useState(false);\n  const handleerrorcomes = useCallback(() => setErrorcomes(!errorcomes), [\n    errorcomes,\n  ]);\n  /* END HERE */\n\n  /* SUCCESS MODEL STATE START HERE */\n  const [orderadded, setOrderadded] = useState(false);\n  const Handleorderaddednew = useCallback(() => setOrderadded(!orderadded), [\n    orderadded,\n  ]);\n\n  const Handleorderadded = () => {\n    Handleorderaddednew();\n    if (Selectedstore === \"Na\") {\n      fetchAllOrder();\n      FetchNumerofAllorder();\n      if (localStorage.getItem(\"role\") === \"Admin\") {\n        FetchStores();\n      }\n    } else {\n      FetchStoredata(Selectedstore);\n      FetchNumerofAllorderStore(Selectedstore);\n    }\n  };\n  /* END HERE */\n\n  return (\n    <Page\n      fullWidth\n      pagination={{\n        hasNext: true,\n      }}\n    >\n      <Layout>\n        <Layout.Section>\n          <Card title={<Title />}>\n            <Tabs\n              tabs={tabs}\n              selected={selected}\n              onSelect={handleTabChange}\n              fitted\n            >\n              <Card.Section>\n                <DataTable\n                  columnContentTypes={[\n                    \"link\",\n                    \"number\",\n                    \"text\",\n                    \"text\",\n                    \"text\",\n                    \"text\",\n                    \"text\",\n                    \"text\",\n                    \"text\",\n                    \"text\",\n                    \"text\",\n                    \"text\",\n                  ]}\n                  headings={[\n                    \"Order ID\",\n                    \"Customer Phone\",\n                    \"Customer Name\",\n                    \"Address\",\n                    \"Pickup date\",\n                    \"Pickup time\",\n                    \"Delivery date\",\n                    \"Delivery time\",\n                    \"Service\",\n                    \"Order Status\",\n                    \"Quantity\",\n                    \"Amount (in ₹)\",\n                  ]}\n                  rows={rows}\n                  sortable={[false, true, false, false, true]}\n                  defaultSortDirection=\"descending\"\n                  initialSortColumnIndex={0}\n                  onSort={handleSort}\n                />\n                <Pagination\n                  hasPrevious\n                  onPrevious={() => {\n                    if (Filtereddatastart >= 1) {\n                      setFiltereddatastart(Filtereddatastart - 5);\n                      setFiltereddataend(Filtereddataend - 5);\n                    } else {\n                      gopre();\n                      setFiltereddatastart(0);\n                      setFiltereddataend(5);\n                    }\n                  }}\n                  hasNext\n                  onNext={() => {\n                    if (Filtereddataend <= apidata.length) {\n                      setFiltereddatastart(Filtereddatastart + 5);\n                      setFiltereddataend(Filtereddataend + 5);\n                    } else {\n                      gonext();\n                      setFiltereddatastart(0);\n                      setFiltereddataend(5);\n                    }\n                  }}\n                />\n              </Card.Section>\n            </Tabs>\n          </Card>\n        </Layout.Section>\n      </Layout>\n      <Modal open={orderadded} onClose={Handleorderadded}>\n        <Modal.Section>\n          <Banner status=\"success\">\n            <p>Order has been successfully placed</p>\n          </Banner>\n        </Modal.Section>\n      </Modal>\n      <Modal open={errorcomes} onClose={handleerrorcomes}>\n        <Modal.Section>\n          <Banner status=\"critical\">\n            <p>Failed There is a some kind of error</p>\n          </Banner>\n        </Modal.Section>\n      </Modal>\n      <Modal\n        open={Reschedule}\n        onClose={handleReschedule}\n        title={\"Reschedule \" + \"Order ID \" + key}\n      >\n        <Modal.Section>\n          <RescheduleOrder\n            keyx={key}\n            setTextX={setText}\n            handleChange={handleChange}\n            handleerror={handleerror}\n            handleReschedule={setReschedule}\n          />\n        </Modal.Section>\n      </Modal>\n\n      <Modal open={active} onClose={handleChange}>\n        <Modal.Section>\n          <TextContainer>\n            <Banner status=\"success\">\n              <p>{Text}</p>\n            </Banner>\n          </TextContainer>\n        </Modal.Section>\n      </Modal>\n      <Modal open={triggererror} onClose={handleerror}>\n        <Modal.Section>\n          <TextContainer>\n            <Banner status=\"critical\">\n              <p>{Text}</p>\n            </Banner>\n          </TextContainer>\n        </Modal.Section>\n      </Modal>\n    </Page>\n  );\n  function sortCurrency(rows, index, direction) {\n    return [...rows].sort((rowA, rowB) => {\n      const amountA = parseFloat(rowA[index].substring(1));\n      const amountB = parseFloat(rowB[index].substring(1));\n\n      return direction === \"descending\" ? amountB - amountA : amountA - amountB;\n    });\n  }\n}\n","import React, { useCallback, useState,  useRef } from \"react\";\nimport {\n  Card,\n  ActionList,\n  Frame,\n  Navigation,\n  TopBar,\n  Banner,\n} from \"@shopify/polaris\";\nimport {\n  HomeMajor,\n  OnlineStoreMajor,\n  ReportMinor,\n  AnalyticsMajor,\n  SettingsMinor,\n} from \"@shopify/polaris-icons\";\nimport OrderTemplate from \"./OrderPage\";\nimport {Version} from \"../Version\"\nimport { useHistory } from \"react-router-dom\";\n\nexport default function DataTableExample() {\n\n \n  const skipToContentRef = useRef(null);\n  const [searchActive, setSearchActive] = useState(false);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [userMenuActive, setUserMenuActive] = useState(false);\n  const [mobileNavigationActive, setMobileNavigationActive] = useState(false);\n\n  const handleSearchResultsDismiss = useCallback(() => {\n    setSearchActive(false);\n    setSearchValue(\"\");\n  }, []);\n  const handleSearchFieldChange = useCallback((value) => {\n    setSearchValue(value);\n    setSearchActive(value.length > 0);\n  }, []);\n\n  const toggleUserMenuActive = useCallback(\n    () => setUserMenuActive((userMenuActive) => !userMenuActive),\n    []\n  );\n  const toggleMobileNavigationActive = useCallback(\n    () =>\n      setMobileNavigationActive(\n        (mobileNavigationActive) => !mobileNavigationActive\n      ),\n    []\n  );\n\n  const history = useHistory()\n  const Logout = () => {\n    localStorage.removeItem(\"username\");\n    localStorage.removeItem(\"role\");\n    localStorage.removeItem(\"login\");\n    localStorage.removeItem(\"token\");\n    history.push(\"/login\")\n  };\n  const userMenuActions = [\n    {\n      items: [{ content: \"Logout\", onAction: Logout }],\n    },\n  ];\n\n  const userMenuMarkup = (\n    <TopBar.UserMenu\n      actions={userMenuActions}\n      name={localStorage.getItem(\"username\")}\n      initials={localStorage.getItem(\"username\").charAt(0)}\n      open={userMenuActive}\n      onToggle={toggleUserMenuActive}\n    />\n  );\n  const searchResultsMarkup = (\n    <Card>\n      <ActionList\n        items={[\n          { content: \"Shopify help center\" },\n          { content: \"Community forums\" },\n        ]}\n      />\n    </Card>\n  );\n\n  const searchFieldMarkup = (\n    <TopBar.SearchField\n      onChange={handleSearchFieldChange}\n      value={searchValue}\n      placeholder=\"Search\"\n    />\n  );\n\n  const topBarMarkup = (\n    <TopBar\n      showNavigationToggle\n      userMenu={userMenuMarkup}\n      searchResultsVisible={searchActive}\n      searchField={searchFieldMarkup}\n      searchResults={searchResultsMarkup}\n      onSearchResultsDismiss={handleSearchResultsDismiss}\n      onNavigationToggle={toggleMobileNavigationActive}\n    />\n  );\n  const GetRole = () => {\n    return localStorage.getItem(\"role\");\n  };\n\n  const Checkpermission = () => {\n    if (GetRole() === \"Admin\") {\n      return (\n        <div>\n          <Navigation.Section\n            separator\n            title=\"Metrics\"\n            items={[\n              {\n                label: \"Stores Statics\",\n                url: \"storestatics\",\n              },\n              {\n                label: \"Driver Statistics\",\n                url: \"driverstatics\",\n              },\n              {\n                label: \"Customers Statistics\",\n                url: \"/customerstatics\",\n              },\n              {\n                label: \"Revenue Statistics\",\n                url: \"/revenuestatics\",\n              },\n            ]}\n            rollup={{\n              after: 2,\n              view: \"view\",\n              hide: \"hide\",\n              activePath: \"/\",\n            }}\n            action={{\n              icon: AnalyticsMajor,\n              onClick: () => {},\n            }}\n          />\n          <Navigation.Section\n            separator\n            title=\"Admin Settings\"\n            items={[\n              {\n                label: \"Create Store\",\n                url: \"createstore\",\n              },\n              {\n                label: \"Store Settings\",\n                url: \"storesetting\",\n              },\n              {\n                label: \"User Settings\",\n                url: \"usersetting\"\n              },\n          {\n            label: \"General Settings\",\n            url: \"settings\",\n          },\n              {\n                label: \"Add Service\",\n                url: \"createservice\",\n              },\n              {\n                label: \"Create User\",\n                url: \"createuser\",\n              },\n            ]}\n            rollup={{\n              after: 2,\n              view: \"view\",\n              hide: \"hide\",\n              activePath: \"/\",\n            }}\n            action={{\n              icon: SettingsMinor,\n              onClick: () => {},\n            }}\n          />\n        </div>\n      );\n    } else {\n      return <div></div>;\n    }\n  };\n  const navigationMarkup = (\n    <Navigation location=\"/\">\n      <Navigation.Section\n        separator\n        title=\"Dashboard\"\n        items={[\n          {\n            label: \"Overview\",\n            url: \"/overview\",\n          },\n        ]}\n        action={{\n          icon: HomeMajor,\n        }}\n      />\n      <Navigation.Section\n        separator\n        title=\"Order\"\n        items={[\n          {\n            label: \"Order\",\n            url: \"/order\",\n          },\n          {\n            label: \"New order\",\n            url: \"/neworder\",\n          },\n        ]}\n        action={{\n          icon: OnlineStoreMajor,\n          onClick: () => {},\n        }}\n      />\n      <Navigation.Section\n        separator\n        title=\"Reports\"\n        items={[\n          {\n            label: \"Reports\",\n            url: \"/reports\",\n          },\n        ]}\n        action={{\n          icon: ReportMinor,\n          onClick: () => {},\n        }}\n      />\n      <Checkpermission />\n       <Banner status=\"info\">\n        <p>Current version: {Version}</p>\n      </Banner>\n    </Navigation>\n  );\n\n  const RenderPage = <OrderTemplate />;\n\n  return (\n    <Frame\n      topBar={topBarMarkup}\n      navigation={navigationMarkup}\n      showMobileNavigation={mobileNavigationActive}\n      onNavigationDismiss={toggleMobileNavigationActive}\n      skipToContentTarget={skipToContentRef.current}\n    >\n      {RenderPage}\n    </Frame>\n  );\n}\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport {\n  Card,\n  Button,\n  Modal,\n  Layout,\n  Page,\n  TextField,\n  DisplayText,\n  DatePicker,\n  Banner,\n  FormLayout,\n  ChoiceList,\n  Stack,\n} from \"@shopify/polaris\";\nimport \"react-dropdown/style.css\";\nimport axios from \"axios\";\nimport \"react-dropdown/style.css\";\nimport Addons from \"./addons\";\nimport moment from \"moment\";\nimport Servicelist from \"./servicesList\";\nimport \"./App.css\";\nimport { API } from \"../API\";\nimport Select from \"react-select\";\n\nconst NewOrderPage = () => {\n  /* SOURCE RADIO BUTTON STATES START HERE */\n  const [source, setSource] = useState([\"unknown\"]);\n\n  const handlesourceChange = useCallback((value) => setSource(value), []);\n\n  /* END HERE */\n\n  /* ERROR HANDLER STATE START HERE */\n  const [errorcomes, setErrorcomes] = useState(false);\n  const handleerrorcomes = useCallback(() => setErrorcomes(!errorcomes), [\n    errorcomes,\n  ]);\n  /* END HERE */\n\n  /* SUCCESS MODEL STATE START HERE */\n  const [orderadded, setOrderadded] = useState(false);\n  const Handleorderadded = useCallback(() => setOrderadded(!orderadded), [\n    orderadded,\n  ]);\n  /* END HERE */\n\n  /* GET MONTH AND YEAR FOR DATEPICKER USING MOMENT.JS */\n  const monthIndex = moment().month().toString();\n  const year = moment().year().toString();\n  /* END HERE */\n\n  /* SERVICES STATE START HERE */\n  const [ServicesOption, setServicesOption] = useState([\n    { value: \"please Wait\", label: \"please wait\" },\n  ]);\n  const [services, setservices] = useState();\n\n  const handleSelectservice = useCallback(\n    (newdata) => setservices(newdata),\n    []\n  );\n\n  /* END HERE *?\n  \n    /* DATEPICKER TRIGGING STATE START HERE  */\n  const [activepick, setActivepick] = useState(false);\n  const handleChangepick = useCallback(() => setActivepick(!activepick), [\n    activepick,\n  ]);\n  const [activedrop, setActivedrop] = useState(false);\n  const handleChangedrop = useCallback(() => setActivedrop(!activedrop), [\n    activedrop,\n  ]);\n  /* END HERE */\n\n  /* DATEPICKER PICK STATE START HERE */\n  const [{ pickmonth, pickyear }, setPickDate] = useState({\n    pickmonth: parseInt(monthIndex),\n    pickyear: parseInt(year),\n  });\n  const [selectedpickDates, setSelectedpickDates] = useState({\n    start: new Date(moment().toString()),\n    end: new Date(moment().toString()),\n  });\n\n  const handlePickMonthChange = useCallback(\n    (pickmonth, pickyear) => setPickDate({ pickmonth, pickyear }),\n    []\n  );\n\n  const [pickdatevalue, setPickdatevalue] = useState(\n    moment().format(\"MMMM Do YYYY\").toString()\n  );\n\n  const [selectedpickdatetosend, setselectedpickdatetosend] = useState(\n    selectedpickDates.start\n  );\n  const Datepickchanger = (Date) => {\n    /* THIS FUNCATION WILL CHANGE THE DATE IN STATE AND CLOSE THE MODEL */\n    console.log(moment(Date.start).toString());\n    setSelectedpickDates(Date.start);\n    setselectedpickdatetosend(moment(Date.start).add(1, \"d\"));\n    setPickdatevalue(moment(Date.start).format(\"MMMM Do YYYY\").toString());\n    handleChangepick();\n  };\n  /* END HERE */\n\n  /* DATEPICKER DROP STATE START HERE */\n  const [{ dropmonth, dropyear }, setdropDate] = useState({\n    dropmonth: parseInt(monthIndex),\n    dropyear: parseInt(year),\n  });\n  const [selecteddropDates, setSelecteddropDates] = useState({\n    start: new Date(moment().add(1, \"d\").toString()),\n    end: new Date(moment().add(1, \"d\").toString()),\n  });\n\n  const handleDropMonthChange = useCallback(\n    (dropmonth, dropyear) => setdropDate({ dropmonth, dropyear }),\n    []\n  );\n\n  const [dropdatevalue, setDropdatevalue] = useState(\n    moment().add(1, \"d\").format(\"MMMM Do YYYY\").toString()\n  );\n\n  const [selectdropdatetosend, setselectdropdatetosend] = useState(\n    selecteddropDates.start\n  );\n  const Datedropchanger = (Date) => {\n    /* THIS FUNCATION WILL CHANGE THE DATE IN STATE AND CLOSE THE MODEL */\n    console.log(Date.start);\n    setSelecteddropDates(Date.start);\n    setselectdropdatetosend(moment(Date.start).add(1, \"d\"));\n    setDropdatevalue(moment(Date.start).format(\"MMMM Do YYYY\").toString());\n    handleChangedrop();\n  };\n  /* END HERE */\n\n  /* STATES FOR DROPDOWN START HERE */\n  const [valuenumpick, setvaluenumpick] = useState(\"no\");\n  const [valuenum2pick, setvaluenum2pick] = useState(\"no\");\n  const [valuenum3pick, setvaluenum3pick] = useState(\"no\");\n  const [valuenum4pick, setvaluenum4pick] = useState(\"no\");\n  const [valuenum5pick, setvaluenum5pick] = useState(\"no\");\n  const optionspick = [\n    {\n      value: \"08 AM To 10 AM\",\n      label: \"08 AM To 10 AM\",\n      disabled: valuenumpick,\n    },\n    {\n      value: \"10 AM To 12 PM\",\n      label: \"10 AM To 12 PM\",\n      disabled: valuenum2pick,\n    },\n    {\n      value: \"01 PM To 03 PM\",\n      label: \"01 PM To 03 PM\",\n      disabled: valuenum3pick,\n    },\n    {\n      value: \"03 PM To 05 PM\",\n      label: \"03 PM To 05 PM\",\n      disabled: valuenum4pick,\n    },\n    {\n      value: \"05 PM To 07 PM\",\n      label: \"05 PM To 07 PM\",\n      disabled: valuenum5pick,\n    },\n  ];\n\n  const [valuenumdrop, setvaluenumdrop] = useState(\"no\");\n  const [valuenum2drop, setvaluenum2drop] = useState(\"no\");\n  const [valuenum3drop, setvaluenum3drop] = useState(\"no\");\n  const [valuenum4drop, setvaluenum4drop] = useState(\"no\");\n  const [valuenum5drop, setvaluenum5drop] = useState(\"no\");\n  const optionsdrop = [\n    {\n      value: \"08 AM To 10 AM\",\n      label: \"08 AM To 10 AM\",\n      disabled: valuenumdrop,\n    },\n    {\n      value: \"10 AM To 12 PM\",\n      label: \"10 AM To 12 PM\",\n      disabled: valuenum2drop,\n    },\n    {\n      value: \"01 PM To 03 PM\",\n      label: \"01 PM To 03 PM\",\n      disabled: valuenum3drop,\n    },\n    {\n      value: \"03 PM To 05 PM\",\n      label: \"03 PM To 05 PM\",\n      disabled: valuenum4drop,\n    },\n    {\n      value: \"05 PM To 07 PM\",\n      label: \"05 PM To 07 PM\",\n      disabled: valuenum5drop,\n    },\n  ];\n\n  const [picktimeX, setPicktimeX] = useState(optionspick[0]);\n  const [droptimeX, setDroptimeX] = useState(optionsdrop[0]);\n\n  const [Dropx, setDropx] = useState();\n  const [Pickupx, setPickupx] = useState();\n  const handlepicktimedropdown = (Time) => {\n    console.log(Time.value);\n    setPicktimeX(Time.value);\n    let Datexx = selectedpickDates.start;\n    console.log(moment(Datexx));\n    axios\n      .post(\n        API + \"/timeslot\",\n        {\n          timeslotx: Time.value,\n          DateSlot: moment(Datexx),\n        },\n        {\n          headers: {\n            Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n          },\n        }\n      )\n      .then((response) => {\n        console.log(response);\n        setPickupx(\n          \"Pickup: \" + response.data.PickUp + \" Drop: \" + response.data.Drop\n        );\n      });\n  };\n\n  const handledroptimedropdown = (Time) => {\n    setDroptimeX(Time.value);\n    let Datexx = selecteddropDates.start;\n    console.log(moment(Datexx).add(1, \"d\"));\n    axios\n      .post(\n        API + \"/timeslot\",\n        {\n          timeslotx: Time.value,\n          DateSlot: moment(Datexx),\n        },\n        {\n          headers: {\n            Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n          },\n        }\n      )\n      .then((response) => {\n        console.log(response);\n        setDropx(\n          \"Pickup: \" + response.data.PickUp + \" Drop: \" + response.data.Drop\n        );\n      });\n  };\n\n  /* END HERE */\n\n  /* State For Textfield START HERE */\n  const [Pincode, setPincode] = useState();\n  const handlePincodeChange = useCallback(\n    (newValue) => setPincode(newValue),\n    []\n  );\n  const [Mobile, setMobile] = useState(\"\");\n  const secMobileChange = useCallback((newValue) => setMobile(newValue), []);\n  const handleMobileChange = (newValue) => {\n    secMobileChange(newValue);\n    CheckPhoneNum(newValue);\n  };\n  const [Name, setName] = useState(\"\");\n  const handleNameChange = useCallback((newValue) => setName(newValue), []);\n  const [Email, setEmail] = useState(\"\");\n  const handleEmailChange = useCallback((newValue) => setEmail(newValue), []);\n  const [Address, setAddress] = useState(\"\");\n  const handleAddressChange = useCallback(\n    (newValue) => setAddress(newValue),\n    []\n  );\n  const [Landmark, setLandmark] = useState(\"\");\n  const handleLandmarkChange = useCallback(\n    (newValue) => setLandmark(newValue),\n    []\n  );\n  const [Locality, setLocality] = useState(\"\");\n  const handleLocalityChange = useCallback(\n    (newValue) => setLocality(newValue),\n    []\n  );\n  /* END HERE */\n\n  const [addonsx, setaddonsx] = useState(\"\");\n  /* BUTTON CLICK HANDLER START HERE */\n  const buttonClickHandler = () => {\n    let addonsstring = \"\";\n    if (addonsx !== \"\") {\n      for (const [key, value] of addonsx.entries()) {\n        console.log(key, value);\n        addonsstring = addonsstring + \" \" + key;\n      }\n    }\n    console.log(addonsstring);\n    axios\n      .post(\n        API + \"/order/add\",\n        {\n          Mobile: Mobile,\n          Name: Name,\n          Email: Email,\n          Address: Address,\n          Landmark: Landmark,\n          Locality: Locality,\n          Pincode: Locality,\n          PickDate: selectedpickdatetosend,\n          PickTime: picktimeX,\n          DropDate: selectdropdatetosend,\n          DropSlot: droptimeX,\n          Service: services.value,\n          addons: addonsstring,\n          Source: source[0],\n          storeid: Selectedstore.value,\n        },\n        {\n          headers: {\n            \"content-type\": \"text/json\",\n            Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n          },\n        }\n      )\n      .then((data) => {\n        let response = data;\n        console.log(response);\n        Handleorderadded();\n      })\n      .catch((err) => handleerrorcomes());\n  };\n  /* END HERE */\n\n  /* CHECK IF USER DETAILS ARE ALREADY EXSIST TO AUTO FILL THE FORUM */\n  const CheckPhoneNum = (Data) => {\n    if (Data === \"\" || Data.length < 9) {\n      console.log(\"dskjkldsfhgjk\");\n    } else {\n      axios\n        .get(API + \"/checknumber?number=\" + Data, {\n          headers: {\n            Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n          },\n        })\n        .then((res) => {\n          let data = res.data[\"Userdetails\"];\n          handleNameChange(data[\"Name\"]);\n          handleEmailChange(data[\"Email\"]);\n          handleAddressChange(data[\"Address\"]);\n          handleLandmarkChange(data[\"Landmark\"]);\n          handleLocalityChange(data[\"Locality\"]);\n          handlePincodeChange(data[\"Pincode\"]);\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n\n  const [fetcheddata, setfetcheddata] = useState([]);\n  const FetchAddons = (data) => {\n    axios\n      .get(API + \"/addons/\" + data, {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      })\n      .then((response) => {\n        setfetcheddata(response.data.data);\n      })\n      .catch((response) => {\n        console.log(response);\n      });\n  };\n\n  const isadminx = localStorage.getItem(\"role\");\n  const IsAdmin = ({ storeoption, setSelectedstore, Selectedstore }) => {\n    if (isadminx === \"Admin\") {\n      return (\n        <div>\n          <Layout>\n            <Layout.Section secondary>\n              <DisplayText size=\"extraSmall\">Select Store : </DisplayText>\n            </Layout.Section>\n            <Layout.Section>\n              <Select\n                name=\"Select Store\"\n                placeholder=\"Select Store\"\n                options={storeoption}\n                value={Selectedstore}\n                onChange={(checkselect) => {\n                  console.log(checkselect);\n                  setSelectedstore(checkselect);\n                }}\n                openOnFocus={true}\n                autofocus={true}\n                menuPortalTarget={document.body}\n                styles={{ menuPortal: (base) => ({ ...base, zIndex: 9999 }) }}\n              />\n            </Layout.Section>\n          </Layout>\n        </div>\n      );\n    } else {\n      return <div></div>;\n    }\n  };\n  const [StoreOptions, setStoreOptions] = useState([\n    { value: \"No store Found\", label: \"No store Found\" },\n  ]);\n  const [Selectedstore, setSelectedstore] = useState(\"Na\");\n  const FetchStores = () => {\n    if (isadminx === \"Admin\") {\n      axios\n        .get(API + \"/stores/active\", {\n          headers: {\n            Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n          },\n        })\n        .then((response) => {\n          setStoreOptions(response.data.data);\n        })\n        .catch((response) => {\n          console.log(response);\n        });\n    }\n  };\n\n  const disabledManagerpick = (Newdate) => {\n    let dateobject = new Date();\n    let hour = dateobject.getHours();\n    let newdate = new Date().getDate();\n    let databasedate = new Date(Newdate).getDate();\n    optionspick.forEach((data, index) => {\n      let info = data[\"value\"].toString().split(\" \");\n      let num = 0;\n      if (info[1] === \"AM\") {\n        num = parseInt(info[0]);\n      } else if (info[1] === \"PM\") {\n        num = parseInt(info[0]) + 12;\n      }\n      if (newdate === databasedate) {\n        if (num <= hour || num + 1 == hour || num - 1 == hour) {\n          switch (index) {\n            case 0:\n              console.log(0);\n              setvaluenumpick(\"yes\");\n              break;\n            case 1:\n              console.log(1);\n              setvaluenum2pick(\"yes\");\n              break;\n            case 2:\n              setvaluenum3pick(\"yes\");\n              break;\n            case 3:\n              setvaluenum4pick(\"yes\");\n              break;\n            case 4:\n              setvaluenum5pick(\"yes\");\n              break;\n          }\n        }\n      } else {\n        console.log(\"FREE EVERY TAB\");\n        setvaluenumpick(\"no\");\n        setvaluenum2pick(\"no\");\n        setvaluenum3pick(\"no\");\n        setvaluenum4pick(\"no\");\n        setvaluenum5pick(\"no\");\n      }\n    });\n  };\n\n  const disabledManagerdrop = (Newdate) => {\n    let dateobject = new Date();\n    let hour = dateobject.getHours();\n    let newdate = new Date(\n      new Date().getTime() + 24 * 60 * 60 * 1000\n    ).getDate();\n    let databasedate = new Date(Newdate).getDate();\n    console.log(newdate);\n    console.log(databasedate);\n    optionsdrop.forEach((data, index) => {\n      let info = data[\"value\"].toString().split(\" \");\n      let num = 0;\n      if (info[1] === \"AM\") {\n        num = parseInt(info[0]);\n      } else if (info[1] === \"PM\") {\n        num = parseInt(info[0]) + 12;\n      }\n      if (newdate === databasedate) {\n        if (num <= hour || num + 1 == hour || num - 1 == hour) {\n          console.log(\"#########################\");\n          switch (index) {\n            case 0:\n              console.log(0);\n              setvaluenumdrop(\"yes\");\n              break;\n            case 1:\n              console.log(1);\n              setvaluenum2drop(\"yes\");\n              break;\n            case 2:\n              setvaluenum3drop(\"yes\");\n              break;\n            case 3:\n              setvaluenum4drop(\"yes\");\n              break;\n            case 4:\n              setvaluenum5drop(\"yes\");\n              break;\n          }\n        }\n      } else {\n        console.log(\"FREE EVERY TAB\");\n        setvaluenumdrop(\"no\");\n        setvaluenum2drop(\"no\");\n        setvaluenum3drop(\"no\");\n        setvaluenum4drop(\"no\");\n        setvaluenum5drop(\"no\");\n      }\n    });\n  };\n\n  useEffect(() => {\n    FetchStores();\n    disabledManagerpick(selectedpickDates.start);\n    disabledManagerdrop(selecteddropDates.start);\n  }, []);\n\n  const Title = (\n    <DisplayText size=\"small\">New Order</DisplayText>\n  )\n  return (\n    <Page fullWidth>\n      <Layout>\n        <Layout.Section>\n          <Card title={Title}>\n            <FormLayout>\n              <div className=\"addpaddingforneworder\">\n                <Stack vertical=\"true\" distribution=\"fill\" spacing=\"extraTight\">\n                  <Layout>\n                    <Layout.Section secondary>\n                      <DisplayText size=\"extraSmall\">Mobile : </DisplayText>\n                    </Layout.Section>\n                    <Layout.Section>\n                      <TextField\n                        type=\"text\"\n                        value={Mobile}\n                        onChange={handleMobileChange}\n                      />\n                    </Layout.Section>\n                  </Layout>\n                  <Layout>\n                    <Layout.Section secondary>\n                      <DisplayText size=\"extraSmall\">\n                        Coustmer Name :{\" \"}\n                      </DisplayText>\n                    </Layout.Section>\n                    <Layout.Section>\n                      <TextField\n                        type=\"text\"\n                        value={Name}\n                        onChange={handleNameChange}\n                      />\n                    </Layout.Section>\n                  </Layout>\n\n                  <Layout>\n                    <Layout.Section secondary>\n                      <DisplayText size=\"extraSmall\">\n                        Coustmer Email :{\" \"}\n                      </DisplayText>\n                    </Layout.Section>\n                    <Layout.Section>\n                      <TextField\n                        type=\"email\"\n                        value={Email}\n                        onChange={handleEmailChange}\n                      />\n                    </Layout.Section>\n                  </Layout>\n\n                  <Layout>\n                    <Layout.Section secondary>\n                      <DisplayText size=\"extraSmall\">Address : </DisplayText>\n                    </Layout.Section>\n                    <Layout.Section>\n                      <TextField\n                        type=\"text\"\n                        value={Address}\n                        onChange={handleAddressChange}\n                      />\n                    </Layout.Section>\n                  </Layout>\n\n                  <Layout>\n                    <Layout.Section secondary>\n                      <DisplayText size=\"extraSmall\">Landmark : </DisplayText>\n                    </Layout.Section>\n                    <Layout.Section>\n                      <TextField\n                        type=\"text\"\n                        value={Landmark}\n                        onChange={handleLandmarkChange}\n                      />\n                    </Layout.Section>\n                  </Layout>\n\n                  <Layout>\n                    <Layout.Section secondary>\n                      <DisplayText size=\"extraSmall\">Locality : </DisplayText>\n                    </Layout.Section>\n                    <Layout.Section>\n                      <TextField\n                        type=\"text\"\n                        value={Locality}\n                        onChange={handleLocalityChange}\n                      />\n                    </Layout.Section>\n                  </Layout>\n\n                  <Layout>\n                    <Layout.Section secondary>\n                      <DisplayText size=\"extraSmall\">Pincode : </DisplayText>\n                    </Layout.Section>\n                    <Layout.Section>\n                      <TextField\n                        type=\"text\"\n                        value={Pincode}\n                        onChange={handlePincodeChange}\n                      />\n                    </Layout.Section>\n                  </Layout>\n\n                  <Layout>\n                    <Layout.Section secondary>\n                      <DisplayText size=\"extraSmall\">\n                        Pickup Date :{\" \"}\n                      </DisplayText>\n                    </Layout.Section>\n                    <Layout.Section>\n                      <Stack alignment=\"center\" distribution=\"fill\">\n                        <TextField\n                          type=\"text\"\n                          value={pickdatevalue}\n                          onFocus={() => {\n                            handleChangepick();\n                          }}\n                        />\n                        <Modal\n                          open={activepick}\n                          onClose={handleChangepick}\n                          title=\"Pick Slot : \"\n                        >\n                          <Modal.Section>\n                            <DatePicker\n                              month={pickmonth}\n                              year={pickyear}\n                              onChange={Datepickchanger}\n                              onMonthChange={handlePickMonthChange}\n                              selected={selectedpickDates}\n                              disableDatesBefore={\n                                new Date(moment().subtract(1, \"d\").toString())\n                              }\n                            />{\" \"}\n                          </Modal.Section>\n                        </Modal>\n                        <Select\n                          placeholder=\"Select Pickup Time Slot\"\n                          options={optionspick}\n                          isOptionDisabled={(option) => option.disabled === \"yes\"}\n                          onChange={(checkselect) => {\n                            handlepicktimedropdown(checkselect);\n                          }}\n                          // defaultValue={optionspick[0]}\n                          openOnFocus={true}\n                          autofocus={true}\n                          menuPortalTarget={document.body}\n                          styles={{\n                            menuPortal: (base) => ({ ...base, zIndex: 9999 }),\n                          }}\n                        />\n                      </Stack>\n                      <DisplayText size=\"extrasmall\">{Pickupx}</DisplayText>\n                    </Layout.Section>\n                  </Layout>\n\n                  <Layout>\n                    <Layout.Section secondary>\n                      <DisplayText size=\"extraSmall\">Drop Date : </DisplayText>\n                    </Layout.Section>\n                    <Layout.Section>\n                      <Stack alignment=\"center\" distribution=\"fill\">\n                        <TextField\n                          type=\"text\"\n                          value={dropdatevalue}\n                          onFocus={() => {\n                            handleChangedrop();\n                          }}\n                        />\n                        <Modal\n                          open={activedrop}\n                          onClose={handleChangedrop}\n                          title=\"Drop Slot : \"\n                        >\n                          <Modal.Section>\n                            <DatePicker\n                              month={dropmonth}\n                              year={dropyear}\n                              onChange={Datedropchanger}\n                              onMonthChange={handleDropMonthChange}\n                              selected={selecteddropDates}\n                              disableDatesBefore={new Date(moment().toString())}\n                            />{\" \"}\n                          </Modal.Section>\n                        </Modal>\n                        <Select\n                          placeholder=\"Select Drop Time Slot\"\n                          options={optionsdrop}\n                          isOptionDisabled={(option) => option.disabled === \"yes\"}\n                          onChange={(checkselect) => {\n                            handledroptimedropdown(checkselect);\n                          }}\n                          // defaultValue={optionsdrop[1]}\n                          openOnFocus={true}\n                          autofocus={true}\n                          menuPortalTarget={document.body}\n                          styles={{\n                            menuPortal: (base) => ({ ...base, zIndex: 9999 }),\n                          }}\n                        />\n                      </Stack>\n                      <DisplayText size=\"extrasmall\">{Dropx}</DisplayText>\n                    </Layout.Section>\n                  </Layout>\n                  <Layout>\n                    <Layout.Section secondary>\n                      <DisplayText size=\"extrasmall\">\n                        Select services :{\" \"}\n                      </DisplayText>\n                    </Layout.Section>\n                    <Layout.Section>\n                      <Servicelist\n                        Services={ServicesOption}\n                        setServices={setServicesOption}\n                        handleSelectservice={handleSelectservice}\n                        addonsdatafetch={FetchAddons}\n                      />\n                    </Layout.Section>\n                  </Layout>\n\n                  <Layout>\n                    <Layout.Section secondary>\n                      <DisplayText size=\"extrasmall\">\n                        Select Addons :{\" \"}\n                      </DisplayText>\n                    </Layout.Section>\n                    <Layout.Section>\n                      <Addons\n                        fetcheddata={fetcheddata}\n                        setaddons={setaddonsx}\n                      />\n                    </Layout.Section>\n                  </Layout>\n                  <IsAdmin\n                    storeoption={StoreOptions}\n                    setSelectedstore={setSelectedstore}\n                    Selectedstore={Selectedstore}\n                  />\n                  <Layout>\n                    <Layout.Section secondary>\n                      <DisplayText size=\"extrasmall\">\n                        Order Source :{\" \"}\n                      </DisplayText>\n                    </Layout.Section>\n                    <Layout.Section>\n                      <ChoiceList\n                        choices={[\n                          { label: \"Whatsapp\", value: \"Whatsapp\" },\n                          { label: \"Facebook\", value: \"Facebook\" },\n                          { label: \"Instragram\", value: \"Instragram\" },\n                          { label: \"WalkIn\", value: \"WalkIn\" },\n                        ]}\n                        selected={source}\n                        onChange={handlesourceChange}\n                      />\n                    </Layout.Section>\n                  </Layout>\n                </Stack>\n                <Button\n                  alignment=\"center\"\n                  primary\n                  className=\"ConfirmedButton\"\n                  onClick={buttonClickHandler}\n                >\n                  Confirm Order\n                </Button>\n              </div>\n            </FormLayout>\n          </Card>\n          <Modal open={orderadded} onClose={Handleorderadded}>\n            <Modal.Section>\n              <Banner status=\"success\">\n                <p>Order has been successfully placed</p>\n              </Banner>\n            </Modal.Section>\n          </Modal>\n          <Modal open={errorcomes} onClose={handleerrorcomes}>\n            <Modal.Section>\n              <Banner status=\"critical\">\n                <p>Failed There is a some kind of error</p>\n              </Banner>\n            </Modal.Section>\n          </Modal>\n        </Layout.Section>\n      </Layout>\n    </Page>\n  );\n};\nexport default NewOrderPage;\n","import React, { useCallback, useState, useRef } from \"react\";\nimport {\n  Card,\n  ActionList,\n  Frame,\n  Navigation,\n  TopBar,\n  Banner,\n} from \"@shopify/polaris\";\nimport {\n  HomeMajor,\n  OnlineStoreMajor,\n  ReportMinor,\n  AnalyticsMajor,\n  SettingsMinor,\n} from \"@shopify/polaris-icons\";\nimport NeworderPage from \"./NewOrderPage\";\nimport { useHistory } from \"react-router-dom\";\nimport {Version} from \"../Version\"\n\nconst NewPage = () => {\n  /* UI MESS START HERE */\n  const skipToContentRef = useRef(null);\n  const [searchActive, setSearchActive] = useState(false);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [userMenuActive, setUserMenuActive] = useState(false);\n  const [mobileNavigationActive, setMobileNavigationActive] = useState(false);\n\n  const handleSearchResultsDismiss = useCallback(() => {\n    setSearchActive(false);\n    setSearchValue(\"\");\n  }, []);\n  const handleSearchFieldChange = useCallback((value) => {\n    setSearchValue(value);\n    setSearchActive(value.length > 0);\n  }, []);\n\n  const toggleUserMenuActive = useCallback(\n    () => setUserMenuActive((userMenuActive) => !userMenuActive),\n    []\n  );\n  const toggleMobileNavigationActive = useCallback(\n    () =>\n      setMobileNavigationActive(\n        (mobileNavigationActive) => !mobileNavigationActive\n      ),\n    []\n  );\n\n  const history = useHistory()\n  const Logout = () => {\n    localStorage.removeItem(\"username\");\n    localStorage.removeItem(\"role\");\n    localStorage.removeItem(\"login\");\n    localStorage.removeItem(\"token\");\n    history.push(\"/login\")\n  };\n  const userMenuActions = [\n    {\n      items: [{ content: \"Logout\", onAction: Logout }],\n    },\n  ];\n\n  const userMenuMarkup = (\n    <TopBar.UserMenu\n      actions={userMenuActions}\n      name={localStorage.getItem(\"username\")}\n      initials={localStorage.getItem(\"username\").charAt(0)}\n      open={userMenuActive}\n      onToggle={toggleUserMenuActive}\n    />\n  );\n  const searchResultsMarkup = (\n    <Card>\n      <ActionList\n        items={[\n          { content: \"Shopify help center\" },\n          { content: \"Community forums\" },\n        ]}\n      />\n    </Card>\n  );\n\n  const searchFieldMarkup = (\n    <TopBar.SearchField\n      onChange={handleSearchFieldChange}\n      value={searchValue}\n      placeholder=\"Search\"\n    />\n  );\n\n  const topBarMarkup = (\n    <TopBar\n      showNavigationToggle\n      userMenu={userMenuMarkup}\n      searchResultsVisible={searchActive}\n      searchField={searchFieldMarkup}\n      searchResults={searchResultsMarkup}\n      onSearchResultsDismiss={handleSearchResultsDismiss}\n      onNavigationToggle={toggleMobileNavigationActive}\n    />\n  );\n\n  const GetRole = () => {\n    return localStorage.getItem(\"role\");\n  };\n\n  const Checkpermission = () => {\n    if (GetRole() === \"Admin\") {\n      return (\n        <div>\n          <Navigation.Section\n            separator\n            title=\"Metrics\"\n            items={[\n              {\n                label: \"Stores Statics\",\n                url: \"storestatics\",\n              },\n              {\n                label: \"Driver Statistics\",\n                url: \"driverstatics\",\n              },\n              {\n                label: \"Customers Statistics\",\n                url: \"/customerstatics\",\n              },\n              {\n                label: \"Revenue Statistics\",\n                url: \"/revenuestatics\",\n              },\n            ]}\n            rollup={{\n              after: 2,\n              view: \"view\",\n              hide: \"hide\",\n              activePath: \"/\",\n            }}\n            action={{\n              icon: AnalyticsMajor,\n              onClick: () => {},\n            }}\n          />\n          <Navigation.Section\n            separator\n            title=\"Admin Settings\"\n            items={[\n              {\n                label: \"Create Store\",\n                url: \"createstore\",\n              },\n              {\n                label: \"Store Settings\",\n                url: \"storesetting\",\n              },\n              {\n                label: \"User Settings\",\n                url: \"usersetting\"\n              },\n          {\n            label: \"General Settings\",\n            url: \"settings\",\n          },\n              {\n                label: \"Add Service\",\n                url: \"createservice\",\n              },\n              {\n                label: \"Create User\",\n                url: \"createuser\",\n              },\n            ]}\n            rollup={{\n              after: 2,\n              view: \"view\",\n              hide: \"hide\",\n              activePath: \"/\",\n            }}\n            action={{\n              icon: SettingsMinor,\n              onClick: () => {},\n            }}\n          />\n        </div>\n      );\n    } else {\n      return <div></div>;\n    }\n  };\n  const navigationMarkup = (\n    <Navigation location=\"/\">\n      <Navigation.Section\n        separator\n        title=\"Dashboard\"\n        items={[\n          {\n            label: \"Overview\",\n            url: \"/overview\",\n          },\n        ]}\n        action={{\n          icon: HomeMajor,\n        }}\n      />\n      <Navigation.Section\n        separator\n        title=\"Order\"\n        items={[\n          {\n            label: \"Order\",\n            url: \"/order\",\n          },\n          {\n            label: \"New order\",\n            url: \"/neworder\",\n          },\n        ]}\n        action={{\n          icon: OnlineStoreMajor,\n          onClick: () => {},\n        }}\n      />\n      <Navigation.Section\n        separator\n        title=\"Reports\"\n        items={[\n          {\n            label: \"Reports\",\n            url: \"/reports\",\n          },\n        ]}\n        action={{\n          icon: ReportMinor,\n          onClick: () => {},\n        }}\n      />\n      <Checkpermission />\n       <Banner status=\"info\">\n        <p>Current version: {Version}</p>\n      </Banner>\n    </Navigation>\n  );\n\n  const newPage = <NeworderPage />;\n  return (\n    <Frame\n      topBar={topBarMarkup}\n      navigation={navigationMarkup}\n      showMobileNavigation={mobileNavigationActive}\n      onNavigationDismiss={toggleMobileNavigationActive}\n      skipToContentTarget={skipToContentRef.current}\n    >\n      {newPage}\n    </Frame>\n  );\n};\n\nexport default NewPage;\n","import React, { useState, useEffect } from \"react\";\nimport { Card, DataTable, Layout, Pagination } from \"@shopify/polaris\";\nimport axios from \"axios\";\nimport Select from \"react-select\";\nimport \"./App.css\";\nimport { API } from \"../API\";\n\nexport default function DataTableExample({ setChoosedStore }) {\n  const [apidata, setApidata] = useState([]);\n  const [Filtereddatastart, setFiltereddatastart] = useState(0);\n  const [Filtereddataend, setFiltereddataend] = useState(5);\n  const rows = apidata.slice(Filtereddatastart, Filtereddataend);\n  const [startId, setstartId] = useState(1);\n  const [endId, setendId] = useState(100);\n\n  const gonext = () => {\n    setstartId(startId + 100);\n    setendId(endId + 100);\n    gonextfetch(startId + 100, endId + 100, true);\n  };\n\n  const gopre = () => {\n    setstartId(startId - 100);\n    setendId(setendId - 100);\n    gonextfetch(startId - 100, endId - 100, false);\n  };\n\n  const gonextfetch = (startid, endid, go) => {\n    let RequestedURI =\n      API +\n      \"/report\" +\n      \"?startid=\" +\n      startid.toString() +\n      \"&endid=\" +\n      endid.toString();\n\n    axios\n      .get(RequestedURI, {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      })\n      .then((response) => {\n        console.log(response.data[\"order\"]);\n        const data = response.data[\"order\"];\n        console.log(data.length);\n        if (data.length === 0) {\n          setstartId(startId);\n          setendId(endId);\n        } else {\n          if (go) {\n            setstartId(startId);\n            setendId(endId);\n          } else {\n            setstartId(startId);\n            setendId(endId);\n          }\n          setApidata(data);\n        }\n      })\n      .catch(console.log(\"sorry error\"));\n  };\n\n  const [StoreOptions, setStoreOptions] = useState([\n    { value: \"No store Found\", label: \"No store Found\" },\n  ]);\n  const FetchStores = () => {\n    if (localStorage.getItem(\"role\") === \"Admin\") {\n      axios\n        .get(API + \"/stores\", {\n          headers: {\n            Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n          },\n        })\n        .then((response) => {\n          setStoreOptions(response.data.data);\n        })\n        .catch((response) => {\n          console.log(response);\n        });\n    }\n  };\n  const [Selectedstore, setSelectedstore] = useState(\"Na\");\n  const SelectStoreforAdmin = () => {\n    if (localStorage.getItem(\"role\") === \"Admin\") {\n      return (\n        <div>\n          <Select\n            name=\"Select Store\"\n            placeholder=\"Select Store\"\n            className=\"storeselect\"\n            options={StoreOptions}\n            onChange={(checkselect) => {\n              console.log(checkselect);\n              setSelectedstore(checkselect);\n              setChoosedStore(checkselect.value);\n              fetchAllOrder(checkselect.value);\n            }}\n            openOnFocus={true}\n            autofocus={true}\n            value={Selectedstore}\n            menuPortalTarget={document.body}\n            styles={{ menuPortal: (base) => ({ ...base, zIndex: 9999 }) }}\n          />\n        </div>\n      );\n    } else {\n      return <div></div>;\n    }\n  };\n\n  const fetchAllOrder = (Selectedstorex) => {\n    console.log(\"fetchAllOrder order\");\n    let RequestApi = \"\";\n    if (Selectedstore === \"Na\") {\n      RequestApi =\n        API +\n        \"/report\" +\n        \"?startid=\" +\n        startId.toString() +\n        \"&endid=\" +\n        endId.toString();\n    } else {\n      RequestApi =\n        API +\n        \"/report/\" +\n        Selectedstorex +\n        \"?startid=\" +\n        startId.toString() +\n        \"&endid=\" +\n        endId.toString();\n    }\n    axios\n      .get(RequestApi, {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      })\n      .then((response) => {\n        console.log(response.data[\"order\"]);\n        setApidata(response.data[\"order\"]);\n      })\n      .catch(console.log(\"sorry error\"));\n  };\n\n  useEffect(() => {\n    FetchStores();\n    fetchAllOrder();\n  }, []);\n  return (\n    <div className=\"Reporttablepage\">\n      <Layout>\n        <Layout.Section>\n          <Card>\n            <Layout.Section>\n              <Layout>\n                <Layout.Section>\n                  <div></div>\n                </Layout.Section>\n                <Layout.Section secondary>\n                  <SelectStoreforAdmin />\n                </Layout.Section>\n              </Layout>\n\n              <DataTable\n                columnContentTypes={[\n                  \"text\",\n                  \"numeric\",\n                  \"text\",\n                  \"numeric\",\n                  \"text\",\n                  \"numeric\",\n                  \"text\",\n                ]}\n                headings={[\n                  \"Order ID\",\n                  \"Customer Phone\",\n                  \"Customer Name\",\n                  \"Address\",\n                  \"Pickup Date\",\n                  \"Pickup Time\",\n                  \"Delivery Date\",\n                  \"Delivery Time\",\n                  \"Service\",\n                  \"Addons\",\n                  \"Source\",\n                  \"Assign Store\",\n                  \"Order Status\",\n                  \"Pickup by\",\n                  \"Delivery by\",\n                  \"Quantity\",\n                  \"Amount (in ₹)\",\n                ]}\n                rows={rows}\n              />\n            </Layout.Section>\n            <Layout.Section secondary>\n              <Pagination\n                hasPrevious\n                onPrevious={() => {\n                  if (Filtereddatastart >= 1) {\n                    setFiltereddatastart(Filtereddatastart - 5);\n                    setFiltereddataend(Filtereddataend - 5);\n                  } else {\n                    gopre();\n                    setFiltereddatastart(0);\n                    setFiltereddataend(5);\n                  }\n\n                  // gopre();\n                }}\n                hasNext\n                onNext={() => {\n                  if (Filtereddataend <= apidata.length) {\n                    setFiltereddatastart(Filtereddatastart + 5);\n                    setFiltereddataend(Filtereddataend + 5);\n                  } else {\n                    gonext();\n                    setFiltereddatastart(0);\n                    setFiltereddataend(5);\n                  }\n                }}\n              />\n            </Layout.Section>\n          </Card>\n        </Layout.Section>\n      </Layout>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport Select from \"react-select\";\nimport makeAnimated from \"react-select/animated\";\n\nimport { Layout, DisplayText } from \"@shopify/polaris\";\n\n// TEMPORALLY COMPONENT\nconst animatedComponents = makeAnimated();\nexport default function headerselection({ setheader }) {\n  const options = [\n    { value: \"OrderId\", label: \"Order ID\" },\n    { value: \"Mobile\", label: \"Customer Phone\" },\n    { value: \"Name\", label: \"Customer Name\" },\n    { value: \"Address\", label: \"Address\" },\n    { value: \"PickDate\", label: \"Pickup Date\" },\n    { value: \"PickTime\", label: \"Pickup Time\" },\n    { value: \"DropDate\", label: \"Delivery Date\" },\n    { value: \"DropSlot\", label: \"Delivery Time\" },\n    { value: \"Service\", label: \"Service\" },\n    { value: \"AddOns\", label: \"Addons\" },\n    { value: \"Source\", label: \"Source\" },\n    { value: \"storeId\", label: \"Assign Store\" },\n    { value: \"OrderStatus\", label: \"Order Status\" },\n    { value: \"Assingpick\", label: \"Pickup by\" },\n    { value: \"Assingdrop\", label: \"Delivery by\" },\n    { value: \"Quantity\", label: \"Quantity\" },\n    { value: \"amount\", label: \"Amount (in ₹)\" },\n  ];\n\n  return (\n      <div >\n        <Layout>\n          <Layout.Section>\n            <DisplayText size=\"extraSmall\">Select Header :</DisplayText>\n            <Select\n              isMulti\n              name=\"Select header\"\n              components={animatedComponents}\n              options={options}\n              onChange={(checkselect) => {\n                setheader(checkselect);\n              }}\n              openOnFocus={true}\n              autofocus={true}\n              menuPortalTarget={document.body}\n              styles={{ menuPortal: (base) => ({ ...base, zIndex: 9999 }) }}\n            />\n          </Layout.Section>\n        </Layout>\n      </div>\n  );\n}\n","import React, { useCallback, useState } from \"react\";\nimport {\n  Button,\n  TextField,\n  Page,\n  DisplayText,\n  Card,\n  Modal,\n  Layout,\n  DatePicker,\n  Stack,\n  Banner,\n  TextContainer,\n} from \"@shopify/polaris\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport ReportTable from \"./ReportTable\";\nimport Headerselect from \"./SelectionDropdown\";\nimport \"./App.css\";\nimport { API } from \"../API\";\n\nconst Reports = () => {\n  const [activecomplete, setActivecomplete] = useState(false);\n\n  const handleActivebanner = useCallback(\n    () => setActivecomplete(!activecomplete),\n    [activecomplete]\n  );\n\n  const handlecompleteChange = () => {\n    handleActivebanner();\n  };\n  const [activeemail, setActiveemail] = useState(false);\n  const handleactiveemail = useCallback(() => setActiveemail(!activeemail), [\n    activeemail,\n  ]);\n\n  const monthIndex = moment().month().toString();\n  const year = moment().year().toString();\n  const [activepick, setActivepick] = useState(false);\n  const handleChangepick = useCallback(() => setActivepick(!activepick), [\n    activepick,\n  ]);\n  const [activedrop, setActivedrop] = useState(false);\n  const handleChangedrop = useCallback(() => setActivedrop(!activedrop), [\n    activedrop,\n  ]);\n\n  /* DATEPICKER PICK STATE START HERE */\n  const [{ pickmonth, pickyear }, setPickDate] = useState({\n    pickmonth: parseInt(monthIndex),\n    pickyear: parseInt(year),\n  });\n  const [selectedpickDates, setSelectedpickDates] = useState({\n    start: new Date(moment().toString()),\n    end: new Date(moment().toString()),\n  });\n\n  const handlePickMonthChange = useCallback(\n    (pickmonth, pickyear) => setPickDate({ pickmonth, pickyear }),\n    []\n  );\n\n  const [pickdatevalue, setPickdatevalue] = useState(\n    moment().format(\"MMMM Do YYYY\").toString()\n  );\n\n  const Datepickchanger = (Date) => {\n    /* THIS FUNCATION WILL CHANGE THE DATE IN STATE AND CLOSE THE MODEL */\n    setSelectedpickDates(Date);\n    setPickdatevalue(moment(Date.start).format(\"MMMM Do YYYY\").toString());\n    handleChangepick();\n  };\n  /* END HERE */\n\n  /* DATEPICKER DROP STATE START HERE */\n  const [{ dropmonth, dropyear }, setdropDate] = useState({\n    dropmonth: parseInt(monthIndex),\n    dropyear: parseInt(year),\n  });\n  const [selecteddropDates, setSelecteddropDates] = useState({\n    start: new Date(moment().add(1, \"d\").toString()),\n    end: new Date(moment().add(1, \"d\").toString()),\n  });\n\n  const handleDropMonthChange = useCallback(\n    (dropmonth, dropyear) => setdropDate({ dropmonth, dropyear }),\n    []\n  );\n\n  const [dropdatevalue, setDropdatevalue] = useState(\n    moment().add(1, \"d\").format(\"MMMM Do YYYY\").toString()\n  );\n  const Datedropchanger = (Date) => {\n    /* THIS FUNCATION WILL CHANGE THE DATE IN STATE AND CLOSE THE MODEL */\n    setSelecteddropDates(Date);\n    setDropdatevalue(moment(Date.start).format(\"MMMM Do YYYY\").toString());\n    handleChangedrop();\n  };\n  /* END HERE */\n  const [headerx, setHeaderx] = useState([]);\n  const [ChoosedStore, setChoosedStore] = useState(\"Na\");\n  const HandleClick = () => {\n    const StorewisePostdata = {\n      fromx: selectedpickDates.start,\n      tox: selecteddropDates.start,\n      headerx: headerx,\n    };\n    if (localStorage.getItem(\"role\") === \"Admin\") {\n      if (ChoosedStore === \"Na\") {\n        axios\n          .post(API + \"/report/exportdatabase\", StorewisePostdata, {\n            headers: {\n              \"content-type\": \"text/json\",\n              Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n            },\n          })\n          .then((Response) => {\n            console.log(Response.data);\n            handlecompleteChange();\n            document.location.href =\n              API + \"/report/download/\" + Response.data[\"filename\"];\n          });\n      } else {\n        let StorewisePostdata = {\n          fromx: selectedpickDates.start,\n          tox: selecteddropDates.start,\n          headerx: headerx,\n          storeid: ChoosedStore,\n        };\n        axios\n          .post(API + \"/report/store\", StorewisePostdata, {\n            headers: {\n              \"content-type\": \"text/json\",\n              Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n            },\n          })\n          .then((Response) => {\n            console.log(Response.data);\n            handlecompleteChange();\n            document.location.href =\n              API + \"/report/download/\" + Response.data[\"filename\"];\n          });\n      }\n    } else {\n      axios\n        .post(API + \"/report\", StorewisePostdata, {\n          headers: {\n            \"content-type\": \"text/json\",\n            Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n          },\n        })\n        .then((Response) => {\n          console.log(Response.data);\n          handlecompleteChange();\n          document.location.href =\n            API + \"/report/download/\" + Response.data[\"filename\"];\n        });\n    }\n  };\n\n  const HandleClickpdf = () => {\n    console.log(headerx)\n    const StorewisePostdata = {\n      fromx: selectedpickDates.start,\n      tox: selecteddropDates.start,\n      headerx: headerx,\n    };\n    if (localStorage.getItem(\"role\") === \"Admin\") {\n      if (ChoosedStore === \"Na\") {\n        axios\n          .post(API + \"/report/pdf/exportdatabase\", StorewisePostdata, {\n            headers: {\n              \"content-type\": \"text/json\",\n              Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n            },\n          })\n          .then((Response) => {\n            console.log(Response.data);\n            handlecompleteChange();\n            document.location.href =\n              API + \"/report/download/\" + Response.data[\"filename\"];\n          });\n      } else {\n        let StorewisePostdata = {\n          fromx: selectedpickDates.start,\n          tox: selecteddropDates.start,\n          headerx: headerx,\n          storeid: ChoosedStore,\n        };\n        axios\n          .post(API + \"/report/pdf/store\", StorewisePostdata, {\n            headers: {\n              \"content-type\": \"text/json\",\n              Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n            },\n          })\n          .then((Response) => {\n            console.log(Response.data);\n            handlecompleteChange();\n            document.location.href =\n              API + \"/report/download/\" + Response.data[\"filename\"];\n          });\n      }\n    } else {\n      axios\n        .post(API + \"/report/pdf\", StorewisePostdata, {\n          headers: {\n            \"content-type\": \"text/json\",\n            Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n          },\n        })\n        .then((Response) => {\n          console.log(Response.data);\n          handlecompleteChange();\n          document.location.href =\n            API + \"/report/download/\" + Response.data[\"filename\"];\n        });\n    }\n  };\n\n  const [email, setemail] = useState(\"\");\n\n  const handleChangeemail = useCallback((newValue) => setemail(newValue), []);\n\n  const [emailsuc, setemailsuc] = useState(false);\n\n  const handleChangsuccess = useCallback(() => setemailsuc(!emailsuc), [\n    emailsuc,\n  ]);\n\n  const [emailfailed, setemailfaile] = useState(false);\n\n  const handleChangfailed = useCallback(() => setemailfaile(!emailfailed), [\n    emailfailed,\n  ]);\n\n  const [failedText, setfailedText] = useState(\"\");\n  const [sucessText, setsucessText] = useState(\"\");\n\n  const HandleClickemail = () => {\n    const StorewisePostdata = {\n      fromx: selectedpickDates.start,\n      tox: selecteddropDates.start,\n      headerx: headerx,\n      email: email,\n    };\n    if (localStorage.getItem(\"role\") === \"Admin\") {\n      if (ChoosedStore === \"Na\") {\n        axios\n          .post(API + \"/report/email/exportdatabase\", StorewisePostdata, {\n            headers: {\n              \"content-type\": \"text/json\",\n              Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n            },\n          })\n          .then((Response) => {\n            setsucessText(Response.data.filename);\n            handleChangsuccess();\n          })\n          .catch((Response) => {\n            setfailedText(\"Email Send Faild\");\n            handleChangfailed();\n          });\n      } else {\n        let StorewisePostdata = {\n          fromx: selectedpickDates.start,\n          tox: selecteddropDates.start,\n          headerx: headerx,\n          email: email,\n          storeid: ChoosedStore,\n        };\n        axios\n          .post(API + \"/report/email/store\", StorewisePostdata, {\n            headers: {\n              \"content-type\": \"text/json\",\n              Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n            },\n          })\n          .then((Response) => {\n            setsucessText(Response.data.filename);\n            handleChangsuccess();\n          })\n          .catch((Response) => {\n            setfailedText(\"Email Send Faild\");\n            handleChangfailed();\n          });\n      }\n    } else {\n      axios\n        .post(API + \"/report/email\", StorewisePostdata, {\n          headers: {\n            \"content-type\": \"text/json\",\n            Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n          },\n        })\n        .then((Response) => {\n          setsucessText(Response.data.filename);\n          handleChangsuccess();\n        })\n        .catch((Response) => {\n          setfailedText(\"Email Send Faild\");\n          handleChangfailed();\n        });\n    }\n  };\n\n  const Title = () => {\n    return (\n      <Stack>\n        <Stack.Item fill>\n          <DisplayText size=\"small\" className=\"titleText\">\n            Datewise Report\n          </DisplayText>\n        </Stack.Item>\n      </Stack>\n    );\n  };\n\n  return (\n    <Page fullWidth>\n      <Card title={<Title />} sectioned>\n        <Layout>\n          <Layout.Section oneHalf>\n            <DisplayText size=\"extrasmall\">From : </DisplayText>\n            <TextField\n              type=\"text\"\n              value={pickdatevalue}\n              onFocus={() => {\n                handleChangepick();\n              }}\n            />\n\n            <Modal open={activepick} onClose={handleChangepick} title=\"From\">\n              <Modal.Section>\n                <DatePicker\n                  month={pickmonth}\n                  year={pickyear}\n                  onChange={Datepickchanger}\n                  onMonthChange={handlePickMonthChange}\n                  selected={selectedpickDates}\n                />{\" \"}\n              </Modal.Section>\n            </Modal>\n          </Layout.Section>\n          <Layout.Section oneHalf>\n            <DisplayText size=\"extrasmall\">To : </DisplayText>\n            <TextField\n              type=\"text\"\n              value={dropdatevalue}\n              onFocus={() => {\n                handleChangedrop();\n              }}\n            />\n            <Modal open={activedrop} onClose={handleChangedrop} title=\"To\">\n              <Modal.Section>\n                <DatePicker\n                  month={dropmonth}\n                  year={dropyear}\n                  onChange={Datedropchanger}\n                  onMonthChange={handleDropMonthChange}\n                  selected={selecteddropDates}\n                />\n              </Modal.Section>\n            </Modal>\n          </Layout.Section>\n          <Layout.Section>\n            <Headerselect setheader={setHeaderx} />\n          </Layout.Section>\n          <Layout.Section>\n            <Button\n              primary\n              size=\"slim\"\n              onClick={HandleClick}\n              connectedDisclosure={{\n                accessibilityLabel: \"Other save actions\",\n                actions: [\n                  { content: \"Export as PDF\", onAction: HandleClickpdf },\n                  { content: \"Share in Email\", onAction: handleactiveemail },\n                ],\n              }}\n            >\n              Export\n            </Button>\n          </Layout.Section>\n        </Layout>\n      </Card>\n\n      <ReportTable setChoosedStore={setChoosedStore} />\n      <Modal open={activecomplete} onClose={handlecompleteChange}>\n        <Modal.Section>\n          <TextContainer>\n            <Banner status=\"success\">\n              <p>Downloading report starting...</p>\n            </Banner>\n          </TextContainer>\n        </Modal.Section>\n      </Modal>\n\n      <Modal open={activeemail} onClose={handleactiveemail}>\n        <Modal.Section>\n          <Stack vertical=\"false\">\n            <Banner>Enter your email below to send report in email</Banner>\n            <TextField\n              type=\"email\"\n              placeholder={\"anon42237@gmail.com\"}\n              value={email}\n              onChange={handleChangeemail}\n              connectedRight={\n                <Button primary onClick={HandleClickemail}>\n                  Send\n                </Button>\n              }\n            />\n\n            <Modal open={emailsuc} onClose={handleChangsuccess}>\n              <Modal.Section>\n                <TextContainer>\n                  <Banner status=\"success\">\n                    <p>{sucessText}</p>\n                  </Banner>\n                </TextContainer>\n              </Modal.Section>\n            </Modal>\n\n            <Modal open={emailfailed} onClose={handleChangfailed}>\n              <Modal.Section>\n                <TextContainer>\n                  <Banner status=\"critical\">\n                    <p>{failedText}</p>\n                  </Banner>\n                </TextContainer>\n              </Modal.Section>\n            </Modal>\n          </Stack>\n        </Modal.Section>\n      </Modal>\n    </Page>\n  );\n};\n\nexport default Reports;\n","import React, { useCallback, useState, useRef } from \"react\";\nimport {\n  Card,\n  ActionList,\n  Frame,\n  Navigation,\n  TopBar,\n  Banner,\n} from \"@shopify/polaris\";\nimport {\n  HomeMajor,\n  OnlineStoreMajor,\n  ReportMinor,\n  AnalyticsMajor,\n  SettingsMinor,\n} from \"@shopify/polaris-icons\";\nimport ReportPage from \"./Reports\";\nimport { useHistory } from \"react-router-dom\";\nimport {Version} from \"../Version\"\n\nconst NewPage = () => {\n\n \n  /* UI MESS START HERE */\n  const skipToContentRef = useRef(null);\n  const [searchActive, setSearchActive] = useState(false);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [userMenuActive, setUserMenuActive] = useState(false);\n  const [mobileNavigationActive, setMobileNavigationActive] = useState(false);\n\n  const handleSearchResultsDismiss = useCallback(() => {\n    setSearchActive(false);\n    setSearchValue(\"\");\n  }, []);\n  const handleSearchFieldChange = useCallback((value) => {\n    setSearchValue(value);\n    setSearchActive(value.length > 0);\n  }, []);\n\n  const toggleUserMenuActive = useCallback(\n    () => setUserMenuActive((userMenuActive) => !userMenuActive),\n    []\n  );\n  const toggleMobileNavigationActive = useCallback(\n    () =>\n      setMobileNavigationActive(\n        (mobileNavigationActive) => !mobileNavigationActive\n      ),\n    []\n  );\n\n  const history = useHistory()\n  const Logout = () => {\n    localStorage.removeItem(\"username\");\n    localStorage.removeItem(\"role\");\n    localStorage.removeItem(\"login\");\n    localStorage.removeItem(\"token\");\n    history.push(\"/login\")\n  };\n  const userMenuActions = [\n    {\n      items: [{ content: \"Logout\", onAction: Logout }],\n    },\n  ];\n\n  const userMenuMarkup = (\n    <TopBar.UserMenu\n      actions={userMenuActions}\n      name={localStorage.getItem(\"username\")}\n      initials={localStorage.getItem(\"username\").charAt(0)}\n      open={userMenuActive}\n      onToggle={toggleUserMenuActive}\n    />\n  );\n  const searchResultsMarkup = (\n    <Card>\n      <ActionList\n        items={[\n          { content: \"Shopify help center\" },\n          { content: \"Community forums\" },\n        ]}\n      />\n    </Card>\n  );\n\n  const searchFieldMarkup = (\n    <TopBar.SearchField\n      onChange={handleSearchFieldChange}\n      value={searchValue}\n      placeholder=\"Search\"\n    />\n  );\n\n  const topBarMarkup = (\n    <TopBar\n      showNavigationToggle\n      userMenu={userMenuMarkup}\n      searchResultsVisible={searchActive}\n      searchField={searchFieldMarkup}\n      searchResults={searchResultsMarkup}\n      onSearchResultsDismiss={handleSearchResultsDismiss}\n      onNavigationToggle={toggleMobileNavigationActive}\n    />\n  );\n\n  const GetRole = () => {\n    return localStorage.getItem(\"role\");\n  };\n\n  const Checkpermission = () => {\n    if (GetRole() === \"Admin\") {\n      return (\n        <div>\n          <Navigation.Section\n            separator\n            title=\"Metrics\"\n            items={[\n              {\n                label: \"Stores Statics\",\n                url: \"storestatics\",\n              },\n              {\n                label: \"Driver Statistics\",\n                url: \"driverstatics\",\n              },\n              {\n                label: \"Customers Statistics\",\n                url: \"/customerstatics\",\n              },\n              {\n                label: \"Revenue Statistics\",\n                url: \"/revenuestatics\",\n              },\n            ]}\n            rollup={{\n              after: 2,\n              view: \"view\",\n              hide: \"hide\",\n              activePath: \"/\",\n            }}\n            action={{\n              icon: AnalyticsMajor,\n              onClick: () => {},\n            }}\n          />\n          <Navigation.Section\n            separator\n            title=\"Admin Settings\"\n            items={[\n              {\n                label: \"Create Store\",\n                url: \"createstore\",\n              },\n              {\n                label: \"Store Settings\",\n                url: \"storesetting\",\n              },\n              {\n                label: \"User Settings\",\n                url: \"usersetting\"\n              },\n          {\n            label: \"General Settings\",\n            url: \"settings\",\n          },\n              {\n                label: \"Add Service\",\n                url: \"createservice\",\n              },\n              {\n                label: \"Create User\",\n                url: \"createuser\",\n              },\n            ]}\n            rollup={{\n              after: 2,\n              view: \"view\",\n              hide: \"hide\",\n              activePath: \"/\",\n            }}\n            action={{\n              icon: SettingsMinor,\n              onClick: () => {},\n            }}\n          />\n        </div>\n      );\n    } else {\n      return <div></div>;\n    }\n  };\n  const navigationMarkup = (\n    <Navigation location=\"/\">\n      <Navigation.Section\n        separator\n        title=\"Dashboard\"\n        items={[\n          {\n            label: \"Overview\",\n            url: \"/overview\",\n          },\n        ]}\n        action={{\n          icon: HomeMajor,\n        }}\n      />\n      <Navigation.Section\n        separator\n        title=\"Order\"\n        items={[\n          {\n            label: \"Order\",\n            url: \"/order\",\n          },\n          {\n            label: \"New order\",\n            url: \"/neworder\",\n          },\n        ]}\n        action={{\n          icon: OnlineStoreMajor,\n          onClick: () => {},\n        }}\n      />\n      <Navigation.Section\n        separator\n        title=\"Reports\"\n        items={[\n          {\n            label: \"Reports\",\n            url: \"/reports\",\n          },\n        ]}\n        action={{\n          icon: ReportMinor,\n          onClick: () => {},\n        }}\n      />\n      <Checkpermission />\n       <Banner status=\"info\">\n        <p>Current version: {Version}</p>\n      </Banner>\n    </Navigation>\n  );\n  \n  const newPage = <ReportPage />;\n  return (\n    <Frame\n      topBar={topBarMarkup}\n      navigation={navigationMarkup}\n      showMobileNavigation={mobileNavigationActive}\n      onNavigationDismiss={toggleMobileNavigationActive}\n      skipToContentTarget={skipToContentRef.current}\n    >\n      {newPage}\n    </Frame>\n  );\n};\n\nexport default NewPage;\n","import React from \"react\";\nimport { Page,  Stack, Card, DisplayText } from \"@shopify/polaris\";\nimport \"../Chart.css\";\nimport Dropdown from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\n\nconst options = [\n  \"12 AM To 3 AM\",\n  \"03 AM To 6 AM\",\n  \"06 AM To 9 AM\",\n  \"09 AM To 12 PM\",\n  \"12 PM To 3 PM\",\n  \"03 PM To 6 PM\",\n  \"06 PM To 09 PM\",\n];\n\nconst defaultOption = options[0];\n\nconst Data = [\n  {\n    name: \"Page A\",\n    uv: 4000,\n    pv: 2400,\n    amt: 2400,\n  },\n  {\n    name: \"Page B\",\n    uv: 3000,\n    pv: 1398,\n    amt: 2210,\n  },\n  {\n    name: \"Page C\",\n    uv: 2000,\n    pv: 9800,\n    amt: 2290,\n  },\n  {\n    name: \"Page D\",\n    uv: 2780,\n    pv: 3908,\n    amt: 2000,\n  },\n  {\n    name: \"Page E\",\n    uv: 1890,\n    pv: 4800,\n    amt: 2181,\n  },\n  {\n    name: \"Page F\",\n    uv: 2390,\n    pv: 3800,\n    amt: 2500,\n  },\n  {\n    name: \"Page G\",\n    uv: 3490,\n    pv: 4300,\n    amt: 2100,\n  },\n];\n\nconst StoresChart = ({ data /* see data tab */ }) => (\n  <ResponsiveContainer width=\"100%\" height={300}>\n    <LineChart\n      width={1000}\n      height={300}\n      data={data}\n      margin={{\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5,\n      }}\n    >\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <XAxis dataKey=\"name\" />\n      <YAxis />\n      <Tooltip />\n      <Legend />\n      <Line\n        type=\"monotone\"\n        dataKey=\"pv\"\n        stroke=\"#8884d8\"\n        activeDot={{ r: 8 }}\n      />\n      <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\n      <Line type=\"monotone\" dataKey=\"amt\" stroke=\"#82ca9d\" />\n    </LineChart>\n  </ResponsiveContainer>\n);\n\nconst storestatics = () => {\n  return (\n    <Page fullWidth>\n        <div className=\"Chartspadding\">\n          <Stack vertical=\"false\">\n            <Stack distribution=\"trailing\" alignment=\"center\">\n              <Stack.Item>\n                <DisplayText size=\"small\">Stores : </DisplayText>\n              </Stack.Item>\n              <Stack.Item>\n                <Dropdown\n                  options={options}\n                  value={defaultOption}\n                  placeholder=\"Select Time Slot\"\n                />\n              </Stack.Item>\n              <Stack.Item>\n                <DisplayText size=\"small\">select time period : </DisplayText>\n              </Stack.Item>\n              <Stack.Item>\n                <Dropdown\n                  options={options}\n                  value={defaultOption}\n                  placeholder=\"Select Time Slot\"\n                />\n              </Stack.Item>\n            </Stack>\n            <Card title=\"Revenue\">\n              <div className=\"chartcontainer\">\n                <StoresChart data={Data} />\n              </div>\n            </Card>\n          </Stack>\n        </div>\n    </Page>\n  );\n};\n\nexport default storestatics;\n","import React, { useCallback, useState, useRef } from \"react\";\nimport {\n  Card,\n  ActionList,\n  Frame,\n  Navigation,\n  TopBar,\n  Banner,\n} from \"@shopify/polaris\";\nimport {\n  HomeMajor,\n  OnlineStoreMajor,\n  ReportMinor,\n  AnalyticsMajor,\n  SettingsMinor,\n} from \"@shopify/polaris-icons\";\nimport ReportPage from \"./storestatics\";\nimport { useHistory } from \"react-router-dom\";\nimport {Version} from \"../../Version\"\n\nconst NewPage = () => {\n\n \n  /* UI MESS START HERE */\n  const skipToContentRef = useRef(null);\n  const [searchActive, setSearchActive] = useState(false);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [userMenuActive, setUserMenuActive] = useState(false);\n  const [mobileNavigationActive, setMobileNavigationActive] = useState(false);\n\n  const handleSearchResultsDismiss = useCallback(() => {\n    setSearchActive(false);\n    setSearchValue(\"\");\n  }, []);\n  const handleSearchFieldChange = useCallback((value) => {\n    setSearchValue(value);\n    setSearchActive(value.length > 0);\n  }, []);\n\n  const toggleUserMenuActive = useCallback(\n    () => setUserMenuActive((userMenuActive) => !userMenuActive),\n    []\n  );\n  const toggleMobileNavigationActive = useCallback(\n    () =>\n      setMobileNavigationActive(\n        (mobileNavigationActive) => !mobileNavigationActive\n      ),\n    []\n  );\n\n  const history = useHistory()\n  const Logout = () => {\n    localStorage.removeItem(\"username\");\n    localStorage.removeItem(\"role\");\n    localStorage.removeItem(\"login\");\n    localStorage.removeItem(\"token\");\n    history.push(\"/login\")\n  };\n  const userMenuActions = [\n    {\n      items: [{ content: \"Logout\", onAction: Logout }],\n    },\n  ];\n\n  const userMenuMarkup = (\n    <TopBar.UserMenu\n      actions={userMenuActions}\n      name={localStorage.getItem(\"username\")}\n      initials={localStorage.getItem(\"username\").charAt(0)}\n      open={userMenuActive}\n      onToggle={toggleUserMenuActive}\n    />\n  );\n  const searchResultsMarkup = (\n    <Card>\n      <ActionList\n        items={[\n          { content: \"Shopify help center\" },\n          { content: \"Community forums\" },\n        ]}\n      />\n    </Card>\n  );\n\n  const searchFieldMarkup = (\n    <TopBar.SearchField\n      onChange={handleSearchFieldChange}\n      value={searchValue}\n      placeholder=\"Search\"\n    />\n  );\n\n  const topBarMarkup = (\n    <TopBar\n      showNavigationToggle\n      userMenu={userMenuMarkup}\n      searchResultsVisible={searchActive}\n      searchField={searchFieldMarkup}\n      searchResults={searchResultsMarkup}\n      onSearchResultsDismiss={handleSearchResultsDismiss}\n      onNavigationToggle={toggleMobileNavigationActive}\n    />\n  );\n\n  const GetRole = () => {\n    return localStorage.getItem(\"role\");\n  };\n\n  const Checkpermission = () => {\n    if (GetRole() === \"Admin\") {\n      return (\n        <div>\n          <Navigation.Section\n            separator\n            title=\"Metrics\"\n            items={[\n              {\n                label: \"Stores Statics\",\n                url: \"storestatics\",\n              },\n              {\n                label: \"Driver Statistics\",\n                url: \"driverstatics\",\n              },\n              {\n                label: \"Customers Statistics\",\n                url: \"/customerstatics\",\n              },\n              {\n                label: \"Revenue Statistics\",\n                url: \"/revenuestatics\",\n              },\n            ]}\n            rollup={{\n              after: 2,\n              view: \"view\",\n              hide: \"hide\",\n              activePath: \"/\",\n            }}\n            action={{\n              icon: AnalyticsMajor,\n              onClick: () => {},\n            }}\n          />\n          <Navigation.Section\n            separator\n            title=\"Admin Settings\"\n            items={[\n              {\n                label: \"Create Store\",\n                url: \"createstore\",\n              },\n              {\n                label: \"Store Settings\",\n                url: \"storesetting\",\n              },\n              {\n                label: \"User Settings\",\n                url: \"usersetting\"\n              },\n          {\n            label: \"General Settings\",\n            url: \"settings\",\n          },\n              {\n                label: \"Add Service\",\n                url: \"createservice\",\n              },\n              {\n                label: \"Create User\",\n                url: \"createuser\",\n              },\n            ]}\n            rollup={{\n              after: 2,\n              view: \"view\",\n              hide: \"hide\",\n              activePath: \"/\",\n            }}\n            action={{\n              icon: SettingsMinor,\n              onClick: () => {},\n            }}\n          />\n        </div>\n      );\n    } else {\n      return <div></div>;\n    }\n  };\n  const navigationMarkup = (\n    <Navigation location=\"/\">\n      <Navigation.Section\n        separator\n        title=\"Dashboard\"\n        items={[\n          {\n            label: \"Overview\",\n            url: \"/overview\",\n          },\n        ]}\n        action={{\n          icon: HomeMajor,\n        }}\n      />\n      <Navigation.Section\n        separator\n        title=\"Order\"\n        items={[\n          {\n            label: \"Order\",\n            url: \"/order\",\n          },\n          {\n            label: \"New order\",\n            url: \"/neworder\",\n          },\n        ]}\n        action={{\n          icon: OnlineStoreMajor,\n          onClick: () => {},\n        }}\n      />\n      <Navigation.Section\n        separator\n        title=\"Reports\"\n        items={[\n          {\n            label: \"Reports\",\n            url: \"/reports\",\n          },\n        ]}\n        action={{\n          icon: ReportMinor,\n          onClick: () => {},\n        }}\n      />\n      <Checkpermission />\n       <Banner status=\"info\">\n        <p>Current version: {Version}</p>\n      </Banner>\n    </Navigation>\n  );\n  const newPage = <ReportPage />;\n  return (\n    <Frame\n      topBar={topBarMarkup}\n      navigation={navigationMarkup}\n      showMobileNavigation={mobileNavigationActive}\n      onNavigationDismiss={toggleMobileNavigationActive}\n      skipToContentTarget={skipToContentRef.current}\n    >\n      {newPage}\n    </Frame>\n  );\n};\n\nexport default NewPage;\n","import React from \"react\";\nimport { Page,  Stack, Card, DisplayText } from \"@shopify/polaris\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\nimport \"../Chart.css\";\nimport Dropdown from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\n\nconst options = [\n  \"12 AM To 3 AM\",\n  \"03 AM To 6 AM\",\n  \"06 AM To 9 AM\",\n  \"09 AM To 12 PM\",\n  \"12 PM To 3 PM\",\n  \"03 PM To 6 PM\",\n  \"06 PM To 09 PM\",\n];\n\nconst defaultOption = options[0];\n\nconst Data = [\n  {\n    name: \"Page A\",\n    uv: 4000,\n    pv: 2400,\n    amt: 2400,\n  },\n  {\n    name: \"Page B\",\n    uv: 3000,\n    pv: 1398,\n    amt: 2210,\n  },\n  {\n    name: \"Page C\",\n    uv: 2000,\n    pv: 9800,\n    amt: 2290,\n  },\n  {\n    name: \"Page D\",\n    uv: 2780,\n    pv: 3908,\n    amt: 2000,\n  },\n  {\n    name: \"Page E\",\n    uv: 1890,\n    pv: 4800,\n    amt: 2181,\n  },\n  {\n    name: \"Page F\",\n    uv: 2390,\n    pv: 3800,\n    amt: 2500,\n  },\n  {\n    name: \"Page G\",\n    uv: 3490,\n    pv: 4300,\n    amt: 2100,\n  },\n];\n\nconst DriverChart = ({ data /* see data tab */ }) => (\n  <ResponsiveContainer width=\"100%\" height={300}>\n    <LineChart\n      width={1000}\n      height={300}\n      data={data}\n      margin={{\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5,\n      }}\n    >\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <XAxis dataKey=\"name\" />\n      <YAxis />\n      <Tooltip />\n      <Legend />\n      <Line\n        type=\"monotone\"\n        dataKey=\"pv\"\n        stroke=\"#8884d8\"\n        activeDot={{ r: 8 }}\n      />\n      <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\n      <Line type=\"monotone\" dataKey=\"amt\" stroke=\"#82ca9d\" />\n    </LineChart>\n  </ResponsiveContainer>\n);\n\nconst Driverstatics = () => {\n  return (\n    <Page fullWidth>\n        <div className=\"Chartspadding\">\n          <Stack vertical=\"false\">\n            <Stack distribution=\"trailing\" alignment=\"center\">\n              <Stack.Item>\n                <DisplayText size=\"small\">Stores : </DisplayText>\n              </Stack.Item>\n              <Stack.Item>\n                <Dropdown\n                  options={options}\n                  value={defaultOption}\n                  placeholder=\"Select Time Slot\"\n                />\n              </Stack.Item>\n              <Stack.Item>\n                <DisplayText size=\"small\">select time period : </DisplayText>\n              </Stack.Item>\n              <Stack.Item>\n                <Dropdown\n                  options={options}\n                  value={defaultOption}\n                  placeholder=\"Select Time Slot\"\n                />\n              </Stack.Item>\n            </Stack>\n            <Card title=\"Revenue\">\n              <div className=\"chartcontainer\">\n                <DriverChart data={Data} />\n              </div>\n            </Card>\n          </Stack>\n        </div>\n    </Page>\n  );\n};\n\nexport default Driverstatics;\n","import React, { useCallback, useState, useRef } from \"react\";\nimport {\n  Card,\n  ActionList,\n  Frame,\n  Navigation,\n  TopBar,\n  Banner,\n} from \"@shopify/polaris\";\nimport {\n  HomeMajor,\n  OnlineStoreMajor,\n  ReportMinor,\n  AnalyticsMajor,\n  SettingsMinor,\n} from \"@shopify/polaris-icons\";\nimport ReportPage from \"./driverstatics\";\nimport { useHistory } from \"react-router-dom\";\nimport {Version} from \"../../Version\"\n\nconst NewPage = () => {\n\n \n\n  /* UI MESS START HERE */\n  const skipToContentRef = useRef(null);\n  const [searchActive, setSearchActive] = useState(false);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [userMenuActive, setUserMenuActive] = useState(false);\n  const [mobileNavigationActive, setMobileNavigationActive] = useState(false);\n\n  const handleSearchResultsDismiss = useCallback(() => {\n    setSearchActive(false);\n    setSearchValue(\"\");\n  }, []);\n  const handleSearchFieldChange = useCallback((value) => {\n    setSearchValue(value);\n    setSearchActive(value.length > 0);\n  }, []);\n\n  const toggleUserMenuActive = useCallback(\n    () => setUserMenuActive((userMenuActive) => !userMenuActive),\n    []\n  );\n  const toggleMobileNavigationActive = useCallback(\n    () =>\n      setMobileNavigationActive(\n        (mobileNavigationActive) => !mobileNavigationActive\n      ),\n    []\n  );\n\n  const history = useHistory()\n  const Logout = () => {\n    localStorage.removeItem(\"username\");\n    localStorage.removeItem(\"role\");\n    localStorage.removeItem(\"login\");\n    localStorage.removeItem(\"token\");\n    history.push(\"/login\")\n  };\n  const userMenuActions = [\n    {\n      items: [{ content: \"Logout\", onAction: Logout }],\n    },\n  ];\n\n  const userMenuMarkup = (\n    <TopBar.UserMenu\n      actions={userMenuActions}\n      name={localStorage.getItem(\"username\")}\n      initials={localStorage.getItem(\"username\").charAt(0)}\n      open={userMenuActive}\n      onToggle={toggleUserMenuActive}\n    />\n  );\n  const searchResultsMarkup = (\n    <Card>\n      <ActionList\n        items={[\n          { content: \"Shopify help center\" },\n          { content: \"Community forums\" },\n        ]}\n      />\n    </Card>\n  );\n\n  const searchFieldMarkup = (\n    <TopBar.SearchField\n      onChange={handleSearchFieldChange}\n      value={searchValue}\n      placeholder=\"Search\"\n    />\n  );\n\n  const topBarMarkup = (\n    <TopBar\n      showNavigationToggle\n      userMenu={userMenuMarkup}\n      searchResultsVisible={searchActive}\n      searchField={searchFieldMarkup}\n      searchResults={searchResultsMarkup}\n      onSearchResultsDismiss={handleSearchResultsDismiss}\n      onNavigationToggle={toggleMobileNavigationActive}\n    />\n  );\n  const GetRole = () => {\n    return localStorage.getItem(\"role\");\n  };\n\n  const Checkpermission = () => {\n    if (GetRole() === \"Admin\") {\n      return (\n        <div>\n          <Navigation.Section\n            separator\n            title=\"Metrics\"\n            items={[\n              {\n                label: \"Stores Statics\",\n                url: \"storestatics\",\n              },\n              {\n                label: \"Driver Statistics\",\n                url: \"driverstatics\",\n              },\n              {\n                label: \"Customers Statistics\",\n                url: \"/customerstatics\",\n              },\n              {\n                label: \"Revenue Statistics\",\n                url: \"/revenuestatics\",\n              },\n            ]}\n            rollup={{\n              after: 2,\n              view: \"view\",\n              hide: \"hide\",\n              activePath: \"/\",\n            }}\n            action={{\n              icon: AnalyticsMajor,\n              onClick: () => {},\n            }}\n          />\n          <Navigation.Section\n            separator\n            title=\"Admin Settings\"\n            items={[\n              {\n                label: \"Create Store\",\n                url: \"createstore\",\n              },\n              {\n                label: \"Store Settings\",\n                url: \"storesetting\",\n              },\n              {\n                label: \"User Settings\",\n                url: \"usersetting\"\n              },\n          {\n            label: \"General Settings\",\n            url: \"settings\",\n          },\n              {\n                label: \"Add Service\",\n                url: \"createservice\",\n              },\n              {\n                label: \"Create User\",\n                url: \"createuser\",\n              },\n            ]}\n            rollup={{\n              after: 2,\n              view: \"view\",\n              hide: \"hide\",\n              activePath: \"/\",\n            }}\n            action={{\n              icon: SettingsMinor,\n              onClick: () => {},\n            }}\n          />\n        </div>\n      );\n    } else {\n      return <div></div>;\n    }\n  };\n  const navigationMarkup = (\n    <Navigation location=\"/\">\n      <Navigation.Section\n        separator\n        title=\"Dashboard\"\n        items={[\n          {\n            label: \"Overview\",\n            url: \"/overview\",\n          },\n        ]}\n        action={{\n          icon: HomeMajor,\n        }}\n      />\n      <Navigation.Section\n        separator\n        title=\"Order\"\n        items={[\n          {\n            label: \"Order\",\n            url: \"/order\",\n          },\n          {\n            label: \"New order\",\n            url: \"/neworder\",\n          },\n        ]}\n        action={{\n          icon: OnlineStoreMajor,\n          onClick: () => {},\n        }}\n      />\n      <Navigation.Section\n        separator\n        title=\"Reports\"\n        items={[\n          {\n            label: \"Reports\",\n            url: \"/reports\",\n          },\n        ]}\n        action={{\n          icon: ReportMinor,\n          onClick: () => {},\n        }}\n      />\n      <Checkpermission />\n       <Banner status=\"info\">\n        <p>Current version: {Version}</p>\n      </Banner>\n    </Navigation>\n  );\n  const newPage = <ReportPage />;\n  return (\n    <Frame\n      topBar={topBarMarkup}\n      navigation={navigationMarkup}\n      showMobileNavigation={mobileNavigationActive}\n      onNavigationDismiss={toggleMobileNavigationActive}\n      skipToContentTarget={skipToContentRef.current}\n    >\n      {newPage}\n    </Frame>\n  );\n};\n\nexport default NewPage;\n","import React, { PureComponent } from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { Page, Layout, Stack, Card, DisplayText,Heading } from \"@shopify/polaris\";\nimport \"../Chart.css\";\nimport Dropdown from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\n\nconst options = [\n  \"12 AM To 3 AM\",\n  \"03 AM To 6 AM\",\n  \"06 AM To 9 AM\",\n  \"09 AM To 12 PM\",\n  \"12 PM To 3 PM\",\n  \"03 PM To 6 PM\",\n  \"06 PM To 09 PM\",\n];\n\nconst defaultOption = options[0];\nconst data = [\n  {\n    name: \"Page A\",\n    uv: 4000,\n    pv: 2400,\n    amt: 2400,\n  },\n  {\n    name: \"Page B\",\n    uv: 3000,\n    pv: 1398,\n    amt: 2210,\n  },\n  {\n    name: \"Page C\",\n    uv: 2000,\n    pv: 9800,\n    amt: 2290,\n  },\n  {\n    name: \"Page D\",\n    uv: 2780,\n    pv: 3908,\n    amt: 2000,\n  },\n  {\n    name: \"Page E\",\n    uv: 1890,\n    pv: 4800,\n    amt: 2181,\n  },\n  {\n    name: \"Page F\",\n    uv: 2390,\n    pv: 3800,\n    amt: 2500,\n  },\n  {\n    name: \"Page G\",\n    uv: 3490,\n    pv: 4300,\n    amt: 2100,\n  },\n];\n\nconst StorestaticChart = ({ data /* see data tab */ }) => (\n  <ResponsiveContainer width=\"100%\" height={300}>\n    <LineChart\n      width={1000}\n      height={300}\n      data={data}\n      margin={{\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5,\n      }}\n    >\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <XAxis dataKey=\"name\" />\n      <YAxis />\n      <Tooltip />\n      <Legend />\n      <Line\n        type=\"monotone\"\n        dataKey=\"pv\"\n        stroke=\"#8884d8\"\n        activeDot={{ r: 8 }}\n      />\n      <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\n      <Line type=\"monotone\" dataKey=\"amt\" stroke=\"#82ca9d\" />\n    </LineChart>\n  </ResponsiveContainer>\n);\n\nexport default class storestatics extends PureComponent {\n  static jsfiddleUrl = \"https://jsfiddle.net/alidingling/xqjtetw0/\";\n  render() {\n    return (\n      <Page fullWidth>\n          <div className=\"datepadding\">\n            <Stack alignment=\"center\">\n              <Stack.Item fill>\n              <h1 className=\"Heading\">Overview</h1>\n              </Stack.Item>\n              <Stack.Item>\n                <DisplayText size=\"small\">Stores : </DisplayText>\n              </Stack.Item>\n              <Stack.Item>\n                <Dropdown\n                  options={options}\n                  value={defaultOption}\n                  placeholder=\"Select Time Slot\"\n                />\n              </Stack.Item>\n              <Stack.Item>\n                <DisplayText size=\"small\">select time period : </DisplayText>\n              </Stack.Item>\n              <Stack.Item>\n                <Dropdown\n                  options={options}\n                  value={defaultOption}\n                  placeholder=\"Select Time Slot\"\n                />\n              </Stack.Item>\n            </Stack>\n          </div>\n          <Layout>\n            <Layout.Section>\n              <div className=\"Chartspadding\">\n                <Stack vertical=\"false\">\n                  <Card>\n                    <div className=\"chartcontainer\">\n                      <StorestaticChart data={data} />\n                    </div>\n                  </Card>\n                </Stack>\n              </div>\n            </Layout.Section>\n          </Layout>\n      </Page>\n    );\n  }\n}\n","import React, { useCallback, useState, useRef } from \"react\";\nimport {\n  Card,\n  ActionList,\n  Frame,\n  Navigation,\n  TopBar,\n  Banner,\n} from \"@shopify/polaris\";\nimport {\n  HomeMajor,\n  OnlineStoreMajor,\n  ReportMinor,\n  AnalyticsMajor,\n  SettingsMinor,\n} from \"@shopify/polaris-icons\";\nimport ReportPage from \"./Revenuestatics\";\nimport { useHistory } from \"react-router-dom\";\nimport {Version} from \"../../Version\"\n\nconst NewPage = () => {\n\n \n  /* UI MESS START HERE */\n  const skipToContentRef = useRef(null);\n  const [searchActive, setSearchActive] = useState(false);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [userMenuActive, setUserMenuActive] = useState(false);\n  const [mobileNavigationActive, setMobileNavigationActive] = useState(false);\n\n  const handleSearchResultsDismiss = useCallback(() => {\n    setSearchActive(false);\n    setSearchValue(\"\");\n  }, []);\n  const handleSearchFieldChange = useCallback((value) => {\n    setSearchValue(value);\n    setSearchActive(value.length > 0);\n  }, []);\n\n  const toggleUserMenuActive = useCallback(\n    () => setUserMenuActive((userMenuActive) => !userMenuActive),\n    []\n  );\n  const toggleMobileNavigationActive = useCallback(\n    () =>\n      setMobileNavigationActive(\n        (mobileNavigationActive) => !mobileNavigationActive\n      ),\n    []\n  );\n\n  const history = useHistory()\n  const Logout = () => {\n    localStorage.removeItem(\"username\");\n    localStorage.removeItem(\"role\");\n    localStorage.removeItem(\"login\");\n    localStorage.removeItem(\"token\");\n    history.push(\"/login\")\n  };\n  const userMenuActions = [\n    {\n      items: [{ content: \"Logout\", onAction: Logout }],\n    },\n  ];\n\n  const userMenuMarkup = (\n    <TopBar.UserMenu\n      actions={userMenuActions}\n      name={localStorage.getItem(\"username\")}\n      initials={localStorage.getItem(\"username\").charAt(0)}\n      open={userMenuActive}\n      onToggle={toggleUserMenuActive}\n    />\n  );\n  const searchResultsMarkup = (\n    <Card>\n      <ActionList\n        items={[\n          { content: \"Shopify help center\" },\n          { content: \"Community forums\" },\n        ]}\n      />\n    </Card>\n  );\n\n  const searchFieldMarkup = (\n    <TopBar.SearchField\n      onChange={handleSearchFieldChange}\n      value={searchValue}\n      placeholder=\"Search\"\n    />\n  );\n\n  const topBarMarkup = (\n    <TopBar\n      showNavigationToggle\n      userMenu={userMenuMarkup}\n      searchResultsVisible={searchActive}\n      searchField={searchFieldMarkup}\n      searchResults={searchResultsMarkup}\n      onSearchResultsDismiss={handleSearchResultsDismiss}\n      onNavigationToggle={toggleMobileNavigationActive}\n    />\n  );\n\n  const GetRole = () => {\n    return localStorage.getItem(\"role\");\n  };\n\n  const Checkpermission = () => {\n    if (GetRole() === \"Admin\") {\n      return (\n        <div>\n          <Navigation.Section\n            separator\n            title=\"Metrics\"\n            items={[\n              {\n                label: \"Stores Statics\",\n                url: \"storestatics\",\n              },\n              {\n                label: \"Driver Statistics\",\n                url: \"driverstatics\",\n              },\n              {\n                label: \"Customers Statistics\",\n                url: \"/customerstatics\",\n              },\n              {\n                label: \"Revenue Statistics\",\n                url: \"/revenuestatics\",\n              },\n            ]}\n            rollup={{\n              after: 2,\n              view: \"view\",\n              hide: \"hide\",\n              activePath: \"/\",\n            }}\n            action={{\n              icon: AnalyticsMajor,\n              onClick: () => {},\n            }}\n          />\n          <Navigation.Section\n            separator\n            title=\"Admin Settings\"\n            items={[\n              {\n                label: \"Create Store\",\n                url: \"createstore\",\n              },\n              {\n                label: \"Store Settings\",\n                url: \"storesetting\",\n              },\n              {\n                label: \"User Settings\",\n                url: \"usersetting\"\n              },\n          {\n            label: \"General Settings\",\n            url: \"settings\",\n          },\n              {\n                label: \"Add Service\",\n                url: \"createservice\",\n              },\n              {\n                label: \"Create User\",\n                url: \"createuser\",\n              },\n            ]}\n            rollup={{\n              after: 2,\n              view: \"view\",\n              hide: \"hide\",\n              activePath: \"/\",\n            }}\n            action={{\n              icon: SettingsMinor,\n              onClick: () => {},\n            }}\n          />\n        </div>\n      );\n    } else {\n      return <div></div>;\n    }\n  };\n  const navigationMarkup = (\n    <Navigation location=\"/\">\n      <Navigation.Section\n        separator\n        title=\"Dashboard\"\n        items={[\n          {\n            label: \"Overview\",\n            url: \"/overview\",\n          },\n        ]}\n        action={{\n          icon: HomeMajor,\n        }}\n      />\n      <Navigation.Section\n        separator\n        title=\"Order\"\n        items={[\n          {\n            label: \"Order\",\n            url: \"/order\",\n          },\n          {\n            label: \"New order\",\n            url: \"/neworder\",\n          },\n        ]}\n        action={{\n          icon: OnlineStoreMajor,\n          onClick: () => {},\n        }}\n      />\n      <Navigation.Section\n        separator\n        title=\"Reports\"\n        items={[\n          {\n            label: \"Reports\",\n            url: \"/reports\",\n          },\n        ]}\n        action={{\n          icon: ReportMinor,\n          onClick: () => {},\n        }}\n      />\n      <Checkpermission />\n       <Banner status=\"info\">\n        <p>Current version: {Version}</p>\n      </Banner>\n    </Navigation>\n  );\n  const newPage = <ReportPage />;\n  return (\n    <Frame\n      topBar={topBarMarkup}\n      navigation={navigationMarkup}\n      showMobileNavigation={mobileNavigationActive}\n      onNavigationDismiss={toggleMobileNavigationActive}\n      skipToContentTarget={skipToContentRef.current}\n    >\n      {newPage}\n    </Frame>\n  );\n};\n\nexport default NewPage;\n","import React from \"react\";\nimport { Page, Stack, Card, DisplayText } from \"@shopify/polaris\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\nimport \"../Chart.css\";\nimport Dropdown from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\n\nconst options = [\n  \"12 AM To 3 AM\",\n  \"03 AM To 6 AM\",\n  \"06 AM To 9 AM\",\n  \"09 AM To 12 PM\",\n  \"12 PM To 3 PM\",\n  \"03 PM To 6 PM\",\n  \"06 PM To 09 PM\",\n];\n\nconst defaultOption = options[0];\nconst Data = [\n  {\n    name: \"Page A\",\n    uv: 4000,\n    pv: 2400,\n    amt: 2400,\n  },\n  {\n    name: \"Page B\",\n    uv: 3000,\n    pv: 1398,\n    amt: 2210,\n  },\n  {\n    name: \"Page C\",\n    uv: 2000,\n    pv: 9800,\n    amt: 2290,\n  },\n  {\n    name: \"Page D\",\n    uv: 2780,\n    pv: 3908,\n    amt: 2000,\n  },\n  {\n    name: \"Page E\",\n    uv: 1890,\n    pv: 4800,\n    amt: 2181,\n  },\n  {\n    name: \"Page F\",\n    uv: 2390,\n    pv: 3800,\n    amt: 2500,\n  },\n  {\n    name: \"Page G\",\n    uv: 3490,\n    pv: 4300,\n    amt: 2100,\n  },\n];\n\nconst CoustmerChart = ({ data /* see data tab */ }) => (\n  <ResponsiveContainer width=\"100%\" height={300}>\n    <LineChart\n      width={1000}\n      height={300}\n      data={data}\n      margin={{\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5,\n      }}\n    >\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <XAxis dataKey=\"name\" />\n      <YAxis />\n      <Tooltip />\n      <Legend />\n      <Line\n        type=\"monotone\"\n        dataKey=\"pv\"\n        stroke=\"#8884d8\"\n        activeDot={{ r: 8 }}\n      />\n      <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\n      <Line type=\"monotone\" dataKey=\"amt\" stroke=\"#82ca9d\" />\n    </LineChart>\n  </ResponsiveContainer>\n);\n\nconst storestatics = () => {\n  return (\n    <Page fullWidth>\n      <div className=\"Chartspadding\">\n        <Stack vertical=\"false\">\n          <Stack distribution=\"trailing\" alignment=\"center\">\n            <Stack.Item>\n              <DisplayText size=\"small\">Stores : </DisplayText>\n            </Stack.Item>\n            <Stack.Item>\n              <Dropdown\n                options={options}\n                value={defaultOption}\n                placeholder=\"Select Time Slot\"\n              />\n            </Stack.Item>\n            <Stack.Item>\n              <DisplayText size=\"small\">select time period : </DisplayText>\n            </Stack.Item>\n            <Stack.Item>\n              <Dropdown\n                options={options}\n                value={defaultOption}\n                placeholder=\"Select Time Slot\"\n              />\n            </Stack.Item>\n          </Stack>\n          <Card title=\"Revenue\">\n            <div className=\"chartcontainer\">\n              <CoustmerChart data={Data} />\n            </div>\n          </Card>\n        </Stack>\n      </div>\n    </Page>\n  );\n};\n\nexport default storestatics;\n","import React, { useCallback, useState, useRef } from \"react\";\nimport {\n  Card,\n  ActionList,\n  Frame,\n  Navigation,\n  TopBar,\n  Banner,\n} from \"@shopify/polaris\";\nimport {\n  HomeMajor,\n  OnlineStoreMajor,\n  ReportMinor,\n  AnalyticsMajor,\n  SettingsMinor,\n} from \"@shopify/polaris-icons\";\nimport ReportPage from \"./coustmerstatics\";\nimport { useHistory } from \"react-router-dom\";\nimport {Version} from \"../../Version\"\n\nconst NewPage = () => {\n\n \n\n  /* UI MESS START HERE */\n  const skipToContentRef = useRef(null);\n  const [searchActive, setSearchActive] = useState(false);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [userMenuActive, setUserMenuActive] = useState(false);\n  const [mobileNavigationActive, setMobileNavigationActive] = useState(false);\n\n  const handleSearchResultsDismiss = useCallback(() => {\n    setSearchActive(false);\n    setSearchValue(\"\");\n  }, []);\n  const handleSearchFieldChange = useCallback((value) => {\n    setSearchValue(value);\n    setSearchActive(value.length > 0);\n  }, []);\n\n  const toggleUserMenuActive = useCallback(\n    () => setUserMenuActive((userMenuActive) => !userMenuActive),\n    []\n  );\n  const toggleMobileNavigationActive = useCallback(\n    () =>\n      setMobileNavigationActive(\n        (mobileNavigationActive) => !mobileNavigationActive\n      ),\n    []\n  );\n\n  const history = useHistory()\n  const Logout = () => {\n    localStorage.removeItem(\"username\");\n    localStorage.removeItem(\"role\");\n    localStorage.removeItem(\"login\");\n    localStorage.removeItem(\"token\");\n    history.push(\"/login\")\n  };\n  const userMenuActions = [\n    {\n      items: [{ content: \"Logout\", onAction: Logout }],\n    },\n  ];\n\n  const userMenuMarkup = (\n    <TopBar.UserMenu\n      actions={userMenuActions}\n      name={localStorage.getItem(\"username\")}\n      initials={localStorage.getItem(\"username\").charAt(0)}\n      open={userMenuActive}\n      onToggle={toggleUserMenuActive}\n    />\n  );\n  const searchResultsMarkup = (\n    <Card>\n      <ActionList\n        items={[\n          { content: \"Shopify help center\" },\n          { content: \"Community forums\" },\n        ]}\n      />\n    </Card>\n  );\n\n  const searchFieldMarkup = (\n    <TopBar.SearchField\n      onChange={handleSearchFieldChange}\n      value={searchValue}\n      placeholder=\"Search\"\n    />\n  );\n\n  const topBarMarkup = (\n    <TopBar\n      showNavigationToggle\n      userMenu={userMenuMarkup}\n      searchResultsVisible={searchActive}\n      searchField={searchFieldMarkup}\n      searchResults={searchResultsMarkup}\n      onSearchResultsDismiss={handleSearchResultsDismiss}\n      onNavigationToggle={toggleMobileNavigationActive}\n    />\n  );\n\n  const GetRole = () => {\n    return localStorage.getItem(\"role\");\n  };\n\n  const Checkpermission = () => {\n    if (GetRole() === \"Admin\") {\n      return (\n        <div>\n          <Navigation.Section\n            separator\n            title=\"Metrics\"\n            items={[\n              {\n                label: \"Stores Statics\",\n                url: \"storestatics\",\n              },\n              {\n                label: \"Driver Statistics\",\n                url: \"driverstatics\",\n              },\n              {\n                label: \"Customers Statistics\",\n                url: \"/customerstatics\",\n              },\n              {\n                label: \"Revenue Statistics\",\n                url: \"/revenuestatics\",\n              },\n            ]}\n            rollup={{\n              after: 2,\n              view: \"view\",\n              hide: \"hide\",\n              activePath: \"/\",\n            }}\n            action={{\n              icon: AnalyticsMajor,\n              onClick: () => {},\n            }}\n          />\n          <Navigation.Section\n            separator\n            title=\"Admin Settings\"\n            items={[\n              {\n                label: \"Create Store\",\n                url: \"createstore\",\n              },\n              {\n                label: \"Store Settings\",\n                url: \"storesetting\",\n              },\n              {\n                label: \"User Settings\",\n                url: \"usersetting\"\n              },\n          {\n            label: \"General Settings\",\n            url: \"settings\",\n          },\n              {\n                label: \"Add Service\",\n                url: \"createservice\",\n              },\n              {\n                label: \"Create User\",\n                url: \"createuser\",\n              },\n            ]}\n            rollup={{\n              after: 2,\n              view: \"view\",\n              hide: \"hide\",\n              activePath: \"/\",\n            }}\n            action={{\n              icon: SettingsMinor,\n              onClick: () => {},\n            }}\n          />\n        </div>\n      );\n    } else {\n      return <div></div>;\n    }\n  };\n  const navigationMarkup = (\n    <Navigation location=\"/\">\n      <Navigation.Section\n        separator\n        title=\"Dashboard\"\n        items={[\n          {\n            label: \"Overview\",\n            url: \"/overview\",\n          },\n        ]}\n        action={{\n          icon: HomeMajor,\n        }}\n      />\n      <Navigation.Section\n        separator\n        title=\"Order\"\n        items={[\n          {\n            label: \"Order\",\n            url: \"/order\",\n          },\n          {\n            label: \"New order\",\n            url: \"/neworder\",\n          },\n        ]}\n        action={{\n          icon: OnlineStoreMajor,\n          onClick: () => {},\n        }}\n      />\n      <Navigation.Section\n        separator\n        title=\"Reports\"\n        items={[\n          {\n            label: \"Reports\",\n            url: \"/reports\",\n          },\n        ]}\n        action={{\n          icon: ReportMinor,\n          onClick: () => {},\n        }}\n      />\n      <Checkpermission />\n       <Banner status=\"info\">\n        <p>Current version: {Version}</p>\n      </Banner>\n    </Navigation>\n  );\n  const newPage = <ReportPage />;\n  return (\n    <Frame\n      topBar={topBarMarkup}\n      navigation={navigationMarkup}\n      showMobileNavigation={mobileNavigationActive}\n      onNavigationDismiss={toggleMobileNavigationActive}\n      skipToContentTarget={skipToContentRef.current}\n    >\n      {newPage}\n    </Frame>\n  );\n};\n\nexport default NewPage;\n","import React from \"react\";\nimport { Modal, Banner } from \"@shopify/polaris\";\n\nconst Bannerx = ({active,handleChange,Status,Msg}) => {\n  return (\n    <div>\n      <Modal open={active} onClose={handleChange}>\n        <Modal.Section>\n          <Banner status={Status}>\n            <p>{Msg}</p>\n          </Banner>\n        </Modal.Section>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Bannerx","import React, { useState, useEffect, useCallback } from \"react\";\nimport Select from \"react-select\";\nimport axios from \"axios\";\nimport {\n  Stack,\n  Button,\n  Modal,\n  TextField,\n} from \"@shopify/polaris\";\nimport Bannerx from \"./Banner\";\nimport { API } from \"../../API\";\n\nconst MyComponent = ({ City,setCity }) => {\n  const [options, setoptions] = useState([\"\"]);\n  const FetchOption = () => {\n    axios\n      .get(API + \"/regions\", {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      })\n      .then((response) => {\n        setoptions(response.data.data);\n      });\n  };\n  useEffect(() => {\n    FetchOption();\n  }, []);\n  const [categoryvalue, setCategoryvalue] = useState(\"\");\n  const addcategory = () => {\n    console.log(categoryvalue)\n    axios\n      .post(\n        API + \"/regions\",\n        {\n          city: categoryvalue,\n        },\n        {\n          headers: {\n            Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n          },\n        }\n      )\n      .then((response) => {\n        let responsex = response.data.data;\n        if (responsex === \"success\") {\n          Bannersuccesshandler(true);\n          setCategoryvalue(\"\");\n          handleChange();\n          FetchOption();\n        } else {\n          Bannererrorhandler(true);\n          setCategoryvalue(\"\");\n          handleChange();\n        }\n      })\n      .catch(() => {\n        Bannererrorhandler(true);\n        setCategoryvalue(\"\");\n        handleChange();\n      });\n  };\n\n  const [Bannersuccessactive, setBannersuccessactive] = useState(false);\n  const Bannersuccesshandler = useCallback(\n    () => setBannersuccessactive(!Bannersuccessactive),\n    [Bannersuccessactive]\n  );\n\n  const [Bannererroractive, setBannererroractive] = useState(false);\n  const Bannererrorhandler = useCallback(\n    () => setBannererroractive(!Bannererroractive),\n    [Bannererroractive]\n  );\n\n  const [active, setActive] = useState(false);\n\n  const handleChange = useCallback(() => setActive(!active), [active]);\n\n  const activator = (\n    <Button primary  onClick={handleChange}>\n      Add City\n    </Button>\n  );\n  return (\n    <div>\n      <Stack distribution=\"fillEvenly\">\n        <Select\n          options={options}\n          value={City}\n          onChange={(data) => {\n            setCity(data);\n          }}\n          placeholder=\"please select a city\"\n          openOnFocus={true}\n          autofocus={true}\n          menuPortalTarget={document.body}\n          styles={{ menuPortal: (base) => ({ ...base, zIndex: 9999 }) }}\n        />\n        {activator}\n      </Stack>\n      <Modal open={active} onClose={handleChange} title=\"Add city\">\n        <Modal.Section>\n          <TextField\n            placeholder=\"ex: Guwahati\"\n            label=\"city Name\"\n            value={categoryvalue}\n            onChange={(data) => {\n              setCategoryvalue(data);\n            }}\n            connectedRight={\n              <Button\n                primary\n                onClick={() => {\n                  addcategory();\n                }}\n              >\n                Add City{\" \"}\n              </Button>\n            }\n          ></TextField>\n        </Modal.Section>\n      </Modal>\n      <Bannerx\n        active={Bannersuccessactive}\n        handleChange={Bannersuccesshandler}\n        Status={\"success\"}\n        Msg={\"New city has been successfully added!!!\"}\n      />\n      <Bannerx\n        active={Bannererroractive}\n        handleChange={Bannererrorhandler}\n        Status={\"critical\"}\n        Msg={\"New city can't be added there is a some kind of error!!!\"}\n      />\n    </div>\n  );\n};\n\nexport default MyComponent;\n","import React, {  useEffect } from \"react\";\nimport Select from \"react-select\";\nimport makeAnimated from \"react-select/animated\";\nimport {API} from \"../../API\"\nimport axios from 'axios'\n\nconst ServiceCheckbox = ({ Services, setServices, handleSelectservice }) => {\n  const animatedComponents = makeAnimated();\n\n  const FetchServices = () => {\n    axios\n      .get(API + \"/services\", {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      })\n      .then((response) => {\n        setServices(response.data.services);\n      })\n      .catch((response) => {\n        console.log(response);\n      });\n  };\n\n  useEffect(() => {\n    FetchServices();\n  }, []);\n  return (\n    <Select\n      name=\"Select services\"\n      placeholder=\"Select services\"\n      components={animatedComponents}\n      options={Services}\n      onChange={(checkselect) => {\n        console.log(checkselect);\n        handleSelectservice(checkselect);\n      }}\n      openOnFocus={true}\n      autofocus={true}\n      menuPortalTarget={document.body}\n      styles={{ menuPortal: (base) => ({ ...base, zIndex: 9999 }) }}\n    />\n  );\n};\n\nexport default ServiceCheckbox;\n","import React, { useState, useCallback } from \"react\";\nimport {\n  Page,\n  Layout,\n  Card,\n  Stack,\n  TextField,\n  DisplayText,\n  FormLayout,\n  ChoiceList,\n  TextContainer,\n  Button,\n  Modal,\n  Banner,\n} from \"@shopify/polaris\";\nimport DropDown from \"./citydropdown\";\n// import LocationPicker from \"react-location-picker\";\nimport Services from \"./services\";\nimport { API } from \"../../API\";\nimport axios from \"axios\";\n\n// const LocationSelect = () => {\n//   const defaultPosition = {\n//     lat: 26.1445,\n//     lng: 91.7362,\n//   };\n//   const [address, setaddress] = useState(\"\");\n//   const [position, setposition] = useState({\n//     lat: 0,\n//     lng: 0,\n//   });\n//   const handleLocationChange = ({ position, address, places }) => {\n//     setposition(position);\n//     setaddress(address);\n//     alert(position);\n//   };\n//   return (\n//     <LocationPicker\n//       containerElement={<div style={{ height: \"50%\" }} />}\n//       mapElement={<div style={{ height: \"200px\" }} />}\n//       defaultPosition={defaultPosition}\n//       value={position}\n//       onChange={handleLocationChange}\n//     />\n//   );\n// };\n\nconst FormStucher = (Label, injectablecomponent) => {\n  return (\n    <Layout>\n      <Layout.Section secondary>\n        <DisplayText size=\"extraSmall\">{Label} : </DisplayText>\n      </Layout.Section>\n      <Layout.Section>{injectablecomponent}</Layout.Section>\n    </Layout>\n  );\n};\n\nconst CreateStore = () => {\n  const [source, setsource] = useState(\"\");\n  const handlesourceChange = useCallback((value) => setsource(value), []);\n  const [Selectedservice, setSelectedservice] = useState(\"\");\n  const [Servicesx, setServicesx] = useState([]);\n  // const [isLaundry, setisLaundry] = useState(\"false\");\n  const handleSelectservice = (service) => {\n    setSelectedservice(service.value);\n    // if (service !== null) {\n    //   if (service.length !== 0) {\n    //     let count = service.length - 1;\n    //     let Selectedservicex = service[count].value;\n    //     if (Selectedservice === \"\") {\n    //       setSelectedservice(Selectedservicex);\n    //     } else {\n    //       setSelectedservice(Selectedservice + \",\" + Selectedservicex);\n    //     }\n        // Servicesx.map((i) => {\n        //   console.log(service);\n        //   if (i[\"value\"] == Selectedservice) {\n        //     console.log(i[\"category\"])\n        //     if (i[\"category\"] == \"laundry\") {\n        //       setisLaundry(\"true\");\n        //     }\n        //   }\n        // });\n    //   }\n    // } else if (service === null) {\n    //   // setisLaundry(\"false\");\n    // }\n  };\n\n  // const [washervalue, setwashermanvalue] = useState(\"1\");\n  // const [dryervalue, setdryervalue] = useState(\"1\");\n\n  // const Valuer = () => {\n  //   console.log(isLaundry);\n  //   if (isLaundry === \"true\") {\n  //     return (\n  //       <div>\n  //         {FormStucher(\n  //           \"No of Washer\",\n  //           <TextField\n  //             type=\"number\"\n  //             value={washervalue}\n  //             onChange={(count) => {\n  //               setwashermanvalue(count);\n  //             }}\n  //           ></TextField>\n  //         )}\n  //         {FormStucher(\n  //           \"No of Dryer\",\n  //           <TextField\n  //             type=\"number\"\n  //             value={dryervalue}\n  //             onChange={(count) => {\n  //               setdryervalue(count);\n  //             }}\n  //           ></TextField>\n  //         )}\n  //       </div>\n  //     );\n  //   } else {\n  //     return <div></div>;\n  //   }\n  // };\n  const [StoreName, setStoreName] = useState(\"\");\n  const [City, setCity] = useState(\"\");\n  const [address, setaddress] = useState(\"\");\n  const [pincode, setpincode] = useState(\"\");\n\n  const CreateStore = () => {\n    const postdata = {\n      storename: StoreName,\n      city: City.value,\n      address: address,\n      pincode: pincode,\n      services: Selectedservice,\n      typeofstore: source[0],\n    };\n    console.log(postdata);\n    axios\n      .post(API + \"/stores\", postdata, {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      })\n      .then((Response) => {\n        if (\"store successfully created\" === Response.data.data) {\n          setText(Response.data.data);\n          setActive(true);\n        } else {\n          setText(Response.data.data);\n          settriggererror(true);\n        }\n      })\n      .catch((response) => {\n        setText(\"cannot create New Store :(\");\n        settriggererror(true);\n      });\n  };\n\n  const [Text, setText] = useState(\"\");\n\n  const [active, setActive] = useState(false);\n  const [triggererror, settriggererror] = useState(false);\n\n  const handleChange = useCallback(() => setActive(!active), [active]);\n\n  const handleerror = useCallback(() => settriggererror(!triggererror), [\n    triggererror,\n  ]);\n  return (\n    <Page fullWidth>\n      <Card title=\"Create store\">\n        <FormLayout>\n          <div className=\"addpaddingforneworder\">\n            <Stack vertical=\"true\" distribution=\"fill\" spacing=\"extraTight\">\n              {FormStucher(\n                \"Store Name\",\n                <TextField\n                  placeholder=\"Washh Goneshguri\"\n                  value={StoreName}\n                  onChange={(data) => {\n                    setStoreName(data);\n                  }}\n                ></TextField>\n              )}\n              {FormStucher(\"City\", <DropDown city={City} setCity={setCity} />)}\n              {/* {FormStucher(\"Location\", <LocationSelect />)} */}\n              {FormStucher(\n                \"Full Address\",\n                <TextField\n                  multiline={2}\n                  value={address}\n                  onChange={(data) => setaddress(data)}\n                ></TextField>\n              )}\n              {FormStucher(\n                \"Pincode\",\n                <TextField\n                  value={pincode}\n                  onChange={(data) => setpincode(data)}\n                ></TextField>\n              )}\n              {FormStucher(\n                \"Services\",\n                <Services\n                  Services={Servicesx}\n                  setServices={setServicesx}\n                  handleSelectservice={handleSelectservice}\n                />\n              )}\n              {/* <Valuer /> */}\n              {FormStucher(\n                \"Type of Store\",\n                <ChoiceList\n                  choices={[\n                    { label: \"FOCO\", value: \"FOCO\" },\n                    { label: \"FOFO\", value: \"FOFO\" },\n                    { label: \"Company Owned\", value: \"Company Owned\" },\n                    { label: \"Vendor/Partner\", value: \"Vendor/Partner\" },\n                  ]}\n                  selected={source}\n                  onChange={handlesourceChange}\n                />\n              )}\n            </Stack>\n            <Button\n              primary\n              onClick={() => {\n                CreateStore();\n              }}\n            >\n              Submit\n            </Button>\n          </div>\n        </FormLayout>\n      </Card>\n      <Modal open={active} onClose={handleChange}>\n        <Modal.Section>\n          <TextContainer>\n            <Banner status=\"success\">\n              <p>{Text}</p>\n            </Banner>\n          </TextContainer>\n        </Modal.Section>\n      </Modal>\n      <Modal open={triggererror} onClose={handleerror}>\n        <Modal.Section>\n          <TextContainer>\n            <Banner status=\"critical\">\n              <p>{Text}</p>\n            </Banner>\n          </TextContainer>\n        </Modal.Section>\n      </Modal>\n    </Page>\n  );\n};\n\nexport default CreateStore;\n","import React, { useCallback, useState, useRef } from \"react\";\nimport {\n  Card,\n  ActionList,\n  Frame,\n  Navigation,\n  TopBar,\n  Banner,\n} from \"@shopify/polaris\";\nimport {\n  HomeMajor,\n  OnlineStoreMajor,\n  ReportMinor,\n  AnalyticsMajor,\n  SettingsMinor,\n} from \"@shopify/polaris-icons\";\nimport { useHistory } from \"react-router-dom\";\nimport Createstore from './createstore'\nimport {Version} from '../../Version'\n\nconst NewPage = () => {\n\n \n  /* UI MESS START HERE */\n  const skipToContentRef = useRef(null);\n  const [searchActive, setSearchActive] = useState(false);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [userMenuActive, setUserMenuActive] = useState(false);\n  const [mobileNavigationActive, setMobileNavigationActive] = useState(false);\n\n  const handleSearchResultsDismiss = useCallback(() => {\n    setSearchActive(false);\n    setSearchValue(\"\");\n  }, []);\n  const handleSearchFieldChange = useCallback((value) => {\n    setSearchValue(value);\n    setSearchActive(value.length > 0);\n  }, []);\n\n  const toggleUserMenuActive = useCallback(\n    () => setUserMenuActive((userMenuActive) => !userMenuActive),\n    []\n  );\n  const toggleMobileNavigationActive = useCallback(\n    () =>\n      setMobileNavigationActive(\n        (mobileNavigationActive) => !mobileNavigationActive\n      ),\n    []\n  );\n\n  const history = useHistory()\n  const Logout = () => {\n    localStorage.removeItem(\"username\");\n    localStorage.removeItem(\"role\");\n    localStorage.removeItem(\"login\");\n    localStorage.removeItem(\"token\");\n    history.push(\"/login\")\n  };\n  const userMenuActions = [\n    {\n      items: [{ content: \"Logout\", onAction: Logout }],\n    },\n  ];\n\n  const userMenuMarkup = (\n    <TopBar.UserMenu\n      actions={userMenuActions}\n      name={localStorage.getItem(\"username\")}\n      initials={localStorage.getItem(\"username\").charAt(0)}\n      open={userMenuActive}\n      onToggle={toggleUserMenuActive}\n    />\n  );\n  const searchResultsMarkup = (\n    <Card>\n      <ActionList\n        items={[\n          { content: \"Shopify help center\" },\n          { content: \"Community forums\" },\n        ]}\n      />\n    </Card>\n  );\n\n  const searchFieldMarkup = (\n    <TopBar.SearchField\n      onChange={handleSearchFieldChange}\n      value={searchValue}\n      placeholder=\"Search\"\n    />\n  );\n\n  const topBarMarkup = (\n    <TopBar\n      showNavigationToggle\n      userMenu={userMenuMarkup}\n      searchResultsVisible={searchActive}\n      searchField={searchFieldMarkup}\n      searchResults={searchResultsMarkup}\n      onSearchResultsDismiss={handleSearchResultsDismiss}\n      onNavigationToggle={toggleMobileNavigationActive}\n    />\n  );\n\n  const navigationMarkup = (\n    <Navigation location=\"/\">\n      <Navigation.Section\n        separator\n        title=\"Dashboard\"\n        items={[\n          {\n            label: \"Overview\",\n            url: \"/overview\",\n          },\n        ]}\n        action={{\n          icon: HomeMajor,\n        }}\n      />\n        <Navigation.Section\n          separator\n          title=\"Order\"\n          items={[\n            {\n              label: \"Order\",\n              url: \"/order\",\n            },\n            {\n              label: \"New order\",\n              url: \"/neworder\",\n            },\n          ]}\n          action={{\n            icon: OnlineStoreMajor,\n            onClick: () => {},\n          }}\n        />\n      <Navigation.Section\n        separator\n        title=\"Reports\"\n        items={[\n          {\n            label: \"Reports\",\n            url: \"/reports\",\n          },\n        ]}\n        action={{\n          icon: ReportMinor,\n          onClick: () => {},\n        }}\n      />\n      <Navigation.Section\n        separator\n        title=\"Metrics\"\n        items={[\n          {\n            label: \"Stores Statics\",\n            url: \"storestatics\",\n          },\n          {\n            label: \"Driver Statistics\",\n            url: \"driverstatics\",\n          },\n          {\n            label: \"Customers Statistics\",\n            url: \"/customerstatics\",\n          },\n          {\n            label: \"Revenue Statistics\",\n            url: \"/revenuestatics\",\n          },\n        ]}\n        rollup={{\n          after: 2,\n          view: \"view\",\n          hide: \"hide\",\n          activePath: \"/\",\n        }}\n        action={{\n          icon: AnalyticsMajor,\n          onClick: () => {},\n        }}\n      />\n      <Navigation.Section\n        separator\n        title=\"Admin Settings\"\n        items={[\n          {\n            label: \"Create Store\",\n            url:\"createstore\"\n          },\n          {\n            label: \"Store Settings\",\n            url: \"storesetting\"\n          },\n          {\n            label: \"User Settings\",\n          },\n          {\n            label: \"General Settings\",\n          },\n          {\n            label: \"Add Service\",\n            url:\"createservice\"\n          },\n          {\n            label: \"Create User\",\n            url: \"createuser\",\n          },\n        ]}\n        rollup={{\n          after: 2,\n          view: \"view\",\n          hide: \"hide\",\n          activePath: \"/\",\n        }}\n        action={{\n          icon: SettingsMinor,\n          onClick: () => {},\n        }}\n      />\n      <Banner status=\"info\">\n      <p>Current version: {Version}</p>\n      </Banner>\n    </Navigation>\n  );\n\n  const newPage = <Createstore />;\n  return (\n    <Frame\n      topBar={topBarMarkup}\n      navigation={navigationMarkup}\n      showMobileNavigation={mobileNavigationActive}\n      onNavigationDismiss={toggleMobileNavigationActive}\n      skipToContentTarget={skipToContentRef.current}\n    >\n      {newPage}\n    </Frame>\n  );\n};\n\nexport default NewPage;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport {\n  Page,\n  Layout,\n  Stack,\n  Card,\n  FormLayout,\n  TextField,\n  DisplayText,\n  Button,\n  Banner,\n  Modal,\n  TextContainer,\n} from \"@shopify/polaris\";\nimport Dropdown from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\nimport Select from \"react-select\";\nimport \"./App.css\";\nimport {API} from \"../../API\"\nimport axios from 'axios'\n\nconst FormTextStruc = (Label, injectcomponent) => {\n  return (\n    <Layout>\n      <Layout.Section secondary>\n        <DisplayText size=\"extraSmall\">{Label} : </DisplayText>\n      </Layout.Section>\n      <Layout.Section>{injectcomponent}</Layout.Section>\n    </Layout>\n  );\n};\n\nconst FormStruc = (Label, Field) => {\n  return (\n    <Layout>\n      <Layout.Section secondary>\n        <DisplayText size=\"extraSmall\">{Label} : </DisplayText>\n      </Layout.Section>\n      <Layout.Section>{Field}</Layout.Section>\n    </Layout>\n  );\n};\n\nconst Createuser = () => {\n  const [Username, setUsername] = useState(\"\");\n  const [Phone, setPhone] = useState(0);\n\n  const options = [\"PickupBoy\", \"StoreManager\", \"CoustmerCare\", \"Admin\"];\n  const defaultOption = options[0];\n\n  const [Role, setRole] = useState(\"PickupBoy\");\n\n  const checkrole = () => {\n    if (Role === options[0]) {\n      return FormStruc(\"City\", DropDownRegion);\n    } else if (Role === options[1]) {\n      return FormStruc(\"City\", DropDownRegion);\n    } else {\n      return \"\";\n    }\n  };\n\n  const checkroleforarea = () => {\n    if (Role === options[0]) {\n      return FormStruc(\"Store\", DropDownArea);\n    } else if (Role === options[1]) {\n      return FormStruc(\"Store\", DropDownArea);\n    } else {\n      return \"\";\n    }\n  };\n\n  const DropDown = (\n    <Dropdown\n      options={options}\n      value={defaultOption}\n      onChange={(data) => {\n        setRole(data[\"value\"]);\n      }}\n      placeholder=\"Select Role\"\n    />\n  );\n\n  const [optionsRegion, setOptionsRegion] = useState([\"Guwahati\"]);\n  const [SelectedRegion, setSelectedRegion] = useState({ value: \"Guwahati\" });\n  const Getregion = () => {\n    axios\n      .get(API + \"/regions\", {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      })\n      .then((data) => {\n        setOptionsRegion(data.data[\"data\"]);\n        console.log(data.data[\"data\"]);\n      });\n  };\n\n  const Getarea = (Region) => {\n    axios\n      .get(API + \"/regions/area?area=\" + Region.value, {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      })\n      .then((data) => {\n        setArea(data.data[\"data\"]);\n      })\n      .catch((data) => {\n        console.log(data);\n      });\n  };\n\n  useEffect(() => {\n    Getregion();\n  }, []);\n\n  const DropDownRegion = (\n    <Select\n      options={optionsRegion}\n      onChange={(data) => {\n        setSelectedRegion(data);\n        Getarea(data);\n      }}\n      placeholder=\"Select City\"\n    />\n  );\n\n  const [Area, setArea] = useState([\"Please select Region First\"]);\n  const [SelectArea, setSelectArea] = useState({ value: \"empty\" });\n  const DropDownArea = (\n    <Select\n      options={Area}\n      onChange={(data) => {\n        setSelectArea(data);\n      }}\n      openOnFocus={true}\n      autofocus={true}\n      placeholder=\"Select Store\"\n    />\n  );\n\n  const [value, setValue] = useState(\"\");\n\n  const address = (\n    <TextField\n      value={value}\n      onChange={(data) => {\n        setValue(data);\n      }}\n      multiline={2}\n    />\n  );\n\n  const createPassword = (length) => {\n    var result = \"\";\n    var characters =\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  };\n\n  const [active, setActive] = useState(false);\n  const [triggererror, settriggererror] = useState(false);\n\n  const handleChange = useCallback(() => setActive(!active), [active]);\n\n  const handleerror = useCallback(() => settriggererror(!triggererror), [\n    triggererror,\n  ]);\n  const secretpassword = createPassword(10);\n  const clean = () => {\n    setUsername(\"\");\n    setPhone(\"\");\n    setValue(\"\");\n    setSelectedRegion({ value: \"empty\" });\n    setSelectedRegion({ value: \"empty\" });\n  };\n  const CreateUserX = () => {\n    if (Role === \"CoustmerCare\" || Role === \"Admin\") {\n      setSelectArea({ value: \"empty\" });\n      setSelectedRegion({ value: \"empty\" });\n    }\n    const postdata = {\n      username: Username,\n      phone: Phone,\n      address: value,\n      role: Role,\n      region: SelectedRegion.value,\n      store: SelectArea.value,\n      password: secretpassword,\n    };\n    console.log(postdata);\n    axios\n      .post(API + \"/users/create\", postdata, {\n        headers: {\n          \"content-type\": \"text/json\",\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      })\n      .then((response) => {\n        console.log(response.data);\n        handleChange();\n        clean();\n      })\n      .catch((response) => {\n        console.log(response);\n        handleerror();\n      });\n  };\n  return (\n    <Page fullWidth>\n      <Card title=\"Create New User\">\n        <div className=\"userform\">\n          <FormLayout>\n            <Stack vertical=\"true\" distribution=\"fill\" spacing=\"extraTight\">\n              {FormTextStruc(\n                \"Name\",\n                <TextField\n                  type=\"text\"\n                  placeholder=\"script\"\n                  value={Username}\n                  onChange={(data) => {\n                    setUsername(data);\n                  }}\n                />\n              )}\n              {FormTextStruc(\n                \"Phone\",\n                <TextField\n                  type=\"text\"\n                  placeholder=\"9365708946\"\n                  value={Phone}\n                  onChange={(data) => {\n                    setPhone(data);\n                  }}\n                />\n              )}\n              {FormStruc(\"Address\", address)}\n              {FormStruc(\"Role\", DropDown)}\n              {checkrole()}\n              {checkroleforarea()}\n              <Button\n                primary\n                size=\"slim\"\n                onClick={() => {\n                  CreateUserX();\n                }}\n              >\n                Create User\n              </Button>\n            </Stack>\n          </FormLayout>\n        </div>\n      </Card>\n      <Modal open={active} onClose={handleChange}>\n        <Modal.Section>\n          <TextContainer>\n            <Banner status=\"success\">\n              <p>New User has been successfully created</p>\n              <p>Your userid is : {Username}</p>\n              <p>Your password is : {secretpassword}</p>\n            </Banner>\n          </TextContainer>\n        </Modal.Section>\n      </Modal>\n      <Modal open={triggererror} onClose={handleerror}>\n        <Modal.Section>\n          <TextContainer>\n            <Banner status=\"critical\">\n              <p>cannot create New User :( !</p>\n            </Banner>\n          </TextContainer>\n        </Modal.Section>\n      </Modal>\n    </Page>\n  );\n};\n\nexport default Createuser;\n","import React, { useCallback, useState, useRef } from \"react\";\nimport {\n  Card,\n  ActionList,\n  Frame,\n  Navigation,\n  TopBar,\n  Banner,\n} from \"@shopify/polaris\";\nimport {\n  HomeMajor,\n  OnlineStoreMajor,\n  ReportMinor,\n  AnalyticsMajor,\n  SettingsMinor,\n} from \"@shopify/polaris-icons\";\nimport Createuser from \"./createuser\";\nimport { useHistory } from \"react-router-dom\";\nimport {Version} from \"../../Version\"\n\nconst NewPage = () => {\n\n  /* UI MESS START HERE */\n  const skipToContentRef = useRef(null);\n  const [searchActive, setSearchActive] = useState(false);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [userMenuActive, setUserMenuActive] = useState(false);\n  const [mobileNavigationActive, setMobileNavigationActive] = useState(false);\n\n  const handleSearchResultsDismiss = useCallback(() => {\n    setSearchActive(false);\n    setSearchValue(\"\");\n  }, []);\n  const handleSearchFieldChange = useCallback((value) => {\n    setSearchValue(value);\n    setSearchActive(value.length > 0);\n  }, []);\n\n  const toggleUserMenuActive = useCallback(\n    () => setUserMenuActive((userMenuActive) => !userMenuActive),\n    []\n  );\n  const toggleMobileNavigationActive = useCallback(\n    () =>\n      setMobileNavigationActive(\n        (mobileNavigationActive) => !mobileNavigationActive\n      ),\n    []\n  );\n\n  const history = useHistory()\n  const Logout = () => {\n    localStorage.removeItem(\"username\");\n    localStorage.removeItem(\"role\");\n    localStorage.removeItem(\"login\");\n    localStorage.removeItem(\"token\");\n    history.push(\"/login\")\n  };\n  const userMenuActions = [\n    {\n      items: [{ content: \"Logout\", onAction: Logout }],\n    },\n  ];\n\n  const userMenuMarkup = (\n    <TopBar.UserMenu\n      actions={userMenuActions}\n      name={localStorage.getItem(\"username\")}\n      initials={localStorage.getItem(\"username\").charAt(0)}\n      open={userMenuActive}\n      onToggle={toggleUserMenuActive}\n    />\n  );\n  const searchResultsMarkup = (\n    <Card>\n      <ActionList\n        items={[\n          { content: \"Shopify help center\" },\n          { content: \"Community forums\" },\n        ]}\n      />\n    </Card>\n  );\n\n  const searchFieldMarkup = (\n    <TopBar.SearchField\n      onChange={handleSearchFieldChange}\n      value={searchValue}\n      placeholder=\"Search\"\n    />\n  );\n\n  const topBarMarkup = (\n    <TopBar\n      showNavigationToggle\n      userMenu={userMenuMarkup}\n      searchResultsVisible={searchActive}\n      searchField={searchFieldMarkup}\n      searchResults={searchResultsMarkup}\n      onSearchResultsDismiss={handleSearchResultsDismiss}\n      onNavigationToggle={toggleMobileNavigationActive}\n    />\n  );\n\n  const GetRole = () => {\n    return localStorage.getItem(\"role\");\n  };\n\n  const Checkpermission = () => {\n    if (GetRole() === \"Admin\") {\n      return (\n        <div>\n          <Navigation.Section\n            separator\n            title=\"Metrics\"\n            items={[\n              {\n                label: \"Stores Statics\",\n                url: \"storestatics\",\n              },\n              {\n                label: \"Driver Statistics\",\n                url: \"driverstatics\",\n              },\n              {\n                label: \"Customers Statistics\",\n                url: \"/customerstatics\",\n              },\n              {\n                label: \"Revenue Statistics\",\n                url: \"/revenuestatics\",\n              },\n            ]}\n            rollup={{\n              after: 2,\n              view: \"view\",\n              hide: \"hide\",\n              activePath: \"/\",\n            }}\n            action={{\n              icon: AnalyticsMajor,\n              onClick: () => {},\n            }}\n          />\n          <Navigation.Section\n            separator\n            title=\"Admin Settings\"\n            items={[\n              {\n                label: \"Create Store\",\n                url: \"createstore\",\n              },\n              {\n                label: \"Store Settings\",\n                url: \"storesetting\",\n              },\n              {\n                label: \"User Settings\",\n                url: \"usersetting\"\n              },\n          {\n            label: \"General Settings\",\n            url: \"settings\",\n          },\n              {\n                label: \"Add Service\",\n                url: \"createservice\",\n              },\n              {\n                label: \"Create User\",\n                url: \"createuser\",\n              },\n            ]}\n            rollup={{\n              after: 2,\n              view: \"view\",\n              hide: \"hide\",\n              activePath: \"/\",\n            }}\n            action={{\n              icon: SettingsMinor,\n              onClick: () => {},\n            }}\n          />\n        </div>\n      );\n    } else {\n      return <div></div>;\n    }\n  };\n  const navigationMarkup = (\n    <Navigation location=\"/\">\n      <Navigation.Section\n        separator\n        title=\"Dashboard\"\n        items={[\n          {\n            label: \"Overview\",\n            url: \"/overview\",\n          },\n        ]}\n        action={{\n          icon: HomeMajor,\n        }}\n      />\n      <Navigation.Section\n        separator\n        title=\"Order\"\n        items={[\n          {\n            label: \"Order\",\n            url: \"/order\",\n          },\n          {\n            label: \"New order\",\n            url: \"/neworder\",\n          },\n        ]}\n        action={{\n          icon: OnlineStoreMajor,\n          onClick: () => {},\n        }}\n      />\n      <Navigation.Section\n        separator\n        title=\"Reports\"\n        items={[\n          {\n            label: \"Reports\",\n            url: \"/reports\",\n          },\n        ]}\n        action={{\n          icon: ReportMinor,\n          onClick: () => {},\n        }}\n      />\n      <Checkpermission />\n       <Banner status=\"info\">\n        <p>Current version: {Version}</p>\n      </Banner>\n    </Navigation>\n  );\n\n  const newPage = <Createuser />;\n  return (\n    <Frame\n      topBar={topBarMarkup}\n      navigation={navigationMarkup}\n      showMobileNavigation={mobileNavigationActive}\n      onNavigationDismiss={toggleMobileNavigationActive}\n      skipToContentTarget={skipToContentRef.current}\n    >\n      {newPage}\n    </Frame>\n  );\n};\n\nexport default NewPage;\n","import React from \"react\";\nimport { Modal, Banner } from \"@shopify/polaris\";\n\nconst Bannerx = ({active,handleChange,Status,Msg}) => {\n  return (\n    <div>\n      <Modal open={active} onClose={handleChange}>\n        <Modal.Section>\n          <Banner status={Status}>\n            <p>{Msg}</p>\n          </Banner>\n        </Modal.Section>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Bannerx","import React, { useState, useEffect, useCallback } from \"react\";\nimport Select from \"react-select\";\nimport axios from \"axios\";\nimport {\n  Stack,\n  Button,\n  Modal,\n  TextField,\n} from \"@shopify/polaris\";\nimport Bannerx from \"./Banner\";\nimport { API } from \"../../API\";\n\nconst MyComponent = ({ SelectedCategory, setSelectedCategory }) => {\n  const [options, setoptions] = useState([\"\"]);\n  const FetchOption = () => {\n    axios\n      .get(API + \"/services/category\", {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      })\n      .then((response) => {\n        setoptions(response.data.category);\n      });\n  };\n  useEffect(() => {\n    FetchOption();\n  }, []);\n  const [categoryvalue, setCategoryvalue] = useState(\"\");\n  const addcategory = () => {\n    axios\n      .post(\n        API + \"/services/category\",\n        {\n          category: categoryvalue,\n        },\n        {\n          headers: {\n            Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n          },\n        }\n      )\n      .then((response) => {\n        let responsex = response.data.category;\n        if (responsex === \"success\") {\n          Bannersuccesshandler(true);\n          setCategoryvalue(\"\");\n          handleChange();\n          FetchOption();\n        } else {\n          Bannererrorhandler(true);\n          setCategoryvalue(\"\");\n          handleChange();\n        }\n      })\n      .catch(() => {\n        Bannererrorhandler(true);\n        setCategoryvalue(\"\");\n        handleChange();\n      });\n  };\n\n  const [Bannersuccessactive, setBannersuccessactive] = useState(false);\n  const Bannersuccesshandler = useCallback(\n    () => setBannersuccessactive(!Bannersuccessactive),\n    [Bannersuccessactive]\n  );\n\n  const [Bannererroractive, setBannererroractive] = useState(false);\n  const Bannererrorhandler = useCallback(\n    () => setBannererroractive(!Bannererroractive),\n    [Bannererroractive]\n  );\n\n  const [active, setActive] = useState(false);\n\n  const handleChange = useCallback(() => setActive(!active), [active]);\n\n  const activator = (\n    <Button primary size=\"slim\" onClick={handleChange}>\n      Add Service Category\n    </Button>\n  );\n  return (\n    <div>\n      <Stack distribution=\"fillEvenly\">\n        <Select\n          options={options}\n          value={SelectedCategory}\n          onChange={(data) => {\n            setSelectedCategory(data);\n          }}\n          placeholder=\"please select a Service Category\"\n          openOnFocus={true}\n          autofocus={true}\n          menuPortalTarget={document.body}\n          styles={{ menuPortal: (base) => ({ ...base, zIndex: 9999 }) }}\n        />\n        {activator}\n      </Stack>\n      <Modal open={active} onClose={handleChange} title=\"Add service Category\">\n        <Modal.Section>\n          <TextField\n            placeholder=\"ex: Shoe cleaning service\"\n            label=\"Service Category Name\"\n            value={categoryvalue}\n            onChange={(data) => {\n              setCategoryvalue(data);\n            }}\n            connectedRight={\n              <Button\n                primary\n                onClick={() => {\n                  addcategory();\n                }}\n              >\n                Add this Category{\" \"}\n              </Button>\n            }\n          ></TextField>\n        </Modal.Section>\n      </Modal>\n      <Bannerx\n        active={Bannersuccessactive}\n        handleChange={Bannersuccesshandler}\n        Status={\"success\"}\n        Msg={\"New category has been successfully added!!!\"}\n      />\n      <Bannerx\n        active={Bannererroractive}\n        handleChange={Bannererrorhandler}\n        Status={\"critical\"}\n        Msg={\"New category can't be added there is a some kind of error!!!\"}\n      />\n    </div>\n  );\n};\n\nexport default MyComponent;\n","import React, {Component} from 'react';\nimport RichTextEditor from 'react-rte';\n \nclass MyStatefulEditor extends Component {\n \n  state = {\n    value: RichTextEditor.createEmptyValue()\n  }\n\n  componentDidMount(){\n    this.props.setvalue(this.state.value)\n  }\n \n  onChange = (value) => {\n    this.setState({value});\n    if (this.props.onChange) {\n      // Send the changes up to the parent component as an HTML string.\n      // This is here to demonstrate using `.toString()` but in a real app it\n      // would be better to avoid generating a string on each change.\n      this.props.onChange(\n        value.toString('html')\n      );\n    }\n  };\n \n  render () {\n    return (\n      <RichTextEditor\n        value={this.state.value}\n        onChange={this.onChange}\n      />\n    );\n  }\n}\n\nexport default MyStatefulEditor","import React from \"react\";\nimport { TextField, Stack, Button } from \"@shopify/polaris\";\nimport Select from \"react-select\";\nimport \"./Createservice.css\";\n\nconst AddOnsCheckBox = ({ inputList, setInputList }) => {\n  const options = [\n    { value: \"KG\", label: \"KG\" },\n    { value: \"per-piece\", label: \"per-piece\" },\n  ];\n\n  // handle input change\n  const handleInputChange = (e, field, index) => {\n    console.log(field);\n    const list = [...inputList];\n    list[index][field] = e;\n    setInputList(list);\n    console.log(list);\n  };\n\n  // handle click event of the Remove button\n  const handleRemoveClick = (index) => {\n    const list = [...inputList];\n    list.splice(index, 1);\n    setInputList(list);\n  };\n\n  // handle click event of the Add button\n  const handleAddClick = () => {\n    setInputList([...inputList, { Addonsname: \"\", price: \"\", unit: \"\" }]);\n  };\n\n  return (\n    // <Layout>\n    //   <Layout.Section>\n    <Stack spacing=\"extraTight\">\n      {inputList.map((x, i) => {\n        return (\n          <Stack>\n            <TextField\n              placeholder=\"Enter addons Name\"\n              name=\"Addonsname\"\n              value={x.Addonsname}\n              onChange={(e) => handleInputChange(e, \"Addonsname\", i)}\n            ></TextField>\n            <TextField\n              placeholder=\"Enter addons Price\"\n              name=\"price\"\n              value={x.price}\n              onChange={(e) => handleInputChange(e, \"price\", i)}\n              connectedRight={\n                <Select\n                  options={options}\n                  value={x.unit}\n                  name=\"unit\"\n                  // onChange={(data) => {\n                  //   setunit(data);\n                  // }}\n                  onChange={(e) => handleInputChange(e, \"unit\", i)}\n                  placeholder=\"Unit\"\n                  openOnFocus={true}\n                  autofocus={true}\n                  menuPortalTarget={document.body}\n                  styles={{\n                    menuPortal: (base) => ({ ...base, zIndex: 9999 }),\n                  }}\n                  className=\"Unit\"\n                />\n              }\n            ></TextField>\n            {inputList.length !== 1 && (\n              <Button size=\"slim\" primary onClick={() => handleRemoveClick(i)}>\n                Remove\n              </Button>\n            )}\n            {inputList.length - 1 === i && (\n              <Button size=\"slim\" primary onClick={handleAddClick}>\n                Add\n              </Button>\n            )}\n          </Stack>\n        );\n      })}\n    </Stack>\n    //   {/* </Layout.Section>\n    // </Layout> */}\n  );\n};\n\nexport default AddOnsCheckBox;\n","import React, { useState, useCallback } from \"react\";\nimport {\n  Page,\n  Layout,\n  Card,\n  Stack,\n  TextField,\n  DisplayText,\n  FormLayout,\n  Modal,\n  Banner,\n  TextContainer,\n  Button,\n} from \"@shopify/polaris\";\nimport DropDown from \"./servicecatagorydropdown\";\nimport Select from \"react-select\";\nimport \"./Createservice.css\";\nimport Temswriter from \"./termswriter\";\nimport Addons from \"./AddonDropdown\";\nimport Switch from \"react-switch\";\nimport { API } from \"../../API\";\nimport axios from \"axios\";\nimport RichTextEditor from \"react-rte\";\n\nconst FormStucher = (Label, injectablecomponent) => {\n  return (\n    <Layout>\n      <Layout.Section secondary>\n        <DisplayText size=\"extraSmall\">{Label} : </DisplayText>\n      </Layout.Section>\n      <Layout.Section>{injectablecomponent}</Layout.Section>\n    </Layout>\n  );\n};\n\nconst UnitandPrice = ({ Price, setPricex, options, Unit, setUnit }) => {\n  return (\n    <TextField\n      placeholder=\"Enter Price\"\n      prefix=\"₹\"\n      type=\"number\"\n      value={Price}\n      onChange={setPricex}\n      connectedRight={\n        <Select\n          options={options}\n          value={Unit}\n          onChange={(data) => {\n            setUnit(data);\n          }}\n          openOnFocus={true}\n          autofocus={true}\n          menuPortalTarget={document.body}\n          styles={{ menuPortal: (base) => ({ ...base, zIndex: 9999 }) }}\n          className=\"Unit\"\n        />\n      }\n    ></TextField>\n  );\n};\n\nconst CreateService = () => {\n  const options = [\n    { value: \"KG\", label: \"KG\" },\n    { value: \"per-piece\", label: \"per-piece\" },\n  ];\n  const [name, setName] = useState(\"\");\n  const [Price, setPrice] = useState();\n  const handleprincing = useCallback((newValue) => setPrice(newValue), []);\n  const [Unit, setUnit] = useState(options[0]);\n\n  const [SelectedCategory, setSelectedCategory] = useState([\n    {\n      value: \"please select a service category\",\n      label: \"please select a service category\",\n    },\n  ]);\n\n  const [MinimumPrice, setMinimumPrice] = useState(100);\n  const [ProccessingTime, setProccessingTime] = useState(24);\n  const [Discription, setDiscription] = useState(\"\");\n  const [checked, setchecked] = useState(false);\n  const [inputList, setInputList] = useState([\n    { Addonsname: \"\", price: \"\", unit: \"\" },\n  ]);\n\n  const [value, setvalue] = useState(RichTextEditor.createEmptyValue());\n  // Temps and condition still not added\n  const Createservicesenddata = () => {\n    console.log(inputList);\n    const postdata = {\n      name: name,\n      category: SelectedCategory.value,\n      price: Price,\n      unit: Unit.value,\n      minimumprice: MinimumPrice,\n      ptime: ProccessingTime,\n      description: Discription,\n      deliveryavbl: checked,\n    };\n    console.log(postdata);\n    axios\n      .post(API + \"/services\", postdata, {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      })\n      .then((reponsive) => {\n        if (reponsive.data.services === \"New service created successfully\") {\n          setText(reponsive.data.services);\n          setActive(true);\n        }else {\n          setText(reponsive.data.services);\n          settriggererror(true);\n        }\n\n        axios\n          .post(\n            API + \"/addons/\",\n            {\n              addons: inputList,\n              servicename: name,\n            },\n            {\n              headers: {\n                Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n              },\n            }\n          )\n          .then((response) => {\n            console.log(response.data);\n          })\n          .catch((response) => {\n            setText(\"There was an Error Addons cant be added\");\n            settriggererror(true);\n          });\n      })\n      .catch((response) => {\n        setText(\"There was an Error service cant be added\");\n        settriggererror(true);\n      });\n  };\n  const [Text, setText] = useState(\"\");\n\n  const [active, setActive] = useState(false);\n  const [triggererror, settriggererror] = useState(false);\n\n  const handleChange = useCallback(() => setActive(!active), [active]);\n\n  const handleerror = useCallback(() => settriggererror(!triggererror), [\n    triggererror,\n  ]);\n  return (\n    <Page fullWidth>\n      <Card title=\"Create Service\">\n        <FormLayout>\n          <div className=\"addpaddingforneworder\">\n            <Stack vertical=\"true\" distribution=\"fill\" spacing=\"extraTight\">\n              {FormStucher(\n                \"Service Name*\",\n                <TextField\n                  placeholder=\"Service Name\"\n                  value={name}\n                  onChange={(data) => {\n                    setName(data);\n                  }}\n                ></TextField>\n              )}\n              {FormStucher(\n                \"Service Category*\",\n                <DropDown\n                  SelectedCategory={SelectedCategory}\n                  setSelectedCategory={setSelectedCategory}\n                />\n              )}\n              {FormStucher(\n                \"Price & Unit* \",\n                <UnitandPrice\n                  Price={Price}\n                  setPricex={handleprincing}\n                  options={options}\n                  Unit={Unit}\n                  setUnit={setUnit}\n                />\n              )}\n              {FormStucher(\n                \"Minimum Price* \",\n                <TextField\n                  prefix=\"₹\"\n                  type=\"number\"\n                  placeholder=\"Enter minimum price\"\n                  value={MinimumPrice}\n                  onChange={(price) => {\n                    setMinimumPrice(price);\n                  }}\n                  connectedRight={<Button>{Unit.value}</Button>}\n                ></TextField>\n              )}\n              {FormStucher(\n                \"Processing Time* \",\n                <TextField\n                  placeholder=\"Enter time\"\n                  type=\"number\"\n                  value={ProccessingTime}\n                  onChange={(data) => {\n                    setProccessingTime(data);\n                  }}\n                  connectedRight={<Button>{\"Hrs\"}</Button>}\n                ></TextField>\n              )}\n              {FormStucher(\n                \"Description* \",\n                <TextField\n                  multiline={2}\n                  value={Discription}\n                  onChange={(data) => {\n                    setDiscription(data);\n                  }}\n                  placeholder=\"Write a Short description what this service do!!!\"\n                ></TextField>\n              )}\n              {FormStucher(\n                \"Pickup/Drop Available* \",\n                <Switch\n                  onChange={(data) => setchecked(data)}\n                  checked={checked}\n                />\n              )}\n              {FormStucher(\n                \"Add Ons with Price \",\n                <Addons inputList={inputList} setInputList={setInputList} />\n              )}\n              {FormStucher(\n                \"Terms and Conditions \",\n                <Temswriter setvalue={setvalue} />\n              )}\n            </Stack>\n            <Button\n              primary\n              onClick={() => {\n                Createservicesenddata();\n              }}\n            >\n              Submit\n            </Button>\n          </div>\n        </FormLayout>\n      </Card>\n      <Modal open={active} onClose={handleChange}>\n        <Modal.Section>\n          <TextContainer>\n            <Banner status=\"success\">\n              <p>{Text}</p>\n            </Banner>\n          </TextContainer>\n        </Modal.Section>\n      </Modal>\n      <Modal open={triggererror} onClose={handleerror}>\n        <Modal.Section>\n          <TextContainer>\n            <Banner status=\"critical\">\n              <p>{Text}</p>\n            </Banner>\n          </TextContainer>\n        </Modal.Section>\n      </Modal>\n    </Page>\n  );\n};\n\nexport default CreateService;\n","import React, { useCallback, useState, useRef } from \"react\";\nimport {\n  Card,\n  ActionList,\n  Frame,\n  Navigation,\n  TopBar,\n  Banner,\n} from \"@shopify/polaris\";\nimport {\n  HomeMajor,\n  OnlineStoreMajor,\n  ReportMinor,\n  AnalyticsMajor,\n  SettingsMinor,\n} from \"@shopify/polaris-icons\";\nimport { useHistory } from \"react-router-dom\";\nimport Createservice from './Createservice'\nimport {Version} from '../../Version'\n\nconst NewPage = () => {\n\n \n  /* UI MESS START HERE */\n  const skipToContentRef = useRef(null);\n  const [searchActive, setSearchActive] = useState(false);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [userMenuActive, setUserMenuActive] = useState(false);\n  const [mobileNavigationActive, setMobileNavigationActive] = useState(false);\n\n  const handleSearchResultsDismiss = useCallback(() => {\n    setSearchActive(false);\n    setSearchValue(\"\");\n  }, []);\n  const handleSearchFieldChange = useCallback((value) => {\n    setSearchValue(value);\n    setSearchActive(value.length > 0);\n  }, []);\n\n  const toggleUserMenuActive = useCallback(\n    () => setUserMenuActive((userMenuActive) => !userMenuActive),\n    []\n  );\n  const toggleMobileNavigationActive = useCallback(\n    () =>\n      setMobileNavigationActive(\n        (mobileNavigationActive) => !mobileNavigationActive\n      ),\n    []\n  );\n\n  const history = useHistory()\n  const Logout = () => {\n    localStorage.removeItem(\"username\");\n    localStorage.removeItem(\"role\");\n    localStorage.removeItem(\"login\");\n    localStorage.removeItem(\"token\");\n    history.push(\"/login\")\n  };\n  const userMenuActions = [\n    {\n      items: [{ content: \"Logout\", onAction: Logout }],\n    },\n  ];\n\n  const userMenuMarkup = (\n    <TopBar.UserMenu\n      actions={userMenuActions}\n      name={localStorage.getItem(\"username\")}\n      initials={localStorage.getItem(\"username\").charAt(0)}\n      open={userMenuActive}\n      onToggle={toggleUserMenuActive}\n    />\n  );\n  const searchResultsMarkup = (\n    <Card>\n      <ActionList\n        items={[\n          { content: \"Shopify help center\" },\n          { content: \"Community forums\" },\n        ]}\n      />\n    </Card>\n  );\n\n  const searchFieldMarkup = (\n    <TopBar.SearchField\n      onChange={handleSearchFieldChange}\n      value={searchValue}\n      placeholder=\"Search\"\n    />\n  );\n\n  const topBarMarkup = (\n    <TopBar\n      showNavigationToggle\n      userMenu={userMenuMarkup}\n      searchResultsVisible={searchActive}\n      searchField={searchFieldMarkup}\n      searchResults={searchResultsMarkup}\n      onSearchResultsDismiss={handleSearchResultsDismiss}\n      onNavigationToggle={toggleMobileNavigationActive}\n    />\n  );\n\n  const navigationMarkup = (\n    <Navigation location=\"/\">\n      <Navigation.Section\n        separator\n        title=\"Dashboard\"\n        items={[\n          {\n            label: \"Overview\",\n            url: \"/overview\",\n          },\n        ]}\n        action={{\n          icon: HomeMajor,\n        }}\n      />\n        <Navigation.Section\n          separator\n          title=\"Order\"\n          items={[\n            {\n              label: \"Order\",\n              url: \"/order\",\n            },\n            {\n              label: \"New order\",\n              url: \"/neworder\",\n            },\n          ]}\n          action={{\n            icon: OnlineStoreMajor,\n            onClick: () => {},\n          }}\n        />\n      <Navigation.Section\n        separator\n        title=\"Reports\"\n        items={[\n          {\n            label: \"Reports\",\n            url: \"/reports\",\n          },\n        ]}\n        action={{\n          icon: ReportMinor,\n          onClick: () => {},\n        }}\n      />\n      <Navigation.Section\n        separator\n        title=\"Metrics\"\n        items={[\n          {\n            label: \"Stores Statics\",\n            url: \"storestatics\",\n          },\n          {\n            label: \"Driver Statistics\",\n            url: \"driverstatics\",\n          },\n          {\n            label: \"Customers Statistics\",\n            url: \"/customerstatics\",\n          },\n          {\n            label: \"Revenue Statistics\",\n            url: \"/revenuestatics\",\n          },\n        ]}\n        rollup={{\n          after: 2,\n          view: \"view\",\n          hide: \"hide\",\n          activePath: \"/\",\n        }}\n        action={{\n          icon: AnalyticsMajor,\n          onClick: () => {},\n        }}\n      />\n      <Navigation.Section\n        separator\n        title=\"Admin Settings\"\n        items={[\n          {\n            label: \"Create Store\",\n            url:\"/createstore\"\n          },\n          {\n            label: \"Store Settings\",\n            url: \"storesetting\"\n          },\n          {\n            label: \"User Settings\",\n          },\n          {\n            label: \"General Settings\",\n          },\n          {\n            label: \"Add Service\",\n            url:\"/createservice\"\n          },\n          {\n            label: \"Create User\",\n            url: \"/createuser\",\n          },\n        ]}\n        rollup={{\n          after: 2,\n          view: \"view\",\n          hide: \"hide\",\n          activePath: \"/\",\n        }}\n        action={{\n          icon: SettingsMinor,\n          onClick: () => {},\n        }}\n      />\n      <Banner status=\"info\">\n      <p>Current version: {Version}</p>\n      </Banner>\n    </Navigation>\n  );\n\n  const newPage = <Createservice/>\n  return (\n    <Frame\n      topBar={topBarMarkup}\n      navigation={navigationMarkup}\n      showMobileNavigation={mobileNavigationActive}\n      onNavigationDismiss={toggleMobileNavigationActive}\n      skipToContentTarget={skipToContentRef.current}\n    >\n      {newPage}\n    </Frame>\n  );\n};\n\nexport default NewPage;\n","import React from \"react\";\nimport { Modal, Banner } from \"@shopify/polaris\";\n\nconst Bannerx = ({active,handleChange,Status,Msg}) => {\n  return (\n    <div>\n      <Modal open={active} onClose={handleChange}>\n        <Modal.Section>\n          <Banner status={Status}>\n            <p>{Msg}</p>\n          </Banner>\n        </Modal.Section>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Bannerx","import React, {  useState, useEffect, useCallback } from \"react\";\nimport Select from \"react-select\";\nimport axios from \"axios\";\nimport {\n  Stack,\n  Button,\n  Modal,\n  TextField,\n} from \"@shopify/polaris\";\nimport Bannerx from \"./Banner\";\nimport { API } from \"../../API\";\n\nconst MyComponent = ({ City,setCity }) => {\n  const [options, setoptions] = useState([\"\"]);\n  const FetchOption = () => {\n    axios\n      .get(API + \"/regions\", {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      })\n      .then((response) => {\n        setoptions(response.data.data);\n      });\n  };\n  useEffect(() => {\n    FetchOption();\n  }, []);\n  const [categoryvalue, setCategoryvalue] = useState(\"\");\n  const addcategory = () => {\n    console.log(categoryvalue)\n    axios\n      .post(\n        API + \"/regions\",\n        {\n          city: categoryvalue,\n        },\n        {\n          headers: {\n            Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n          },\n        }\n      )\n      .then((response) => {\n        let responsex = response.data.data;\n        if (responsex === \"success\") {\n          Bannersuccesshandler(true);\n          setCategoryvalue(\"\");\n          handleChange();\n          FetchOption();\n        } else {\n          Bannererrorhandler(true);\n          setCategoryvalue(\"\");\n          handleChange();\n        }\n      })\n      .catch(() => {\n        Bannererrorhandler(true);\n        setCategoryvalue(\"\");\n        handleChange();\n      });\n  };\n\n  const [Bannersuccessactive, setBannersuccessactive] = useState(false);\n  const Bannersuccesshandler = useCallback(\n    () => setBannersuccessactive(!Bannersuccessactive),\n    [Bannersuccessactive]\n  );\n\n  const [Bannererroractive, setBannererroractive] = useState(false);\n  const Bannererrorhandler = useCallback(\n    () => setBannererroractive(!Bannererroractive),\n    [Bannererroractive]\n  );\n\n  const [active, setActive] = useState(false);\n\n  const handleChange = useCallback(() => setActive(!active), [active]);\n\n  const activator = (\n    <Button primary  onClick={handleChange}>\n      Add City\n    </Button>\n  );\n  console.log(City)\n  return (\n    <div>\n      <Stack distribution=\"fillEvenly\">\n        <Select\n          options={options}\n          value={City}\n          onChange={(data) => {\n            setCity(data);\n          }}\n          placeholder=\"please select a city\"\n          openOnFocus={true}\n          autofocus={true}\n          defaultValue={City}\n          menuPortalTarget={document.body}\n          styles={{ menuPortal: (base) => ({ ...base, zIndex: 9999 }) }}\n        />\n        {activator}\n      </Stack>\n      <Modal open={active} onClose={handleChange} title=\"Add city\">\n        <Modal.Section>\n          <TextField\n            placeholder=\"ex: Guwahati\"\n            label=\"city Name\"\n            value={categoryvalue}\n            onChange={(data) => {\n              setCategoryvalue(data);\n            }}\n            connectedRight={\n              <Button\n                primary\n                onClick={() => {\n                  addcategory();\n                }}\n              >\n                Add City{\" \"}\n              </Button>\n            }\n          ></TextField>\n        </Modal.Section>\n      </Modal>\n      <Bannerx\n        active={Bannersuccessactive}\n        handleChange={Bannersuccesshandler}\n        Status={\"success\"}\n        Msg={\"New city has been successfully added!!!\"}\n      />\n      <Bannerx\n        active={Bannererroractive}\n        handleChange={Bannererrorhandler}\n        Status={\"critical\"}\n        Msg={\"New city can't be added there is a some kind of error!!!\"}\n      />\n    </div>\n  );\n};\n\nexport default MyComponent;\n","import React, {  useEffect } from \"react\";\nimport Select from \"react-select\";\nimport makeAnimated from \"react-select/animated\";\nimport { API } from \"../../API\";\nimport axios from \"axios\";\n\nconst ServiceCheckbox = ({\n  defaultvaluex,\n  Services,\n  setServices,\n  handleSelectservice,\n}) => {\n  const animatedComponents = makeAnimated();\n\n  const FetchServices = () => {\n    axios\n      .get(API + \"/services\", {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      })\n      .then((response) => {\n        setServices(response.data.services);\n      })\n      .catch((response) => {\n        console.log(response);\n      });\n  };\n\n  useEffect(() => {\n    FetchServices();\n  }, []);\n  return (\n    <Select\n      name=\"Select services\"\n      placeholder=\"Select services\"\n      components={animatedComponents}\n      options={Services}\n      onChange={(checkselect) => {\n        console.log(checkselect);\n        handleSelectservice(checkselect);\n      }}\n      value={{ value: defaultvaluex, label: defaultvaluex }}\n      openOnFocus={true}\n      autofocus={true}\n      menuPortalTarget={document.body}\n      styles={{ menuPortal: (base) => ({ ...base, zIndex: 9999 }) }}\n    />\n  );\n};\n\nexport default ServiceCheckbox;\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport {\n  Layout,\n  Stack,\n  TextField,\n  DisplayText,\n  FormLayout,\n  ChoiceList,\n  Button,\n} from \"@shopify/polaris\";\nimport DropDown from \"./citydropdown\";\nimport Services from \"./services\";\nimport { API } from \"../../API\";\nimport axios from \"axios\";\nimport Switch from \"react-switch\";\n\nconst FormStucher = (Label, injectablecomponent) => {\n  return (\n    <Layout>\n      <Layout.Section secondary>\n        <DisplayText size=\"extraSmall\">{Label} : </DisplayText>\n      </Layout.Section>\n      <Layout.Section>{injectablecomponent}</Layout.Section>\n    </Layout>\n  );\n};\n\nconst Storesetting = ({\n  storeidx,\n  setActivexz,\n  handleerror,\n  handleChangesucc,\n}) => {\n  const [source, setsource] = useState(\"\");\n  const handlesourceChange = useCallback((value) => setsource(value), []);\n  const [Selectedservice, setSelectedservice] = useState();\n  const [Servicesx, setServicesx] = useState([]);\n  // const [isLaundry, setisLaundry] = useState(\"false\");\n  const handleSelectservice = (service) => {\n    setSelectedservice(service.value);\n    // if (service !== null) {\n    //   if (service.length !== 0) {\n    //     let count = service.length - 1;\n    //     let Selectedservice = service[count].value;\n    //     setSelectedservice(Selectedservice);\n    // Servicesx.map((i) => {\n    //   console.log(service);\n    //   if (i[\"value\"] == Selectedservice) {\n    //     console.log(i[\"category\"])\n    //     if (i[\"category\"] == \"laundry\") {\n    //       setisLaundry(\"true\");\n    //     }\n    //   }\n    // });\n    //   }\n    // } else if (service === null) {\n    //   // setisLaundry(\"false\");\n    // }\n  };\n\n  // const [washervalue, setwashermanvalue] = useState(\"1\");\n  // const [dryervalue, setdryervalue] = useState(\"1\");\n\n  // const Valuer = () => {\n  //   console.log(isLaundry);\n  //   if (isLaundry === \"true\") {\n  //     return (\n  //       <div>\n  //         {FormStucher(\n  //           \"No of Washer\",\n  //           <TextField\n  //             type=\"number\"\n  //             value={washervalue}\n  //             onChange={(count) => {\n  //               setwashermanvalue(count);\n  //             }}\n  //           ></TextField>\n  //         )}\n  //         {FormStucher(\n  //           \"No of Dryer\",\n  //           <TextField\n  //             type=\"number\"\n  //             value={dryervalue}\n  //             onChange={(count) => {\n  //               setdryervalue(count);\n  //             }}\n  //           ></TextField>\n  //         )}\n  //       </div>\n  //     );\n  //   } else {\n  //     return <div></div>;\n  //   }\n  // };\n  const [StoreName, setStoreName] = useState(\"\");\n  const [City, setCity] = useState(\"\");\n  const [address, setaddress] = useState(\"\");\n  const [pincode, setpincode] = useState(\"\");\n  const [checked, setchecked] = useState(true);\n\n  const CreateStore = () => {\n    let statuschecked = \"active\";\n    if (checked === true) {\n      statuschecked = \"active\";\n    } else {\n      statuschecked = \"deactive\";\n    }\n    const postdata = {\n      storename: StoreName,\n      city: City.value,\n      address: address,\n      pincode: pincode,\n      services: Selectedservice,\n      typeofstore: source[0],\n      status: statuschecked,\n    };\n    console.log(postdata);\n    axios\n      .post(API + \"/stores/update\", postdata, {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      })\n      .then((response) => {\n        setActivexz(false);\n        handleChangesucc();\n      })\n      .catch((response) => {\n        setActivexz(false);\n        handleerror();\n      });\n  };\n\n  const Prefill = () => {\n    axios\n      .get(API + \"/stores/\" + storeidx, {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      })\n      .then((response) => {\n        const data = response.data.data[0];\n        setStoreName(data.storename);\n        setCity({ value: data.city, label: data.city });\n        setaddress(data.address);\n        setpincode(data.pincode);\n        setSelectedservice(data.services);\n        setsource([data.typeofstore]);\n        if (data.status === \"active\") {\n          setchecked(true);\n        } else {\n          setchecked(false);\n        }\n      });\n  };\n\n\n  useEffect(() => {\n    Prefill();\n  }, []);\n  return (\n    <FormLayout>\n      <Stack vertical=\"true\" distribution=\"fill\" spacing=\"extraTight\">\n        {FormStucher(\n          \"Store Name\",\n          <TextField\n            placeholder=\"Washh Goneshguri\"\n            value={StoreName}\n            onChange={(data) => {\n              setStoreName(data);\n            }}\n            disabled\n          ></TextField>\n        )}\n        {FormStucher(\"City\", <DropDown City={City} setCity={setCity} />)}\n        {/* {FormStucher(\"Location\", <LocationSelect />)} */}\n        {FormStucher(\n          \"Full Address\",\n          <TextField\n            multiline={2}\n            value={address}\n            onChange={(data) => setaddress(data)}\n          ></TextField>\n        )}\n        {FormStucher(\n          \"Pincode\",\n          <TextField\n            value={pincode}\n            onChange={(data) => setpincode(data)}\n          ></TextField>\n        )}\n        {FormStucher(\n          \"Services\",\n          <Services\n            defaultvaluex={Selectedservice}\n            Services={Servicesx}\n            setServices={setServicesx}\n            handleSelectservice={handleSelectservice}\n          />\n        )}\n        {/* <Valuer /> */}\n        {FormStucher(\n          \"Type of Store\",\n          <ChoiceList\n            choices={[\n              { label: \"FOCO\", value: \"FOCO\" },\n              { label: \"FOFO\", value: \"FOFO\" },\n              { label: \"Company Owned\", value: \"Company Owned\" },\n              { label: \"Vendor/Partner\", value: \"Vendor/Partner\" },\n            ]}\n            selected={source}\n            onChange={handlesourceChange}\n          />\n        )}\n\n        {FormStucher(\n          \"Store Status\",\n          <Switch onChange={(data) => setchecked(data)} checked={checked} />\n        )}\n      </Stack>\n      <Button\n        primary\n        onClick={() => {\n          CreateStore();\n        }}\n      >\n        Update store\n      </Button>\n    </FormLayout>\n  );\n};\n\nexport default Storesetting;\n","import React, { useState, useCallback } from \"react\";\nimport { Modal } from \"@shopify/polaris\";\nimport Storesetting from \"./storesetting\";\n\nconst Modalx = ({ id, value,handleerror,handleChangesucc }) => {\n\n  console.log(id)\n\n  const [active, setActive] = useState(false);\n\n  const handleChange = useCallback(() => setActive(!active), [active]);\n\n  const activator = <p onClick={handleChange}>{value}</p>;\n\n  return (\n    <div>\n      <Modal\n        activator={activator}\n        open={active}\n        onClose={handleChange}\n        title=\"Edit Store\"\n        // title={orderId}\n      >\n        <Modal.Section>\n          <Storesetting storeidx={id} setActivexz={setActive} handleerror={handleerror} handleChangesucc={handleChangesucc}/>\n        </Modal.Section>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Modalx;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport {\n  Page,\n  Card,\n  DataTable,\n  Modal,\n  Banner,\n  TextContainer,\n} from \"@shopify/polaris\";\nimport \"./App.css\";\nimport { API } from \"../../API\";\nimport axios from \"axios\";\nimport Modalstaus from \"./ModalStatus\";\n\nconst StoreList = () => {\n  const [StoreOption, setStoreOption] = useState([]);\n\n  const [activesucc, setActivesucc] = useState(false);\n  const [triggererror, settriggererror] = useState(false);\n\n  const handleChangesucc = useCallback(() => setActivesucc(!activesucc), [\n    activesucc,\n  ]);\n\n  const handleerror = useCallback(() => settriggererror(!triggererror), [\n    triggererror,\n  ]);\n\n  const Fetchalluser = () => {\n    axios\n      .get(API + \"/stores/json\", {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      })\n      .then((response) => {\n        console.log(response.data[\"data\"]);\n        let Data = response.data[\"data\"].map(function (rowS) {\n          let Disposabledata = rowS.map(function (item) {\n            console.log(rowS[0]);\n            return (\n              <Modalstaus\n                id={rowS[0]}\n                value={item}\n                handleerror={handleerror}\n                handleChangesucc={handleChangesucc}\n              />\n            );\n          });\n          return Disposabledata;\n        });\n        setStoreOption(Data);\n      })\n      .catch(console.log(\"sorry error\"));\n  };\n\n  useEffect(() => {\n    Fetchalluser();\n  }, [activesucc]);\n\n  return (\n    <Page fullWidth title=\"Store List\">\n      <Card>\n        <DataTable\n          columnContentTypes={[\"text\", \"text\", \"text\"]}\n          headings={[\"StoreName\", \"Location\", \"Status\"]}\n          rows={StoreOption}\n        />\n      </Card>\n      <Modal open={activesucc} onClose={handleChangesucc}>\n        <Modal.Section>\n          <TextContainer>\n            <Banner status=\"success\">\n              <p>Store updated successfully</p>\n            </Banner>\n          </TextContainer>\n        </Modal.Section>\n      </Modal>\n      <Modal open={triggererror} onClose={handleerror}>\n        <Modal.Section>\n          <TextContainer>\n            <Banner status=\"critical\">\n              <p>Sorry Store can't be updated :(</p>\n            </Banner>\n          </TextContainer>\n        </Modal.Section>\n      </Modal>\n    </Page>\n  );\n};\n\nexport default StoreList;\n","import React, { useCallback, useState, useRef } from \"react\";\nimport {\n  Card,\n  ActionList,\n  Frame,\n  Navigation,\n  TopBar,\n  Banner,\n} from \"@shopify/polaris\";\nimport {\n  HomeMajor,\n  OnlineStoreMajor,\n  ReportMinor,\n  AnalyticsMajor,\n  SettingsMinor,\n} from \"@shopify/polaris-icons\";\nimport { useHistory } from \"react-router-dom\";\nimport Storelist from \"./Storelist\";\nimport {Version} from \"../../Version\"\n\nconst NewPage = () => {\n\n \n  /* UI MESS START HERE */\n  const skipToContentRef = useRef(null);\n  const [searchActive, setSearchActive] = useState(false);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [userMenuActive, setUserMenuActive] = useState(false);\n  const [mobileNavigationActive, setMobileNavigationActive] = useState(false);\n\n  const handleSearchResultsDismiss = useCallback(() => {\n    setSearchActive(false);\n    setSearchValue(\"\");\n  }, []);\n  const handleSearchFieldChange = useCallback((value) => {\n    setSearchValue(value);\n    setSearchActive(value.length > 0);\n  }, []);\n\n  const toggleUserMenuActive = useCallback(\n    () => setUserMenuActive((userMenuActive) => !userMenuActive),\n    []\n  );\n  const toggleMobileNavigationActive = useCallback(\n    () =>\n      setMobileNavigationActive(\n        (mobileNavigationActive) => !mobileNavigationActive\n      ),\n    []\n  );\n\n  const history = useHistory()\n  const Logout = () => {\n    localStorage.removeItem(\"username\");\n    localStorage.removeItem(\"role\");\n    localStorage.removeItem(\"login\");\n    localStorage.removeItem(\"token\");\n    history.push(\"/login\")\n  };\n  const userMenuActions = [\n    {\n      items: [{ content: \"Logout\", onAction: Logout }],\n    },\n  ];\n\n  const userMenuMarkup = (\n    <TopBar.UserMenu\n      actions={userMenuActions}\n      name={localStorage.getItem(\"username\")}\n      initials={localStorage.getItem(\"username\").charAt(0)}\n      open={userMenuActive}\n      onToggle={toggleUserMenuActive}\n    />\n  );\n  const searchResultsMarkup = (\n    <Card>\n      <ActionList\n        items={[\n          { content: \"Shopify help center\" },\n          { content: \"Community forums\" },\n        ]}\n      />\n    </Card>\n  );\n\n  const searchFieldMarkup = (\n    <TopBar.SearchField\n      onChange={handleSearchFieldChange}\n      value={searchValue}\n      placeholder=\"Search\"\n    />\n  );\n\n  const topBarMarkup = (\n    <TopBar\n      showNavigationToggle\n      userMenu={userMenuMarkup}\n      searchResultsVisible={searchActive}\n      searchField={searchFieldMarkup}\n      searchResults={searchResultsMarkup}\n      onSearchResultsDismiss={handleSearchResultsDismiss}\n      onNavigationToggle={toggleMobileNavigationActive}\n    />\n  );\n\n  const GetRole = () => {\n    return localStorage.getItem(\"role\");\n  };\n\n  const Checkpermission = () => {\n    if (GetRole() === \"Admin\") {\n      return (\n        <div>\n          <Navigation.Section\n            separator\n            title=\"Metrics\"\n            items={[\n              {\n                label: \"Stores Statics\",\n                url: \"storestatics\",\n              },\n              {\n                label: \"Driver Statistics\",\n                url: \"driverstatics\",\n              },\n              {\n                label: \"Customers Statistics\",\n                url: \"/customerstatics\",\n              },\n              {\n                label: \"Revenue Statistics\",\n                url: \"/revenuestatics\",\n              },\n            ]}\n            rollup={{\n              after: 2,\n              view: \"view\",\n              hide: \"hide\",\n              activePath: \"/\",\n            }}\n            action={{\n              icon: AnalyticsMajor,\n              onClick: () => {},\n            }}\n          />\n          <Navigation.Section\n            separator\n            title=\"Admin Settings\"\n            items={[\n              {\n                label: \"Create Store\",\n                url: \"createstore\",\n              },\n              {\n                label: \"Store Settings\",\n                url: \"storesetting\",\n              },\n              {\n                label: \"User Settings\",\n                url: \"usersetting\"\n              },\n          {\n            label: \"General Settings\",\n            url: \"settings\",\n          },\n              {\n                label: \"Add Service\",\n                url: \"createservice\",\n              },\n              {\n                label: \"Create User\",\n                url: \"createuser\",\n              },\n            ]}\n            rollup={{\n              after: 2,\n              view: \"view\",\n              hide: \"hide\",\n              activePath: \"/\",\n            }}\n            action={{\n              icon: SettingsMinor,\n              onClick: () => {},\n            }}\n          />\n        </div>\n      );\n    } else {\n      return <div></div>;\n    }\n  };\n  const navigationMarkup = (\n    <Navigation location=\"/\">\n      <Navigation.Section\n        separator\n        title=\"Dashboard\"\n        items={[\n          {\n            label: \"Overview\",\n            url: \"/overview\",\n          },\n        ]}\n        action={{\n          icon: HomeMajor,\n        }}\n      />\n      <Navigation.Section\n        separator\n        title=\"Order\"\n        items={[\n          {\n            label: \"Order\",\n            url: \"/order\",\n          },\n          {\n            label: \"New order\",\n            url: \"/neworder\",\n          },\n        ]}\n        action={{\n          icon: OnlineStoreMajor,\n          onClick: () => {},\n        }}\n      />\n      <Navigation.Section\n        separator\n        title=\"Reports\"\n        items={[\n          {\n            label: \"Reports\",\n            url: \"/reports\",\n          },\n        ]}\n        action={{\n          icon: ReportMinor,\n          onClick: () => {},\n        }}\n      />\n      <Checkpermission />\n       <Banner status=\"info\">\n        <p>Current version: {Version}</p>\n      </Banner>\n    </Navigation>\n  );\n\n  const newPage = <Storelist />;\n  return (\n    <Frame\n      topBar={topBarMarkup}\n      navigation={navigationMarkup}\n      showMobileNavigation={mobileNavigationActive}\n      onNavigationDismiss={toggleMobileNavigationActive}\n      skipToContentTarget={skipToContentRef.current}\n    >\n      {newPage}\n    </Frame>\n  );\n};\n\nexport default NewPage;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Layout,\n  Stack,\n  FormLayout,\n  TextField,\n  DisplayText,\n  Button\n} from \"@shopify/polaris\";\nimport Dropdown from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\nimport Select from \"react-select\";\nimport { API } from \"../../API\";\nimport axios from \"axios\";\nimport Switch from \"react-switch\"\n\nconst FormTextStruc = (Label, injectcomponent) => {\n  return (\n    <Layout>\n      <Layout.Section secondary>\n        <DisplayText size=\"extraSmall\">{Label} : </DisplayText>\n      </Layout.Section>\n      <Layout.Section>{injectcomponent}</Layout.Section>\n    </Layout>\n  );\n};\n\nconst FormStruc = (Label, Field) => {\n  return (\n    <Layout>\n      <Layout.Section secondary>\n        <DisplayText size=\"extraSmall\">{Label} : </DisplayText>\n      </Layout.Section>\n      <Layout.Section>{Field}</Layout.Section>\n    </Layout>\n  );\n};\n\nconst Usersetting = ({ id, setActivexz, handleerror, handleChangesucc }) => {\n  const [Username, setUsername] = useState(\"\");\n  const [Phone, setPhone] = useState(0);\n  const [checked, setchecked] = useState(true)\n\n  const options = [\"PickupBoy\", \"StoreManager\", \"CoustmerCare\", \"Admin\"];\n\n  const [Role, setRole] = useState(\"PickupBoy\");\n\n  const checkrole = (data) => {\n    if (Role === options[0]) {\n      return FormStruc(\"City\", <DropDownRegion data={data} />);\n    } else if (Role === options[1]) {\n      return FormStruc(\"City\", <DropDownRegion data={data} />);\n    } else {\n      return \"\";\n    }\n  };\n\n  const checkroleforarea = (data) => {\n    if (Role === options[0]) {\n      return FormStruc(\"Store\", <DropDownArea Defaultstore={data} />);\n    } else if (Role === options[1]) {\n      return FormStruc(\"Store\", <DropDownArea Defaultstore={data} />);\n    } else {\n      return \"\";\n    }\n  };\n\n  const DropDown = (Defaultvalue) => {\n    return (\n      <Dropdown\n        options={options}\n        value={Defaultvalue.Defaultvalue}\n        onChange={(data) => {\n          setRole(data[\"value\"]);\n        }}\n        placeholder=\"Select Role\"\n      />\n    );\n  };\n\n  const [optionsRegion, setOptionsRegion] = useState([\"Guwahati\"]);\n  const [SelectedRegion, setSelectedRegion] = useState({ value: \"Guwahati\" });\n  const Getregion = () => {\n    axios\n      .get(API + \"/regions\", {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      })\n      .then((data) => {\n        setOptionsRegion(data.data[\"data\"]);\n        console.log(data.data[\"data\"]);\n      });\n  };\n\n  const Getarea = (Region) => {\n    axios\n      .get(API + \"/regions/area?area=\" + Region.value, {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      })\n      .then((data) => {\n        setArea(data.data[\"data\"]);\n      })\n      .catch((data) => {\n        console.log(data);\n      });\n  };\n\n  useEffect(() => {\n    Getregion();\n    Getarea(SelectedRegion);\n  }, []);\n\n  const DropDownRegion = (data) => {\n    console.log(data.data);\n    return (\n      <Select\n        options={optionsRegion}\n        onChange={(data) => {\n          setSelectedRegion(data);\n          Getarea(data);\n        }}\n        defaultValue={data.data}\n        placeholder=\"Select City\"\n      />\n    );\n  };\n\n  const [Area, setArea] = useState([\"Please select Region First\"]);\n  const [SelectArea, setSelectArea] = useState({ value: \"empty\" });\n  const DropDownArea = (Defaultstore) => {\n    return (\n      <Select\n        options={Area}\n        onChange={(data) => {\n          setSelectArea(data);\n        }}\n        openOnFocus={true}\n        autofocus={true}\n        placeholder=\"Select Store\"\n        defaultValue={Defaultstore.Defaultstore}\n      />\n    );\n  };\n\n  const [value, setValue] = useState(\"\");\n\n  const address = (\n    <TextField\n      value={value}\n      onChange={(data) => {\n        setValue(data);\n      }}\n      multiline={2}\n    />\n  );\n\n  const clean = () => {\n    setUsername(\"\");\n    setPhone(\"\");\n    setValue(\"\");\n    setSelectedRegion({ value: \"empty\" });\n    setSelectedRegion({ value: \"empty\" });\n  };\n  const CreateUserX = () => {\n    let statuschecked = \"active\"\n    if (Role === \"CoustmerCare\" || Role === \"Admin\") {\n      setSelectArea({ value: \"empty\" });\n      setSelectedRegion({ value: \"empty\" });\n    }\n    if (checked === true) {\n      statuschecked = \"active\"\n    }\n    else {\n      statuschecked = \"deactive\"\n    }\n    const postdata = {\n      username: Username,\n      phone: Phone,\n      address: value,\n      role: Role,\n      region: SelectedRegion.value,\n      store: SelectArea.value,\n      status: statuschecked\n    };\n    console.log(postdata);\n    axios\n      .post(API + \"/users/update\", postdata, {\n        headers: {\n          \"content-type\": \"text/json\",\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      })\n      .then((response) => {\n        setActivexz(false);\n        handleChangesucc();\n        clean();\n      })\n      .catch((response) => {\n        setActivexz(false);\n        handleerror();\n      });\n  };\n\n  const Fetchuserinfo = () => {\n    axios\n      .get(API + \"/users/\" + id, {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      })\n      .then((response) => {\n        const data = response.data.data[0];\n        setUsername(data.username);\n        setPhone(data.phone);\n        setValue(data.address);\n        setRole(data.role);\n        setSelectedRegion({ value: data.region, label: data.region });\n        setSelectArea({ value: data.area, label: data.area });\n        if (data.status === \"active\"){\n          setchecked(true)\n        }\n        else {\n          setchecked(false)\n        }\n      });\n  };\n\n  useEffect(() => {\n    Fetchuserinfo();\n  }, []);\n  return (\n    <div>\n      <FormLayout>\n        <Stack vertical=\"true\" distribution=\"fill\" spacing=\"extraTight\">\n          {FormTextStruc(\n            \"Name\",\n            <TextField\n              type=\"text\"\n              placeholder=\"script\"\n              value={Username}\n              onChange={(data) => {\n                setUsername(data);\n              }}\n              disabled\n            />\n          )}\n          {FormTextStruc(\n            \"Phone\",\n            <TextField\n              type=\"text\"\n              placeholder=\"9365708946\"\n              value={Phone}\n              onChange={(data) => {\n                setPhone(data);\n              }}\n            />\n          )}\n          {FormStruc(\"Address\", address)}\n          {FormStruc(\"Role\", <DropDown Defaultvalue={Role} />)}\n          {checkrole(SelectedRegion)}\n          {checkroleforarea(SelectArea)}\n          {FormStruc(\n            \"User Status\",\n            <Switch onChange={(data) => setchecked(data)} checked={checked} />\n          )}\n          <Button\n            primary\n            size=\"slim\"\n            onClick={() => {\n              CreateUserX();\n            }}\n          >\n            Update User\n          </Button>\n        </Stack>\n      </FormLayout>\n    </div>\n  );\n};\n\nexport default Usersetting;\n","import React, { useState, useCallback } from \"react\";\nimport { Modal } from \"@shopify/polaris\";\nimport Usersetting from \"./usersetting\";\n\nconst Modalx = ({ id, value,handleerror,handleChangesucc }) => {\n\n  console.log(id)\n\n  const [active, setActive] = useState(false);\n\n  const handleChange = useCallback(() => setActive(!active), [active]);\n\n  const activator = <p onClick={handleChange}>{value}</p>;\n\n  return (\n    <div>\n      <Modal\n        activator={activator}\n        open={active}\n        onClose={handleChange}\n        title=\"Edit User\"\n        // title={orderId}\n      >\n        <Modal.Section>\n          <Usersetting id={id} setActivexz={setActive} handleerror={handleerror} handleChangesucc={handleChangesucc}/>\n        </Modal.Section>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Modalx;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport {\n  Page,\n  Card,\n  DataTable,\n  Banner,\n  Modal,\n  TextContainer,\n} from \"@shopify/polaris\";\nimport { API } from \"../../API\";\nimport axios from \"axios\";\nimport Modalstaus from './ModalStatus'\n\n\nconst Userlist = () => {\n  const [UserOption, setUserOption] = useState([]);\n\n  const [activesucc, setActivesucc] = useState(false);\n  const [triggererror, settriggererror] = useState(false);\n\n  const handleChangesucc = useCallback(() => setActivesucc(!activesucc), [\n    activesucc,\n  ]);\n\n  const handleerror = useCallback(() => settriggererror(!triggererror), [\n    triggererror,\n  ]);\n\n  const Fetchalluser = () => {\n    axios\n      .get(API + \"/users\", {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      })\n      .then((response) => {\n        console.log(response.data[\"data\"]);\n        let Data = response.data[\"data\"].map(function (rowS) {\n          let Disposabledata = rowS.map(function (item) {\n            console.log(rowS[0])\n            return (\n              <Modalstaus\n                id={rowS[0]}\n                value={item}\n                handleerror={handleerror}\n                handleChangesucc={handleChangesucc}\n              />\n            );\n          });\n          return Disposabledata;\n        });\n        setUserOption(Data);\n      })\n      .catch(console.log(\"sorry error\"));\n  };\n\n  useEffect(() => {\n    Fetchalluser();\n  }, [activesucc]);\n\n  return (\n    <Page fullWidth title=\"User List\">\n      <Card>\n        <DataTable\n          columnContentTypes={[\"text\", \"text\", \"text\", \"text\"]}\n          headings={[\"Username\", \"Role\", \"Location\", \"Status\"]}\n          rows={UserOption}\n        />\n      </Card>\n      <Modal open={activesucc} onClose={handleChangesucc}>\n        <Modal.Section>\n          <TextContainer>\n            <Banner status=\"success\">\n              <p>User updated successfully</p>\n            </Banner>\n          </TextContainer>\n        </Modal.Section>\n      </Modal>\n      <Modal open={triggererror} onClose={handleerror}>\n        <Modal.Section>\n          <TextContainer>\n            <Banner status=\"critical\">\n              <p>Sorry user can't be updated :(</p>\n            </Banner>\n          </TextContainer>\n        </Modal.Section>\n      </Modal>\n    </Page>\n  );\n};\n\nexport default Userlist;\n","import React, { useCallback, useState, useRef } from \"react\";\nimport {\n  Card,\n  ActionList,\n  Frame,\n  Navigation,\n  TopBar,\n  Banner,\n} from \"@shopify/polaris\";\nimport {\n  HomeMajor,\n  OnlineStoreMajor,\n  ReportMinor,\n  AnalyticsMajor,\n  SettingsMinor,\n} from \"@shopify/polaris-icons\";\nimport { useHistory } from \"react-router-dom\";\nimport Userlist from \"./UserList\";\nimport {Version} from \"../../Version\"\n\nconst NewPage = () => {\n\n \n  /* UI MESS START HERE */\n  const skipToContentRef = useRef(null);\n  const [searchActive, setSearchActive] = useState(false);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [userMenuActive, setUserMenuActive] = useState(false);\n  const [mobileNavigationActive, setMobileNavigationActive] = useState(false);\n\n  const handleSearchResultsDismiss = useCallback(() => {\n    setSearchActive(false);\n    setSearchValue(\"\");\n  }, []);\n  const handleSearchFieldChange = useCallback((value) => {\n    setSearchValue(value);\n    setSearchActive(value.length > 0);\n  }, []);\n\n  const toggleUserMenuActive = useCallback(\n    () => setUserMenuActive((userMenuActive) => !userMenuActive),\n    []\n  );\n  const toggleMobileNavigationActive = useCallback(\n    () =>\n      setMobileNavigationActive(\n        (mobileNavigationActive) => !mobileNavigationActive\n      ),\n    []\n  );\n\n  const history = useHistory()\n  const Logout = () => {\n    localStorage.removeItem(\"username\");\n    localStorage.removeItem(\"role\");\n    localStorage.removeItem(\"login\");\n    localStorage.removeItem(\"token\");\n    history.push(\"/login\")\n  };\n  const userMenuActions = [\n    {\n      items: [{ content: \"Logout\", onAction: Logout }],\n    },\n  ];\n\n  const userMenuMarkup = (\n    <TopBar.UserMenu\n      actions={userMenuActions}\n      name={localStorage.getItem(\"username\")}\n      initials={localStorage.getItem(\"username\").charAt(0)}\n      open={userMenuActive}\n      onToggle={toggleUserMenuActive}\n    />\n  );\n  const searchResultsMarkup = (\n    <Card>\n      <ActionList\n        items={[\n          { content: \"Shopify help center\" },\n          { content: \"Community forums\" },\n        ]}\n      />\n    </Card>\n  );\n\n  const searchFieldMarkup = (\n    <TopBar.SearchField\n      onChange={handleSearchFieldChange}\n      value={searchValue}\n      placeholder=\"Search\"\n    />\n  );\n\n  const topBarMarkup = (\n    <TopBar\n      showNavigationToggle\n      userMenu={userMenuMarkup}\n      searchResultsVisible={searchActive}\n      searchField={searchFieldMarkup}\n      searchResults={searchResultsMarkup}\n      onSearchResultsDismiss={handleSearchResultsDismiss}\n      onNavigationToggle={toggleMobileNavigationActive}\n    />\n  );\n\n  const GetRole = () => {\n    return localStorage.getItem(\"role\");\n  };\n\n  const Checkpermission = () => {\n    if (GetRole() === \"Admin\") {\n      return (\n        <div>\n          <Navigation.Section\n            separator\n            title=\"Metrics\"\n            items={[\n              {\n                label: \"Stores Statics\",\n                url: \"storestatics\",\n              },\n              {\n                label: \"Driver Statistics\",\n                url: \"driverstatics\",\n              },\n              {\n                label: \"Customers Statistics\",\n                url: \"/customerstatics\",\n              },\n              {\n                label: \"Revenue Statistics\",\n                url: \"/revenuestatics\",\n              },\n            ]}\n            rollup={{\n              after: 2,\n              view: \"view\",\n              hide: \"hide\",\n              activePath: \"/\",\n            }}\n            action={{\n              icon: AnalyticsMajor,\n              onClick: () => {},\n            }}\n          />\n          <Navigation.Section\n            separator\n            title=\"Admin Settings\"\n            items={[\n              {\n                label: \"Create Store\",\n                url: \"createstore\",\n              },\n              {\n                label: \"Store Settings\",\n                url: \"storesetting\",\n              },\n              {\n                label: \"User Settings\",\n                url: \"usersetting\"\n              },\n          {\n            label: \"General Settings\",\n            url: \"settings\",\n          },\n              {\n                label: \"Add Service\",\n                url: \"createservice\",\n              },\n              {\n                label: \"Create User\",\n                url: \"createuser\",\n              },\n            ]}\n            rollup={{\n              after: 2,\n              view: \"view\",\n              hide: \"hide\",\n              activePath: \"/\",\n            }}\n            action={{\n              icon: SettingsMinor,\n              onClick: () => {},\n            }}\n          />\n        </div>\n      );\n    } else {\n      return <div></div>;\n    }\n  };\n  const navigationMarkup = (\n    <Navigation location=\"/\">\n      <Navigation.Section\n        separator\n        title=\"Dashboard\"\n        items={[\n          {\n            label: \"Overview\",\n            url: \"/overview\",\n          },\n        ]}\n        action={{\n          icon: HomeMajor,\n        }}\n      />\n      <Navigation.Section\n        separator\n        title=\"Order\"\n        items={[\n          {\n            label: \"Order\",\n            url: \"/order\",\n          },\n          {\n            label: \"New order\",\n            url: \"/neworder\",\n          },\n        ]}\n        action={{\n          icon: OnlineStoreMajor,\n          onClick: () => {},\n        }}\n      />\n      <Navigation.Section\n        separator\n        title=\"Reports\"\n        items={[\n          {\n            label: \"Reports\",\n            url: \"/reports\",\n          },\n        ]}\n        action={{\n          icon: ReportMinor,\n          onClick: () => {},\n        }}\n      />\n      <Checkpermission />\n       <Banner status=\"info\">\n        <p>Current version: {Version}</p>\n      </Banner>\n    </Navigation>\n  );\n\n  const newPage = <Userlist />;\n  return (\n    <Frame\n      topBar={topBarMarkup}\n      navigation={navigationMarkup}\n      showMobileNavigation={mobileNavigationActive}\n      onNavigationDismiss={toggleMobileNavigationActive}\n      skipToContentTarget={skipToContentRef.current}\n    >\n      {newPage}\n    </Frame>\n  );\n};\n\nexport default NewPage;\n","import React, { useState } from \"react\";\nimport { Page, Card, DisplayText, Layout, Stack } from \"@shopify/polaris\";\nimport Switch from \"react-switch\";\nimport \"./settings.css\";\n\nconst Structer = ({ Title, Component }) => {\n  return (\n    <Layout>\n      <Layout.Section oneHalf>\n        <DisplayText size=\"extraSmall\">{Title}</DisplayText>\n      </Layout.Section>\n      <Layout.Section oneHalf>{Component}</Layout.Section>\n    </Layout>\n  );\n};\nconst Settings = () => {\n  const Title = <DisplayText size=\"small\">Settings</DisplayText>;\n  const [checked, setchecked] = useState(false);\n  const ThemeChange = () => {\n    return <Switch onChange={(data) => setchecked(data)} checked={checked} />;\n  };\n  return (\n    <Page fullWidth>\n      <Card title={Title}>\n        <div className=\"settings\">\n          <Stack vertical=\"false\">\n            <Structer Title={\"Theme\"} Component={<ThemeChange />} />\n          </Stack>\n        </div>\n      </Card>\n    </Page>\n  );\n};\n\nexport default Settings;\n","import React, { useCallback, useState, useRef } from \"react\";\nimport {\n  Card,\n  ActionList,\n  Frame,\n  Navigation,\n  TopBar,\n  Banner,\n} from \"@shopify/polaris\";\nimport {\n  HomeMajor,\n  OnlineStoreMajor,\n  ReportMinor,\n  AnalyticsMajor,\n  SettingsMinor,\n} from \"@shopify/polaris-icons\";\nimport { useHistory } from \"react-router-dom\";\nimport Generalsetting from \"./generalsetting\";\nimport { Version } from \"../../Version\";\n\nconst NewPage = () => {\n  /* UI MESS START HERE */\n  const skipToContentRef = useRef(null);\n  const [searchActive, setSearchActive] = useState(false);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [userMenuActive, setUserMenuActive] = useState(false);\n  const [mobileNavigationActive, setMobileNavigationActive] = useState(false);\n\n  const handleSearchResultsDismiss = useCallback(() => {\n    setSearchActive(false);\n    setSearchValue(\"\");\n  }, []);\n  const handleSearchFieldChange = useCallback((value) => {\n    setSearchValue(value);\n    setSearchActive(value.length > 0);\n  }, []);\n\n  const toggleUserMenuActive = useCallback(\n    () => setUserMenuActive((userMenuActive) => !userMenuActive),\n    []\n  );\n  const toggleMobileNavigationActive = useCallback(\n    () =>\n      setMobileNavigationActive(\n        (mobileNavigationActive) => !mobileNavigationActive\n      ),\n    []\n  );\n\n  const history = useHistory();\n  const Logout = () => {\n    localStorage.removeItem(\"username\");\n    localStorage.removeItem(\"role\");\n    localStorage.removeItem(\"login\");\n    localStorage.removeItem(\"token\");\n    history.push(\"/login\");\n  };\n  const userMenuActions = [\n    {\n      items: [{ content: \"Logout\", onAction: Logout }],\n    },\n  ];\n\n  const userMenuMarkup = (\n    <TopBar.UserMenu\n      actions={userMenuActions}\n      name={localStorage.getItem(\"username\")}\n      initials={localStorage.getItem(\"username\").charAt(0)}\n      open={userMenuActive}\n      onToggle={toggleUserMenuActive}\n    />\n  );\n  const searchResultsMarkup = (\n    <Card>\n      <ActionList\n        items={[\n          { content: \"Shopify help center\" },\n          { content: \"Community forums\" },\n        ]}\n      />\n    </Card>\n  );\n\n  const searchFieldMarkup = (\n    <TopBar.SearchField\n      onChange={handleSearchFieldChange}\n      value={searchValue}\n      placeholder=\"Search\"\n    />\n  );\n\n  const topBarMarkup = (\n    <TopBar\n      showNavigationToggle\n      userMenu={userMenuMarkup}\n      searchResultsVisible={searchActive}\n      searchField={searchFieldMarkup}\n      searchResults={searchResultsMarkup}\n      onSearchResultsDismiss={handleSearchResultsDismiss}\n      onNavigationToggle={toggleMobileNavigationActive}\n    />\n  );\n\n  const navigationMarkup = (\n    <Navigation location=\"/\">\n      <Navigation.Section\n        separator\n        title=\"Dashboard\"\n        items={[\n          {\n            label: \"Overview\",\n            url: \"/overview\",\n          },\n        ]}\n        action={{\n          icon: HomeMajor,\n        }}\n      />\n      <Navigation.Section\n        separator\n        title=\"Order\"\n        items={[\n          {\n            label: \"Order\",\n            url: \"/order\",\n          },\n          {\n            label: \"New order\",\n            url: \"/neworder\",\n          },\n        ]}\n        action={{\n          icon: OnlineStoreMajor,\n          onClick: () => {},\n        }}\n      />\n      <Navigation.Section\n        separator\n        title=\"Reports\"\n        items={[\n          {\n            label: \"Reports\",\n            url: \"/reports\",\n          },\n        ]}\n        action={{\n          icon: ReportMinor,\n          onClick: () => {},\n        }}\n      />\n      <Navigation.Section\n        separator\n        title=\"Metrics\"\n        items={[\n          {\n            label: \"Stores Statics\",\n            url: \"storestatics\",\n          },\n          {\n            label: \"Driver Statistics\",\n            url: \"driverstatics\",\n          },\n          {\n            label: \"Customers Statistics\",\n            url: \"/customerstatics\",\n          },\n          {\n            label: \"Revenue Statistics\",\n            url: \"/revenuestatics\",\n          },\n        ]}\n        rollup={{\n          after: 2,\n          view: \"view\",\n          hide: \"hide\",\n          activePath: \"/\",\n        }}\n        action={{\n          icon: AnalyticsMajor,\n          onClick: () => {},\n        }}\n      />\n      <Navigation.Section\n        separator\n        title=\"Admin Settings\"\n        items={[\n          {\n            label: \"Create Store\",\n            url: \"createstore\",\n          },\n          {\n            label: \"Store Settings\",\n            url: \"storesetting\",\n          },\n          {\n            label: \"User Settings\",\n            url: \"usersetting\",\n          },\n          {\n            label: \"General Settings\",\n            url: \"settings\",\n          },\n          {\n            label: \"Add Service\",\n            url: \"createservice\",\n          },\n          {\n            label: \"Create User\",\n            url: \"createuser\",\n          },\n        ]}\n        rollup={{\n          after: 2,\n          view: \"view\",\n          hide: \"hide\",\n          activePath: \"/\",\n        }}\n        action={{\n          icon: SettingsMinor,\n          onClick: () => {},\n        }}\n      />\n      <Banner status=\"info\">\n        <p>Current version: {Version}</p>\n      </Banner>\n    </Navigation>\n  );\n\n  const newPage = <Generalsetting />;\n  return (\n    <Frame\n      topBar={topBarMarkup}\n      navigation={navigationMarkup}\n      showMobileNavigation={mobileNavigationActive}\n      onNavigationDismiss={toggleMobileNavigationActive}\n      skipToContentTarget={skipToContentRef.current}\n    >\n      {newPage}\n    </Frame>\n  );\n};\n\nexport default NewPage;\n","import React from \"react\";\nimport {\n  Page,\n  EmptyState,\n} from \"@shopify/polaris\";\n\nconst Home = () => {\n  return (\n    <Page fullWidth>\n      <EmptyState\n        heading=\"Login and Manage your store\"\n        action={{ content: \"Login\", url: \"login\" }}\n        image=\"https://cdn.shopify.com/s/files/1/0757/9955/files/empty-state.svg\"\n      >\n        <p>Track and receive your reports in a simple way.</p>\n      </EmptyState>\n    </Page>\n  );\n};\n\nexport default Home;\n","import React, { useCallback, useRef, useState } from \"react\";\nimport {\n  Card,\n  Layout,\n  FormLayout,\n  TextField,\n  Page,\n  Button,\n  Stack,\n  Banner,\n  Modal,\n  TextContainer,\n} from \"@shopify/polaris\";\nimport Logox from \"./img/Washh.png\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { API } from \"../../API\";\n\nconst Login = () => {\n  let history = useHistory();\n  const [active, setActive] = useState(false);\n  const node = useRef(null);\n\n  const [LoginFailed, setLoginFailed] = useState(false)\n  const handleclose = useCallback(() => setLoginFailed(!LoginFailed), [LoginFailed]);\n  const [Text, setText] = useState(\"\")\n\n  const handleClick = useCallback(() => {\n    node.current && node.current.input.focus();\n  }, []);\n\n  const handleFocus = useCallback(() => {\n    if (node.current == null) {\n      return;\n    }\n    node.current.input.select();\n    document.execCommand(\"copy\");\n  }, []);\n\n  const toggleModal = useCallback(() => setActive((active) => !active), []);\n  const [Number, setNumber] = useState(\"\");\n\n  const [username, setusername] = useState(\"\");\n  const [password, setpassword] = useState(\"\");\n  const handlelogin = () => {\n    axios\n      .post(API + \"/login\", {\n        username: username,\n        password: password,\n      })\n      .then((response) => {\n        if (\"access_token\" in response.data) {\n          localStorage.setItem(\"login\", true);\n          localStorage.setItem(\"role\", response.data.role);\n          localStorage.setItem(\"username\", response.data.username);\n          localStorage.setItem(\"token\", response.data.access_token);\n          history.push(\"/overview\");\n        }\n      })\n      .catch((err) => {\n        setText(err.response.data.detail)\n        handleclose()\n      });\n  };\n  const Logo = (\n    <div>\n      <img src={Logox} alt={\"logo\"}></img>\n    </div>\n  );\n\n  return (\n    <Page\n      title=\"Login\"\n      breadcrumbs={[{ content: \"Home\", url: \"/home\" }]}\n    >\n      <Layout>\n        <Layout.AnnotatedSection title=\"Login here\" description={Logo}>\n          <Card sectioned>\n            <FormLayout>\n              <TextField\n                type=\"text\"\n                label=\"username\"\n                value={username}\n                onChange={(data) => {\n                  setusername(data);\n                }}\n              />\n              <TextField\n                type=\"password\"\n                label=\"Password\"\n                value={password}\n                onChange={(data) => {\n                  setpassword(data);\n                }}\n              />\n              <Stack alignment=\"fill\" distribution=\"equalSpacing\">\n                <Button primary size=\"slim\" onClick={handlelogin}>\n                  Login\n                </Button>\n\n                <Button plain size=\"slim\" onClick={toggleModal}>\n                  Forgot password\n                </Button>\n              </Stack>\n            </FormLayout>\n          </Card>\n        </Layout.AnnotatedSection>\n      </Layout>\n      <Modal\n        open={active}\n        onClose={toggleModal}\n        title=\"Get password reset Link\"\n      >\n        <Modal.Section>\n          <Stack vertical>\n            <Stack.Item>\n              <TextContainer>\n                <p>\n                  Enter your mobile Number here. We will send your a password\n                  reset Link. Your IP Address has been recorded for fraud\n                  prevention.\n                </p>\n              </TextContainer>\n            </Stack.Item>\n            <Stack.Item fill>\n              <TextField\n                ref={node}\n                label=\"Registered Phone Number\"\n                onFocus={handleFocus}\n                value={Number}\n                placeholder=\"9876543210\"\n                prefix=\"+91\"\n                maxLength={10}\n                showCharacterCount\n                onChange={(data) => {\n                  setNumber(data);\n                }}\n                connectedRight={\n                  <Button primary onClick={handleClick}>\n                    Send Link\n                  </Button>\n                }\n              />\n            </Stack.Item>\n          </Stack>\n        </Modal.Section>\n      </Modal>\n\n      <Modal open={LoginFailed} onClose={handleclose}>\n            <Modal.Section>\n              <Banner status=\"critical\">\n                <TextContainer><p>{Text}</p></TextContainer>\n              </Banner>\n            </Modal.Section>\n          </Modal>\n    </Page>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport {\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\nconst isLogin = () => {\n  const Login = localStorage.getItem(\"login\") === \"true\";\n  return Login;\n};\n\nconst GetRole = () => {\n  return localStorage.getItem(\"role\");\n};\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  return (\n    // Show the component only when the user is logged in\n    // Otherwise, redirect the user to /signin page\n    <Route\n      {...rest}\n      render={(props) =>\n        isLogin() ? <Component {...props} /> : <Redirect to=\"/login\" />\n      }\n    />\n  );\n};\n\nconst OnlyAdminRoute = ({ component: Component, ...rest }) => {\n  if (GetRole() === \"Admin\") {\n    return (\n      // Show the component only when the user is logged in\n      // Otherwise, redirect the user to /signin page\n      <Route\n        {...rest}\n        render={(props) =>\n          isLogin() ? <Component {...props} /> : <Redirect to=\"/login\" />\n        }\n      />\n    );\n  } else {\n    return <Redirect to=\"/\" />;\n  }\n};\n\nconst LoginRoute = ({ component: Component, ...rest }) => {\n  return (\n    // Show the component only when the user is logged in\n    // Otherwise, redirect the user to /signin page\n    <Route\n      {...rest}\n      render={(props) =>\n        isLogin() ? <Redirect to=\"/\" /> : <Component {...props} />\n      }\n    />\n  );\n};\n\nexport { PrivateRoute, LoginRoute, OnlyAdminRoute };\n","import React from \"react\";\nimport \"./App.css\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport Overview from \"./Components/Overview/OverView\";\nimport Order from \"./Components/Order/Datatable\";\nimport NewOrder from \"./Components/Neworder/NewOrderCombiner\";\nimport Reports from \"./Components/Report/ReportPage\";\nimport Storemartics from \"./Components/Matrics/storestatics/StoreReportPage\";\nimport Drivemertics from \"./Components/Matrics/driverstatics/DriverReportPage\";\nimport Revenuemertics from \"./Components/Matrics/Revenuestatics/RevenueReportPage\";\nimport Coustmerstatics from \"./Components/Matrics/coustmerstatics/coustmerReportPage\";\nimport CreateStore from \"./Components/Admin/CreateStore/createstorepage\";\nimport Createuser from \"./Components/Admin/CreateUser/createuserpage\";\nimport Createservice from \"./Components/Admin/Createservice/CreateservicePage\";\nimport Storesetting from \"./Components/Admin/StoreSetting/StoresettingPage\";\nimport Usersetting from \"./Components/Admin/Usersetting/Usersettingpage\";\nimport Generalsetting from \"./Components/Admin/Generalsetting/generalsettingpage\";\nimport Home from \"./Components/Auth/Home\";\nimport Login from \"./Components/Auth/Login/Login\";\nimport { AppProvider } from \"@shopify/polaris\";\nimport enTranslations from \"@shopify/polaris/locales/en.json\";\nimport { PrivateRoute, LoginRoute, OnlyAdminRoute } from \"./PrivateRoute\";\n\nconst theme = {\n  colors: {\n    topBar: {\n      background: \"#fff\",\n      backgroundLighter: \"#F4F6F8\",\n      backgroundDarker: \"#DFE3E8\",\n      border: \"#C4CDD5\",\n      color: \"#212B36\",\n    },\n  },\n  logo: {\n    width: 50,\n    topBarSource: \"https://washh.in//assets/images/logo.png\",\n    url: \"https://washh.in\",\n    accessibilityLabel: \"Washh\",\n  },\n};\n\nfunction Link({ children, url = \"\", ...rest }) {\n  // Use an regular a tag for external and download links\n  if (isOutboundLink(url) || rest.download) {\n    return (\n      <a href={url} {...rest}>\n        {children}\n      </a>\n    );\n  }\n\n  return (\n    <RouterLink to={url} {...rest}>\n      {children}\n    </RouterLink>\n  );\n}\n\nfunction isOutboundLink(url) {\n  return /^(?:[a-z][a-z\\d+.-]*:|\\/\\/)/.test(url);\n}\n\nconst App = () => {\n  return (\n    <AppProvider\n      i18n={enTranslations}\n      theme={theme}\n      linkComponent={Link}\n    >\n      <Router>\n        <Switch>\n          <PrivateRoute path=\"/reports\" component={Reports} exact />\n          <PrivateRoute path=\"/neworder\" component={NewOrder} exact />\n          <PrivateRoute path=\"/order\" component={Order} exact />\n          <PrivateRoute path=\"/\" component={Overview} exact />\n          <PrivateRoute path=\"/overview\" component={Overview} exact />\n          <OnlyAdminRoute path=\"/storestatics\" component={Storemartics} exact />\n          <OnlyAdminRoute\n            path=\"/driverstatics\"\n            component={Drivemertics}\n            exact\n          />\n          <OnlyAdminRoute\n            path=\"/customerstatics\"\n            component={Coustmerstatics}\n            exact\n          />\n          <OnlyAdminRoute\n            path=\"/Revenuestatics\"\n            component={Revenuemertics}\n            exact\n          />\n          <OnlyAdminRoute path=\"/createstore\" component={CreateStore} exact />\n          <OnlyAdminRoute\n            path=\"/createservice\"\n            component={Createservice}\n            exact\n          />\n          <OnlyAdminRoute path=\"/storesetting\" component={Storesetting} exact />\n          <OnlyAdminRoute path=\"/usersetting\" component={Usersetting} exact />\n          <OnlyAdminRoute path=\"/createuser\" component={Createuser} exact />\n          <OnlyAdminRoute path=\"/settings\" component={Generalsetting} exact />\n          <Route path=\"/home\">\n            <Home />\n          </Route>\n          <LoginRoute path=\"/login\" component={Login} exact />\n        </Switch>\n      </Router>\n    </AppProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"@shopify/polaris/dist/styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}